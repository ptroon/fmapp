2020-05-20 00:01:12,924 INFO sqlalchemy.engine.base.Engine Thread-198 : BEGIN (implicit)
2020-05-20 00:01:12,928 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 00:01:12,928 INFO sqlalchemy.engine.base.Engine Thread-198 : ()
2020-05-20 00:01:12,930 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:01:12,931 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 00:01:12,931 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 00:01:12,933 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 00:01:12,933 INFO sqlalchemy.engine.base.Engine Thread-198 : (100,)
2020-05-20 00:01:12,934 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 00:01:12,934 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 00:01:12,934 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 00:01:12,934 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 00:01:12,934 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 00:01:12,934 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 00:01:12,936 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:01:12,936 INFO sqlalchemy.engine.base.Engine Thread-198 : (1, 1)
2020-05-20 00:01:12,937 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:12,937 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:12,952 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:12,952 INFO sqlalchemy.engine.base.Engine Thread-198 : ('philip', 1, 1)
2020-05-20 00:01:12,953 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:12,953 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:12,955 INFO sqlalchemy.engine.base.Engine Thread-198 : ROLLBACK
2020-05-20 00:01:13,202 INFO sqlalchemy.engine.base.Engine Thread-209 : BEGIN (implicit)
2020-05-20 00:01:13,205 INFO sqlalchemy.engine.base.Engine Thread-208 : BEGIN (implicit)
2020-05-20 00:01:13,206 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:01:13,210 INFO sqlalchemy.engine.base.Engine Thread-209 : (1, 1)
2020-05-20 00:01:13,210 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:01:13,209 INFO sqlalchemy.engine.base.Engine Thread-207 : BEGIN (implicit)
2020-05-20 00:01:13,212 INFO sqlalchemy.engine.base.Engine Thread-210 : BEGIN (implicit)
2020-05-20 00:01:13,215 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:01:13,215 INFO sqlalchemy.engine.base.Engine Thread-210 : (1, 1)
2020-05-20 00:01:13,214 INFO sqlalchemy.engine.base.Engine Thread-207 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:01:13,215 INFO sqlalchemy.engine.base.Engine Thread-207 : (1, 1)
2020-05-20 00:01:13,213 INFO sqlalchemy.engine.base.Engine Thread-208 : (1, 1)
2020-05-20 00:01:13,213 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:13,217 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:13,216 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:13,216 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:13,219 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:13,218 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:13,221 INFO sqlalchemy.engine.base.Engine Thread-207 : ROLLBACK
2020-05-20 00:01:13,217 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:13,222 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:13,219 INFO sqlalchemy.engine.base.Engine Thread-209 : ROLLBACK
2020-05-20 00:01:13,223 INFO sqlalchemy.engine.base.Engine Thread-208 : ROLLBACK
2020-05-20 00:01:13,220 INFO sqlalchemy.engine.base.Engine Thread-210 : ROLLBACK
2020-05-20 00:01:13,237 INFO sqlalchemy.engine.base.Engine Thread-211 : BEGIN (implicit)
2020-05-20 00:01:13,238 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:01:13,238 INFO sqlalchemy.engine.base.Engine Thread-211 : (1, 1)
2020-05-20 00:01:13,239 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:13,239 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:13,240 INFO sqlalchemy.engine.base.Engine Thread-211 : ROLLBACK
2020-05-20 00:01:13,260 INFO sqlalchemy.engine.base.Engine Thread-212 : BEGIN (implicit)
2020-05-20 00:01:13,261 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:01:13,261 INFO sqlalchemy.engine.base.Engine Thread-212 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:01:13,262 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:13,263 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:01:13,263 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:01:13,266 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:01:13,266 INFO sqlalchemy.engine.base.Engine Thread-212 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:01:13,266 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:13,271 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:01:13,271 INFO sqlalchemy.engine.base.Engine Thread-212 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:01:13,272 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:13,276 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:01:13,276 INFO sqlalchemy.engine.base.Engine Thread-212 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:01:13,277 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:13,277 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:01:13,278 INFO sqlalchemy.engine.base.Engine Thread-212 : ROLLBACK
2020-05-20 00:01:13,306 INFO sqlalchemy.engine.base.Engine Thread-213 : BEGIN (implicit)
2020-05-20 00:01:13,307 INFO sqlalchemy.engine.base.Engine Thread-213 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:01:13,307 INFO sqlalchemy.engine.base.Engine Thread-213 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:01:13,309 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:13,309 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:01:13,309 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:01:13,313 INFO sqlalchemy.engine.base.Engine Thread-213 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:01:13,313 INFO sqlalchemy.engine.base.Engine Thread-213 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:01:13,314 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:13,319 INFO sqlalchemy.engine.base.Engine Thread-213 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:01:13,319 INFO sqlalchemy.engine.base.Engine Thread-213 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:01:13,320 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:13,324 INFO sqlalchemy.engine.base.Engine Thread-213 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:01:13,324 INFO sqlalchemy.engine.base.Engine Thread-213 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:01:13,325 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:13,325 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:01:13,326 INFO sqlalchemy.engine.base.Engine Thread-213 : ROLLBACK
2020-05-20 00:01:16,921 INFO sqlalchemy.engine.base.Engine Thread-215 : BEGIN (implicit)
2020-05-20 00:01:16,922 INFO sqlalchemy.engine.base.Engine Thread-215 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:16,923 INFO sqlalchemy.engine.base.Engine Thread-215 : ('philip', 1, 1)
2020-05-20 00:01:16,923 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:16,924 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:16,933 INFO sqlalchemy.engine.base.Engine Thread-215 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:16,933 INFO sqlalchemy.engine.base.Engine Thread-215 : (108,)
2020-05-20 00:01:16,934 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:16,934 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:01:16,935 INFO sqlalchemy.engine.base.Engine Thread-215 : ROLLBACK
2020-05-20 00:01:25,265 INFO sqlalchemy.engine.base.Engine Thread-216 : BEGIN (implicit)
2020-05-20 00:01:25,266 INFO sqlalchemy.engine.base.Engine Thread-216 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:25,266 INFO sqlalchemy.engine.base.Engine Thread-216 : ('philip', 1, 1)
2020-05-20 00:01:25,267 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:25,268 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:25,277 INFO sqlalchemy.engine.base.Engine Thread-216 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:25,277 INFO sqlalchemy.engine.base.Engine Thread-216 : (101,)
2020-05-20 00:01:25,278 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:25,278 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:01:25,279 INFO sqlalchemy.engine.base.Engine Thread-216 : ROLLBACK
2020-05-20 00:01:25,316 INFO sqlalchemy.engine.base.Engine Thread-217 : BEGIN (implicit)
2020-05-20 00:01:25,317 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:25,317 INFO sqlalchemy.engine.base.Engine Thread-217 : ('philip', 1, 1)
2020-05-20 00:01:25,317 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:25,318 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:25,328 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:25,328 INFO sqlalchemy.engine.base.Engine Thread-217 : (103,)
2020-05-20 00:01:25,331 INFO sqlalchemy.engine.base.Engine Thread-218 : BEGIN (implicit)
2020-05-20 00:01:25,332 INFO sqlalchemy.engine.base.Engine Thread-218 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:25,332 INFO sqlalchemy.engine.base.Engine Thread-218 : ('philip', 1, 1)
2020-05-20 00:01:25,333 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:25,333 DEBUG sqlalchemy.engine.base.Engine Thread-218 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:25,334 INFO sqlalchemy.engine.base.Engine Thread-217 : ROLLBACK
2020-05-20 00:01:25,334 DEBUG sqlalchemy.engine.base.Engine Thread-218 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:25,343 INFO sqlalchemy.engine.base.Engine Thread-218 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:25,343 INFO sqlalchemy.engine.base.Engine Thread-218 : (101,)
2020-05-20 00:01:25,344 DEBUG sqlalchemy.engine.base.Engine Thread-218 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:25,344 DEBUG sqlalchemy.engine.base.Engine Thread-218 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:01:25,345 INFO sqlalchemy.engine.base.Engine Thread-218 : ROLLBACK
2020-05-20 00:01:30,137 INFO sqlalchemy.engine.base.Engine Thread-219 : BEGIN (implicit)
2020-05-20 00:01:30,138 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:30,138 INFO sqlalchemy.engine.base.Engine Thread-219 : ('philip', 1, 1)
2020-05-20 00:01:30,139 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:30,139 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:30,149 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:30,149 INFO sqlalchemy.engine.base.Engine Thread-219 : (102,)
2020-05-20 00:01:30,150 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:30,150 INFO sqlalchemy.engine.base.Engine Thread-219 : ROLLBACK
2020-05-20 00:01:30,589 INFO sqlalchemy.engine.base.Engine Thread-220 : BEGIN (implicit)
2020-05-20 00:01:30,591 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:30,591 INFO sqlalchemy.engine.base.Engine Thread-220 : ('philip', 1, 1)
2020-05-20 00:01:30,591 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:30,592 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:30,602 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:30,602 INFO sqlalchemy.engine.base.Engine Thread-220 : (101,)
2020-05-20 00:01:30,603 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:30,603 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:01:30,604 INFO sqlalchemy.engine.base.Engine Thread-220 : ROLLBACK
2020-05-20 00:01:34,552 INFO sqlalchemy.engine.base.Engine Thread-221 : BEGIN (implicit)
2020-05-20 00:01:34,553 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:34,553 INFO sqlalchemy.engine.base.Engine Thread-221 : ('philip', 1, 1)
2020-05-20 00:01:34,554 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:34,554 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:34,564 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:34,564 INFO sqlalchemy.engine.base.Engine Thread-221 : (108,)
2020-05-20 00:01:34,565 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:34,565 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:01:34,566 INFO sqlalchemy.engine.base.Engine Thread-221 : ROLLBACK
2020-05-20 00:01:41,291 INFO sqlalchemy.engine.base.Engine Thread-222 : BEGIN (implicit)
2020-05-20 00:01:41,293 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 00:01:41,293 INFO sqlalchemy.engine.base.Engine Thread-222 : ()
2020-05-20 00:01:41,295 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:01:41,296 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 00:01:41,296 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 00:01:41,298 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 00:01:41,298 INFO sqlalchemy.engine.base.Engine Thread-222 : (100,)
2020-05-20 00:01:41,299 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 00:01:41,299 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 00:01:41,299 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 00:01:41,299 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 00:01:41,299 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 00:01:41,299 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 00:01:41,301 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:01:41,301 INFO sqlalchemy.engine.base.Engine Thread-222 : (1, 1)
2020-05-20 00:01:41,302 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:41,302 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:41,306 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:41,306 INFO sqlalchemy.engine.base.Engine Thread-222 : ('philip', 1, 1)
2020-05-20 00:01:41,307 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:41,307 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:41,309 INFO sqlalchemy.engine.base.Engine Thread-222 : ROLLBACK
2020-05-20 00:01:41,578 INFO sqlalchemy.engine.base.Engine Thread-231 : BEGIN (implicit)
2020-05-20 00:01:41,579 INFO sqlalchemy.engine.base.Engine Thread-231 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:01:41,579 INFO sqlalchemy.engine.base.Engine Thread-231 : (1, 1)
2020-05-20 00:01:41,580 DEBUG sqlalchemy.engine.base.Engine Thread-231 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:41,583 DEBUG sqlalchemy.engine.base.Engine Thread-231 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:41,586 INFO sqlalchemy.engine.base.Engine Thread-232 : BEGIN (implicit)
2020-05-20 00:01:41,589 INFO sqlalchemy.engine.base.Engine Thread-233 : BEGIN (implicit)
2020-05-20 00:01:41,589 INFO sqlalchemy.engine.base.Engine Thread-231 : ROLLBACK
2020-05-20 00:01:41,590 INFO sqlalchemy.engine.base.Engine Thread-232 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:01:41,593 INFO sqlalchemy.engine.base.Engine Thread-234 : BEGIN (implicit)
2020-05-20 00:01:41,594 INFO sqlalchemy.engine.base.Engine Thread-233 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:01:41,596 INFO sqlalchemy.engine.base.Engine Thread-233 : (1, 1)
2020-05-20 00:01:41,595 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:01:41,596 INFO sqlalchemy.engine.base.Engine Thread-234 : (1, 1)
2020-05-20 00:01:41,594 INFO sqlalchemy.engine.base.Engine Thread-232 : (1, 1)
2020-05-20 00:01:41,597 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:41,597 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:41,598 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:41,599 INFO sqlalchemy.engine.base.Engine Thread-232 : ROLLBACK
2020-05-20 00:01:41,598 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:41,598 DEBUG sqlalchemy.engine.base.Engine Thread-233 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:41,600 INFO sqlalchemy.engine.base.Engine Thread-234 : ROLLBACK
2020-05-20 00:01:41,601 DEBUG sqlalchemy.engine.base.Engine Thread-233 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:41,602 INFO sqlalchemy.engine.base.Engine Thread-233 : ROLLBACK
2020-05-20 00:01:41,612 INFO sqlalchemy.engine.base.Engine Thread-235 : BEGIN (implicit)
2020-05-20 00:01:41,613 INFO sqlalchemy.engine.base.Engine Thread-235 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:01:41,613 INFO sqlalchemy.engine.base.Engine Thread-235 : (1, 1)
2020-05-20 00:01:41,614 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:41,614 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:41,615 INFO sqlalchemy.engine.base.Engine Thread-235 : ROLLBACK
2020-05-20 00:01:41,635 INFO sqlalchemy.engine.base.Engine Thread-236 : BEGIN (implicit)
2020-05-20 00:01:41,636 INFO sqlalchemy.engine.base.Engine Thread-236 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:01:41,636 INFO sqlalchemy.engine.base.Engine Thread-236 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:01:41,637 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:41,638 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:01:41,638 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:01:41,641 INFO sqlalchemy.engine.base.Engine Thread-236 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:01:41,641 INFO sqlalchemy.engine.base.Engine Thread-236 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:01:41,642 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:41,646 INFO sqlalchemy.engine.base.Engine Thread-236 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:01:41,646 INFO sqlalchemy.engine.base.Engine Thread-236 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:01:41,646 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:41,650 INFO sqlalchemy.engine.base.Engine Thread-236 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:01:41,650 INFO sqlalchemy.engine.base.Engine Thread-236 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:01:41,651 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:41,651 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:01:41,652 INFO sqlalchemy.engine.base.Engine Thread-236 : ROLLBACK
2020-05-20 00:01:41,674 INFO sqlalchemy.engine.base.Engine Thread-237 : BEGIN (implicit)
2020-05-20 00:01:41,676 INFO sqlalchemy.engine.base.Engine Thread-237 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:01:41,676 INFO sqlalchemy.engine.base.Engine Thread-237 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:01:41,677 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:41,677 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:01:41,677 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:01:41,680 INFO sqlalchemy.engine.base.Engine Thread-237 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:01:41,680 INFO sqlalchemy.engine.base.Engine Thread-237 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:01:41,681 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:41,685 INFO sqlalchemy.engine.base.Engine Thread-237 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:01:41,685 INFO sqlalchemy.engine.base.Engine Thread-237 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:01:41,687 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:41,691 INFO sqlalchemy.engine.base.Engine Thread-237 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:01:41,692 INFO sqlalchemy.engine.base.Engine Thread-237 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:01:41,693 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:01:41,693 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:01:41,694 INFO sqlalchemy.engine.base.Engine Thread-237 : ROLLBACK
2020-05-20 00:01:44,911 INFO sqlalchemy.engine.base.Engine Thread-239 : BEGIN (implicit)
2020-05-20 00:01:44,912 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:44,912 INFO sqlalchemy.engine.base.Engine Thread-239 : ('philip', 1, 1)
2020-05-20 00:01:44,913 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:44,913 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:44,922 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:44,922 INFO sqlalchemy.engine.base.Engine Thread-239 : (101,)
2020-05-20 00:01:44,923 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:44,923 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:01:44,924 INFO sqlalchemy.engine.base.Engine Thread-239 : ROLLBACK
2020-05-20 00:01:47,060 INFO sqlalchemy.engine.base.Engine Thread-240 : BEGIN (implicit)
2020-05-20 00:01:47,061 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:47,062 INFO sqlalchemy.engine.base.Engine Thread-240 : ('philip', 1, 1)
2020-05-20 00:01:47,062 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:47,063 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:47,071 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:47,071 INFO sqlalchemy.engine.base.Engine Thread-240 : (108,)
2020-05-20 00:01:47,072 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:47,072 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:01:47,073 INFO sqlalchemy.engine.base.Engine Thread-240 : ROLLBACK
2020-05-20 00:01:49,407 INFO sqlalchemy.engine.base.Engine Thread-241 : BEGIN (implicit)
2020-05-20 00:01:49,408 INFO sqlalchemy.engine.base.Engine Thread-241 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:49,408 INFO sqlalchemy.engine.base.Engine Thread-241 : ('philip', 1, 1)
2020-05-20 00:01:49,409 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:49,409 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:49,418 INFO sqlalchemy.engine.base.Engine Thread-241 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:49,418 INFO sqlalchemy.engine.base.Engine Thread-241 : (103,)
2020-05-20 00:01:49,418 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:49,419 INFO sqlalchemy.engine.base.Engine Thread-241 : ROLLBACK
2020-05-20 00:01:51,340 INFO sqlalchemy.engine.base.Engine Thread-242 : BEGIN (implicit)
2020-05-20 00:01:51,341 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:51,341 INFO sqlalchemy.engine.base.Engine Thread-242 : ('philip', 1, 1)
2020-05-20 00:01:51,342 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:51,342 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:51,351 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:51,351 INFO sqlalchemy.engine.base.Engine Thread-242 : (108,)
2020-05-20 00:01:51,352 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:51,352 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:01:51,353 INFO sqlalchemy.engine.base.Engine Thread-242 : ROLLBACK
2020-05-20 00:01:53,626 INFO sqlalchemy.engine.base.Engine Thread-243 : BEGIN (implicit)
2020-05-20 00:01:53,627 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:53,627 INFO sqlalchemy.engine.base.Engine Thread-243 : ('philip', 1, 1)
2020-05-20 00:01:53,628 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:53,628 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:53,637 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:53,637 INFO sqlalchemy.engine.base.Engine Thread-243 : (101,)
2020-05-20 00:01:53,638 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:53,638 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:01:53,639 INFO sqlalchemy.engine.base.Engine Thread-243 : ROLLBACK
2020-05-20 00:01:57,487 INFO sqlalchemy.engine.base.Engine Thread-244 : BEGIN (implicit)
2020-05-20 00:01:57,488 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:57,488 INFO sqlalchemy.engine.base.Engine Thread-244 : ('philip', 1, 1)
2020-05-20 00:01:57,489 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:57,489 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:57,500 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:57,500 INFO sqlalchemy.engine.base.Engine Thread-244 : (108,)
2020-05-20 00:01:57,501 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:57,501 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:01:57,502 INFO sqlalchemy.engine.base.Engine Thread-244 : ROLLBACK
2020-05-20 00:01:59,179 INFO sqlalchemy.engine.base.Engine Thread-245 : BEGIN (implicit)
2020-05-20 00:01:59,180 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:01:59,180 INFO sqlalchemy.engine.base.Engine Thread-245 : ('philip', 1, 1)
2020-05-20 00:01:59,181 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:01:59,181 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:01:59,190 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:01:59,190 INFO sqlalchemy.engine.base.Engine Thread-245 : (101,)
2020-05-20 00:01:59,191 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:01:59,191 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:01:59,192 INFO sqlalchemy.engine.base.Engine Thread-245 : ROLLBACK
2020-05-20 00:03:49,896 INFO sqlalchemy.engine.base.Engine Thread-246 : BEGIN (implicit)
2020-05-20 00:03:49,898 INFO sqlalchemy.engine.base.Engine Thread-246 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 00:03:49,898 INFO sqlalchemy.engine.base.Engine Thread-246 : ()
2020-05-20 00:03:49,900 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:03:49,900 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 00:03:49,900 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 00:03:49,902 INFO sqlalchemy.engine.base.Engine Thread-246 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 00:03:49,902 INFO sqlalchemy.engine.base.Engine Thread-246 : (100,)
2020-05-20 00:03:49,903 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 00:03:49,903 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 00:03:49,903 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 00:03:49,903 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 00:03:49,903 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 00:03:49,903 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 00:03:49,905 INFO sqlalchemy.engine.base.Engine Thread-246 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:03:49,905 INFO sqlalchemy.engine.base.Engine Thread-246 : (1, 1)
2020-05-20 00:03:49,906 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:03:49,907 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:03:49,920 INFO sqlalchemy.engine.base.Engine Thread-246 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:03:49,921 INFO sqlalchemy.engine.base.Engine Thread-246 : ('philip', 1, 1)
2020-05-20 00:03:49,921 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:03:49,921 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:03:49,923 INFO sqlalchemy.engine.base.Engine Thread-246 : ROLLBACK
2020-05-20 00:03:50,177 INFO sqlalchemy.engine.base.Engine Thread-255 : BEGIN (implicit)
2020-05-20 00:03:50,178 INFO sqlalchemy.engine.base.Engine Thread-255 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:03:50,179 INFO sqlalchemy.engine.base.Engine Thread-255 : (1, 1)
2020-05-20 00:03:50,181 INFO sqlalchemy.engine.base.Engine Thread-257 : BEGIN (implicit)
2020-05-20 00:03:50,185 INFO sqlalchemy.engine.base.Engine Thread-258 : BEGIN (implicit)
2020-05-20 00:03:50,185 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:03:50,188 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:03:50,188 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:03:50,186 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:03:50,189 INFO sqlalchemy.engine.base.Engine Thread-255 : ROLLBACK
2020-05-20 00:03:50,189 INFO sqlalchemy.engine.base.Engine Thread-258 : (1, 1)
2020-05-20 00:03:50,191 INFO sqlalchemy.engine.base.Engine Thread-256 : BEGIN (implicit)
2020-05-20 00:03:50,192 INFO sqlalchemy.engine.base.Engine Thread-256 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:03:50,192 INFO sqlalchemy.engine.base.Engine Thread-256 : (1, 1)
2020-05-20 00:03:50,191 INFO sqlalchemy.engine.base.Engine Thread-257 : (1, 1)
2020-05-20 00:03:50,193 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:03:50,194 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:03:50,195 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:03:50,195 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:03:50,196 INFO sqlalchemy.engine.base.Engine Thread-256 : ROLLBACK
2020-05-20 00:03:50,197 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:03:50,199 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:03:50,200 INFO sqlalchemy.engine.base.Engine Thread-257 : ROLLBACK
2020-05-20 00:03:50,198 INFO sqlalchemy.engine.base.Engine Thread-258 : ROLLBACK
2020-05-20 00:03:50,212 INFO sqlalchemy.engine.base.Engine Thread-259 : BEGIN (implicit)
2020-05-20 00:03:50,213 INFO sqlalchemy.engine.base.Engine Thread-259 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:03:50,213 INFO sqlalchemy.engine.base.Engine Thread-259 : (1, 1)
2020-05-20 00:03:50,214 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:03:50,214 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:03:50,215 INFO sqlalchemy.engine.base.Engine Thread-259 : ROLLBACK
2020-05-20 00:03:50,233 INFO sqlalchemy.engine.base.Engine Thread-260 : BEGIN (implicit)
2020-05-20 00:03:50,235 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:03:50,235 INFO sqlalchemy.engine.base.Engine Thread-260 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:03:50,236 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:03:50,236 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:03:50,236 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:03:50,239 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:03:50,239 INFO sqlalchemy.engine.base.Engine Thread-260 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:03:50,240 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:03:50,244 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:03:50,244 INFO sqlalchemy.engine.base.Engine Thread-260 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:03:50,245 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:03:50,249 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:03:50,249 INFO sqlalchemy.engine.base.Engine Thread-260 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:03:50,250 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:03:50,250 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:03:50,251 INFO sqlalchemy.engine.base.Engine Thread-260 : ROLLBACK
2020-05-20 00:03:50,276 INFO sqlalchemy.engine.base.Engine Thread-261 : BEGIN (implicit)
2020-05-20 00:03:50,277 INFO sqlalchemy.engine.base.Engine Thread-261 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:03:50,277 INFO sqlalchemy.engine.base.Engine Thread-261 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:03:50,279 DEBUG sqlalchemy.engine.base.Engine Thread-261 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:03:50,279 DEBUG sqlalchemy.engine.base.Engine Thread-261 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:03:50,279 DEBUG sqlalchemy.engine.base.Engine Thread-261 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:03:50,283 INFO sqlalchemy.engine.base.Engine Thread-261 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:03:50,283 INFO sqlalchemy.engine.base.Engine Thread-261 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:03:50,284 DEBUG sqlalchemy.engine.base.Engine Thread-261 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:03:50,289 INFO sqlalchemy.engine.base.Engine Thread-261 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:03:50,289 INFO sqlalchemy.engine.base.Engine Thread-261 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:03:50,290 DEBUG sqlalchemy.engine.base.Engine Thread-261 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:03:50,294 INFO sqlalchemy.engine.base.Engine Thread-261 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:03:50,294 INFO sqlalchemy.engine.base.Engine Thread-261 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:03:50,295 DEBUG sqlalchemy.engine.base.Engine Thread-261 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:03:50,295 DEBUG sqlalchemy.engine.base.Engine Thread-261 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:03:50,296 INFO sqlalchemy.engine.base.Engine Thread-261 : ROLLBACK
2020-05-20 00:03:55,089 INFO sqlalchemy.engine.base.Engine Thread-263 : BEGIN (implicit)
2020-05-20 00:03:55,090 INFO sqlalchemy.engine.base.Engine Thread-263 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:03:55,090 INFO sqlalchemy.engine.base.Engine Thread-263 : ('philip', 1, 1)
2020-05-20 00:03:55,091 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:03:55,092 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:03:55,100 INFO sqlalchemy.engine.base.Engine Thread-263 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:03:55,100 INFO sqlalchemy.engine.base.Engine Thread-263 : (108,)
2020-05-20 00:03:55,101 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:03:55,101 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:03:55,102 INFO sqlalchemy.engine.base.Engine Thread-263 : ROLLBACK
2020-05-20 00:04:01,063 INFO sqlalchemy.engine.base.Engine Thread-264 : BEGIN (implicit)
2020-05-20 00:04:01,065 INFO sqlalchemy.engine.base.Engine Thread-264 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:04:01,065 INFO sqlalchemy.engine.base.Engine Thread-264 : ('philip', 1, 1)
2020-05-20 00:04:01,066 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:04:01,066 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:04:01,075 INFO sqlalchemy.engine.base.Engine Thread-264 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:04:01,075 INFO sqlalchemy.engine.base.Engine Thread-264 : (101,)
2020-05-20 00:04:01,076 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:04:01,076 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:04:01,077 INFO sqlalchemy.engine.base.Engine Thread-264 : ROLLBACK
2020-05-20 00:07:01,013 INFO sqlalchemy.engine.base.Engine Thread-265 : BEGIN (implicit)
2020-05-20 00:07:01,016 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 00:07:01,016 INFO sqlalchemy.engine.base.Engine Thread-265 : ()
2020-05-20 00:07:01,018 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:07:01,018 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 00:07:01,018 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 00:07:01,020 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 00:07:01,020 INFO sqlalchemy.engine.base.Engine Thread-265 : (100,)
2020-05-20 00:07:01,021 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 00:07:01,021 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 00:07:01,021 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 00:07:01,021 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 00:07:01,021 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 00:07:01,021 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 00:07:01,023 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:07:01,023 INFO sqlalchemy.engine.base.Engine Thread-265 : (1, 1)
2020-05-20 00:07:01,024 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:07:01,024 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:07:01,039 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:07:01,040 INFO sqlalchemy.engine.base.Engine Thread-265 : ('philip', 1, 1)
2020-05-20 00:07:01,040 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:07:01,040 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:07:01,042 INFO sqlalchemy.engine.base.Engine Thread-265 : ROLLBACK
2020-05-20 00:07:01,333 INFO sqlalchemy.engine.base.Engine Thread-274 : BEGIN (implicit)
2020-05-20 00:07:01,334 INFO sqlalchemy.engine.base.Engine Thread-274 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:07:01,334 INFO sqlalchemy.engine.base.Engine Thread-274 : (1, 1)
2020-05-20 00:07:01,336 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:07:01,336 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:07:01,339 INFO sqlalchemy.engine.base.Engine Thread-275 : BEGIN (implicit)
2020-05-20 00:07:01,340 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:07:01,340 INFO sqlalchemy.engine.base.Engine Thread-275 : (1, 1)
2020-05-20 00:07:01,343 INFO sqlalchemy.engine.base.Engine Thread-276 : BEGIN (implicit)
2020-05-20 00:07:01,344 INFO sqlalchemy.engine.base.Engine Thread-276 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:07:01,344 INFO sqlalchemy.engine.base.Engine Thread-276 : (1, 1)
2020-05-20 00:07:01,343 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:07:01,347 INFO sqlalchemy.engine.base.Engine Thread-277 : BEGIN (implicit)
2020-05-20 00:07:01,348 INFO sqlalchemy.engine.base.Engine Thread-274 : ROLLBACK
2020-05-20 00:07:01,349 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:07:01,350 INFO sqlalchemy.engine.base.Engine Thread-277 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:07:01,352 INFO sqlalchemy.engine.base.Engine Thread-275 : ROLLBACK
2020-05-20 00:07:01,352 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:07:01,352 INFO sqlalchemy.engine.base.Engine Thread-277 : (1, 1)
2020-05-20 00:07:01,353 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:07:01,355 INFO sqlalchemy.engine.base.Engine Thread-276 : ROLLBACK
2020-05-20 00:07:01,355 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:07:01,356 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:07:01,358 INFO sqlalchemy.engine.base.Engine Thread-277 : ROLLBACK
2020-05-20 00:07:01,369 INFO sqlalchemy.engine.base.Engine Thread-278 : BEGIN (implicit)
2020-05-20 00:07:01,370 INFO sqlalchemy.engine.base.Engine Thread-278 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:07:01,371 INFO sqlalchemy.engine.base.Engine Thread-278 : (1, 1)
2020-05-20 00:07:01,371 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:07:01,372 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:07:01,373 INFO sqlalchemy.engine.base.Engine Thread-278 : ROLLBACK
2020-05-20 00:07:01,395 INFO sqlalchemy.engine.base.Engine Thread-279 : BEGIN (implicit)
2020-05-20 00:07:01,397 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:07:01,397 INFO sqlalchemy.engine.base.Engine Thread-279 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:07:01,398 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:07:01,398 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:07:01,398 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:07:01,402 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:07:01,402 INFO sqlalchemy.engine.base.Engine Thread-279 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:07:01,403 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:07:01,408 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:07:01,408 INFO sqlalchemy.engine.base.Engine Thread-279 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:07:01,409 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:07:01,415 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:07:01,415 INFO sqlalchemy.engine.base.Engine Thread-279 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:07:01,416 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:07:01,416 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:07:01,417 INFO sqlalchemy.engine.base.Engine Thread-279 : ROLLBACK
2020-05-20 00:07:01,446 INFO sqlalchemy.engine.base.Engine Thread-280 : BEGIN (implicit)
2020-05-20 00:07:01,447 INFO sqlalchemy.engine.base.Engine Thread-280 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:07:01,448 INFO sqlalchemy.engine.base.Engine Thread-280 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:07:01,450 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:07:01,450 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:07:01,450 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:07:01,453 INFO sqlalchemy.engine.base.Engine Thread-280 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:07:01,454 INFO sqlalchemy.engine.base.Engine Thread-280 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:07:01,454 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:07:01,459 INFO sqlalchemy.engine.base.Engine Thread-280 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:07:01,459 INFO sqlalchemy.engine.base.Engine Thread-280 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:07:01,460 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:07:01,465 INFO sqlalchemy.engine.base.Engine Thread-280 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:07:01,465 INFO sqlalchemy.engine.base.Engine Thread-280 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:07:01,466 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:07:01,466 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:07:01,467 INFO sqlalchemy.engine.base.Engine Thread-280 : ROLLBACK
2020-05-20 00:07:03,937 INFO sqlalchemy.engine.base.Engine Thread-282 : BEGIN (implicit)
2020-05-20 00:07:03,938 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:07:03,938 INFO sqlalchemy.engine.base.Engine Thread-282 : ('philip', 1, 1)
2020-05-20 00:07:03,939 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:07:03,939 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:07:03,949 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:07:03,949 INFO sqlalchemy.engine.base.Engine Thread-282 : (108,)
2020-05-20 00:07:03,950 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:07:03,950 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:07:03,951 INFO sqlalchemy.engine.base.Engine Thread-282 : ROLLBACK
2020-05-20 00:07:07,456 INFO sqlalchemy.engine.base.Engine Thread-283 : BEGIN (implicit)
2020-05-20 00:07:07,458 INFO sqlalchemy.engine.base.Engine Thread-283 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:07:07,458 INFO sqlalchemy.engine.base.Engine Thread-283 : ('philip', 1, 1)
2020-05-20 00:07:07,459 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:07:07,459 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:07:07,469 INFO sqlalchemy.engine.base.Engine Thread-283 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:07:07,469 INFO sqlalchemy.engine.base.Engine Thread-283 : (101,)
2020-05-20 00:07:07,469 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:07:07,470 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:07:07,470 INFO sqlalchemy.engine.base.Engine Thread-283 : ROLLBACK
2020-05-20 00:07:10,093 INFO sqlalchemy.engine.base.Engine Thread-284 : BEGIN (implicit)
2020-05-20 00:07:10,095 INFO sqlalchemy.engine.base.Engine Thread-284 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:07:10,095 INFO sqlalchemy.engine.base.Engine Thread-284 : ('philip', 1, 1)
2020-05-20 00:07:10,095 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:07:10,096 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:07:10,106 INFO sqlalchemy.engine.base.Engine Thread-284 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:07:10,106 INFO sqlalchemy.engine.base.Engine Thread-284 : (104,)
2020-05-20 00:07:10,106 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:07:10,107 INFO sqlalchemy.engine.base.Engine Thread-284 : ROLLBACK
2020-05-20 00:07:12,922 INFO sqlalchemy.engine.base.Engine Thread-285 : BEGIN (implicit)
2020-05-20 00:07:12,923 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:07:12,923 INFO sqlalchemy.engine.base.Engine Thread-285 : ('philip', 1, 1)
2020-05-20 00:07:12,924 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:07:12,924 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:07:12,933 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:07:12,933 INFO sqlalchemy.engine.base.Engine Thread-285 : (103,)
2020-05-20 00:07:12,934 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:07:12,935 INFO sqlalchemy.engine.base.Engine Thread-285 : ROLLBACK
2020-05-20 00:07:18,234 INFO sqlalchemy.engine.base.Engine Thread-286 : BEGIN (implicit)
2020-05-20 00:07:18,235 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:07:18,235 INFO sqlalchemy.engine.base.Engine Thread-286 : ('philip', 1, 1)
2020-05-20 00:07:18,236 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:07:18,236 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:07:18,248 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-05-20 00:07:18,248 INFO sqlalchemy.engine.base.Engine Thread-286 : ()
2020-05-20 00:07:18,249 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:07:18,249 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:07:18,249 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:07:18,250 INFO sqlalchemy.engine.base.Engine Thread-286 : ROLLBACK
2020-05-20 00:11:25,963 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-20 00:11:25,963 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:11:25,964 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-20 00:11:25,965 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-20 00:11:25,965 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-20 00:11:25,966 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:11:25,966 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-20 00:11:25,966 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-20 00:11:25,967 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-20 00:11:25,967 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:11:25,967 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-20 00:11:25,967 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-20 00:11:25,967 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-20 00:11:25,967 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:11:25,968 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-20 00:11:25,968 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-20 00:11:25,969 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-20 00:11:25,969 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:11:25,969 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-20 00:11:25,970 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:11:25,970 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-20 00:11:25,970 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:11:25,971 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-20 00:11:25,976 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 00:11:25,976 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:11:25,978 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:11:25,978 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 00:11:25,979 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 00:11:25,981 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 00:11:25,981 INFO sqlalchemy.engine.base.Engine Thread-2 : (100,)
2020-05-20 00:11:25,982 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 00:11:25,982 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 00:11:25,982 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 00:11:25,982 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 00:11:25,982 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 00:11:25,982 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 00:11:25,986 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:11:25,986 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-05-20 00:11:25,987 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:11:25,987 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:11:26,057 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:11:26,057 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-05-20 00:11:26,058 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:11:26,058 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:11:26,060 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-20 00:11:27,072 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-05-20 00:11:27,076 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:11:27,076 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-05-20 00:11:27,077 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:11:27,077 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:11:27,077 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-05-20 00:11:27,078 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:11:27,078 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-05-20 00:11:27,080 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:11:27,080 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:11:27,102 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-05-20 00:11:27,110 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-05-20 00:11:27,111 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-05-20 00:11:27,112 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-05-20 00:11:27,115 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:11:27,114 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:11:27,116 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-05-20 00:11:27,115 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-05-20 00:11:27,112 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-05-20 00:11:27,117 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:11:27,117 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-05-20 00:11:27,117 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:11:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:11:27,118 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:11:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:11:27,119 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:11:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:11:27,121 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-05-20 00:11:27,122 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-05-20 00:11:27,120 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-05-20 00:11:30,876 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-05-20 00:11:30,878 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:11:30,878 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:11:30,879 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:11:30,879 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:11:30,879 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:11:30,883 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:11:30,883 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:11:30,885 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:11:30,891 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:11:30,891 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:11:30,892 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:11:30,896 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:11:30,896 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:11:30,897 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:11:30,897 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:11:30,898 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-05-20 00:11:30,919 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-05-20 00:11:30,921 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:11:30,921 INFO sqlalchemy.engine.base.Engine Thread-18 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:11:30,922 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:11:30,922 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:11:30,922 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:11:30,925 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:11:30,925 INFO sqlalchemy.engine.base.Engine Thread-18 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:11:30,926 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:11:30,930 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:11:30,930 INFO sqlalchemy.engine.base.Engine Thread-18 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:11:30,930 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:11:30,934 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:11:30,935 INFO sqlalchemy.engine.base.Engine Thread-18 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:11:30,935 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:11:30,935 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:11:30,936 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-05-20 00:11:42,573 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-05-20 00:11:42,574 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:11:42,574 INFO sqlalchemy.engine.base.Engine Thread-19 : ('philip', 1, 1)
2020-05-20 00:11:42,576 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:11:42,576 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:11:42,586 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:11:42,586 INFO sqlalchemy.engine.base.Engine Thread-19 : (108,)
2020-05-20 00:11:42,586 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:11:42,587 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:11:42,588 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-05-20 00:11:46,745 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-05-20 00:11:46,746 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:11:46,746 INFO sqlalchemy.engine.base.Engine Thread-20 : ('philip', 1, 1)
2020-05-20 00:11:46,747 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:11:46,747 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:11:46,756 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:11:46,756 INFO sqlalchemy.engine.base.Engine Thread-20 : (101,)
2020-05-20 00:11:46,756 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:11:46,757 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:11:46,757 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-05-20 00:11:50,970 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-05-20 00:11:50,972 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:11:50,972 INFO sqlalchemy.engine.base.Engine Thread-21 : ('philip', 1, 1)
2020-05-20 00:11:50,972 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:11:50,973 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:11:50,981 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:11:50,981 INFO sqlalchemy.engine.base.Engine Thread-21 : (104,)
2020-05-20 00:11:50,982 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:11:50,982 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-05-20 00:12:11,092 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-05-20 00:12:11,093 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:12:11,093 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', 1, 1)
2020-05-20 00:12:11,094 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:12:11,094 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:12:11,103 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-05-20 00:12:11,103 INFO sqlalchemy.engine.base.Engine Thread-22 : ()
2020-05-20 00:12:11,104 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:12:11,104 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:12:11,104 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:12:11,105 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-05-20 00:15:49,627 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-20 00:15:49,627 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:15:49,628 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-20 00:15:49,629 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-20 00:15:49,629 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-20 00:15:49,629 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:15:49,630 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-20 00:15:49,630 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-20 00:15:49,630 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-20 00:15:49,630 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:15:49,631 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-20 00:15:49,631 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-20 00:15:49,631 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-20 00:15:49,631 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:15:49,632 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-20 00:15:49,632 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-20 00:15:49,633 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-20 00:15:49,633 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:15:49,633 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-20 00:15:49,633 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:15:49,634 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-20 00:15:49,634 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:15:49,635 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-20 00:15:49,640 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 00:15:49,640 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:15:49,642 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:15:49,642 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 00:15:49,642 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 00:15:49,645 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 00:15:49,645 INFO sqlalchemy.engine.base.Engine Thread-2 : (100,)
2020-05-20 00:15:49,645 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 00:15:49,646 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 00:15:49,646 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 00:15:49,646 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 00:15:49,646 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 00:15:49,646 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 00:15:49,650 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:15:49,650 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-05-20 00:15:49,650 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:15:49,651 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:15:49,724 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:15:49,724 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-05-20 00:15:49,725 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:15:49,725 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:15:49,727 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-20 00:15:50,007 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-05-20 00:15:50,011 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:15:50,011 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-05-20 00:15:50,012 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:15:50,012 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:15:50,013 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-05-20 00:15:50,014 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:15:50,014 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-05-20 00:15:50,014 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:15:50,014 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:15:50,025 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-05-20 00:15:50,028 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-05-20 00:15:50,029 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:15:50,029 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-05-20 00:15:50,030 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:15:50,033 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:15:50,034 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-05-20 00:15:50,046 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-05-20 00:15:50,050 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-05-20 00:15:50,051 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:15:50,051 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-05-20 00:15:50,052 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-05-20 00:15:50,054 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:15:50,054 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-05-20 00:15:50,054 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:15:50,055 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:15:50,056 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-05-20 00:15:50,056 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:15:50,056 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:15:50,057 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-05-20 00:15:50,078 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-05-20 00:15:50,080 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:15:50,081 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:15:50,082 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:15:50,082 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:15:50,082 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:15:50,085 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:15:50,085 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:15:50,086 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:15:50,091 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:15:50,091 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:15:50,092 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:15:50,096 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:15:50,096 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:15:50,097 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:15:50,097 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:15:50,098 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-05-20 00:15:50,126 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-05-20 00:15:50,127 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:15:50,127 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:15:50,129 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:15:50,129 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:15:50,129 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:15:50,132 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:15:50,133 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:15:50,137 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:15:50,141 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:15:50,141 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:15:50,142 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:15:50,146 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:15:50,146 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:15:50,147 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:15:50,147 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:15:50,147 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-05-20 00:16:00,346 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-05-20 00:16:00,347 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:16:00,348 INFO sqlalchemy.engine.base.Engine Thread-19 : ('philip', 1, 1)
2020-05-20 00:16:00,348 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:16:00,349 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:16:00,358 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-05-20 00:16:00,358 INFO sqlalchemy.engine.base.Engine Thread-19 : ()
2020-05-20 00:16:00,359 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:16:00,359 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:16:00,359 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:16:00,360 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-05-20 00:16:04,081 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-05-20 00:16:04,082 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:16:04,082 INFO sqlalchemy.engine.base.Engine Thread-20 : ('philip', 1, 1)
2020-05-20 00:16:04,083 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:16:04,083 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:16:04,093 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-05-20 00:16:04,093 INFO sqlalchemy.engine.base.Engine Thread-20 : ()
2020-05-20 00:16:04,094 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:16:04,094 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:16:04,094 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:16:04,095 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-05-20 00:16:14,284 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-05-20 00:16:14,285 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:16:14,285 INFO sqlalchemy.engine.base.Engine Thread-21 : ('philip', 1, 1)
2020-05-20 00:16:14,286 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:16:14,286 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:16:14,296 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-05-20 00:16:14,296 INFO sqlalchemy.engine.base.Engine Thread-21 : ()
2020-05-20 00:16:14,296 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:16:14,297 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:16:14,297 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:16:14,298 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-05-20 00:16:16,992 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-05-20 00:16:16,993 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:16:16,993 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', 1, 1)
2020-05-20 00:16:16,994 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:16:16,994 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:16:17,003 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-05-20 00:16:17,003 INFO sqlalchemy.engine.base.Engine Thread-22 : ()
2020-05-20 00:16:17,003 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:16:17,004 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:16:17,004 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:16:17,005 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-05-20 00:16:25,879 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-05-20 00:16:25,880 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:16:25,880 INFO sqlalchemy.engine.base.Engine Thread-23 : ('philip', 1, 1)
2020-05-20 00:16:25,881 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:16:25,881 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:16:25,892 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:16:25,892 INFO sqlalchemy.engine.base.Engine Thread-23 : (0,)
2020-05-20 00:16:25,893 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:16:25,894 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-05-20 00:17:10,995 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-20 00:17:10,995 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:17:10,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-20 00:17:10,997 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-20 00:17:10,997 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-20 00:17:10,997 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:17:10,998 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-20 00:17:10,998 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-20 00:17:10,998 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-20 00:17:10,998 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:17:10,999 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-20 00:17:10,999 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-20 00:17:10,999 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-20 00:17:10,999 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:17:11,000 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-20 00:17:11,000 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-20 00:17:11,001 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-20 00:17:11,001 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:17:11,001 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-20 00:17:11,001 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:17:11,002 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-20 00:17:11,002 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:17:11,003 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-20 00:17:11,009 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 00:17:11,009 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 00:17:11,010 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:17:11,010 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 00:17:11,011 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 00:17:11,013 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 00:17:11,013 INFO sqlalchemy.engine.base.Engine Thread-2 : (100,)
2020-05-20 00:17:11,014 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 00:17:11,014 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 00:17:11,014 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 00:17:11,014 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 00:17:11,014 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 00:17:11,014 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 00:17:11,018 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:17:11,018 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-05-20 00:17:11,019 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:17:11,019 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:17:11,089 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:17:11,089 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-05-20 00:17:11,090 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:17:11,090 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:17:11,092 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-20 00:17:11,381 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-05-20 00:17:11,382 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:17:11,382 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-05-20 00:17:11,385 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:17:11,388 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:17:11,389 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-05-20 00:17:11,397 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:17:11,389 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-05-20 00:17:11,403 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:17:11,402 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-05-20 00:17:11,402 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-05-20 00:17:11,405 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:17:11,402 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-05-20 00:17:11,405 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-05-20 00:17:11,404 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-05-20 00:17:11,405 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:17:11,406 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:17:11,407 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:17:11,407 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:17:11,408 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:17:11,408 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:17:11,409 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-05-20 00:17:11,410 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-05-20 00:17:11,411 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-05-20 00:17:11,416 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-05-20 00:17:11,417 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:17:11,418 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-05-20 00:17:11,418 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:17:11,418 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:17:11,419 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-05-20 00:17:11,446 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-05-20 00:17:11,448 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:17:11,448 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:17:11,449 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:17:11,449 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:17:11,449 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:17:11,452 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:17:11,453 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:17:11,453 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:17:11,458 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:17:11,458 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:17:11,459 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:17:11,463 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:17:11,463 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:17:11,464 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:17:11,464 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:17:11,464 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-05-20 00:17:11,489 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-05-20 00:17:11,490 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:17:11,490 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:17:11,493 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:17:11,493 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:17:11,493 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:17:11,497 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:17:11,497 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:17:11,498 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:17:11,502 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:17:11,502 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:17:11,503 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:17:11,507 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:17:11,507 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:17:11,508 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:17:11,508 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:17:11,509 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-05-20 00:17:23,244 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-05-20 00:17:23,245 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:17:23,245 INFO sqlalchemy.engine.base.Engine Thread-19 : ('philip', 1, 1)
2020-05-20 00:17:23,246 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:17:23,246 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:17:23,255 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:17:23,255 INFO sqlalchemy.engine.base.Engine Thread-19 : (108,)
2020-05-20 00:17:23,256 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:17:23,256 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:17:23,257 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-05-20 00:17:25,612 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-05-20 00:17:25,613 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:17:25,613 INFO sqlalchemy.engine.base.Engine Thread-20 : ('philip', 1, 1)
2020-05-20 00:17:25,614 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:17:25,614 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:17:25,623 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:17:25,623 INFO sqlalchemy.engine.base.Engine Thread-20 : (101,)
2020-05-20 00:17:25,624 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:17:25,624 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:17:25,625 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-05-20 00:17:28,127 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-05-20 00:17:28,128 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:17:28,128 INFO sqlalchemy.engine.base.Engine Thread-21 : ('philip', 1, 1)
2020-05-20 00:17:28,129 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:17:28,129 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:17:28,138 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-05-20 00:17:28,138 INFO sqlalchemy.engine.base.Engine Thread-21 : ()
2020-05-20 00:17:28,138 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:17:28,139 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:17:28,139 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:17:28,139 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-05-20 00:17:36,332 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-05-20 00:17:36,333 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:17:36,333 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', 1, 1)
2020-05-20 00:17:36,334 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:17:36,334 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:17:36,343 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:17:36,343 INFO sqlalchemy.engine.base.Engine Thread-22 : (103,)
2020-05-20 00:17:36,343 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:17:36,344 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-05-20 00:18:38,493 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-05-20 00:18:38,496 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 00:18:38,496 INFO sqlalchemy.engine.base.Engine Thread-23 : ()
2020-05-20 00:18:38,500 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:18:38,501 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 00:18:38,501 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 00:18:38,503 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 00:18:38,503 INFO sqlalchemy.engine.base.Engine Thread-23 : (100,)
2020-05-20 00:18:38,503 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 00:18:38,504 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 00:18:38,504 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 00:18:38,504 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 00:18:38,504 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 00:18:38,504 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 00:18:38,506 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:18:38,506 INFO sqlalchemy.engine.base.Engine Thread-23 : (1, 1)
2020-05-20 00:18:38,507 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:18:38,507 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:18:38,520 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:18:38,521 INFO sqlalchemy.engine.base.Engine Thread-23 : ('philip', 1, 1)
2020-05-20 00:18:38,521 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:18:38,522 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:18:38,523 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-05-20 00:18:38,773 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-05-20 00:18:38,774 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:18:38,775 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-05-20 00:18:38,777 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-05-20 00:18:38,779 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:18:38,779 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-05-20 00:18:38,779 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:18:38,780 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:18:38,780 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:18:38,783 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-05-20 00:18:38,784 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-05-20 00:18:38,784 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:18:38,785 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:18:38,789 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-05-20 00:18:38,789 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:18:38,790 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:18:38,791 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-05-20 00:18:38,791 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-05-20 00:18:38,787 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-05-20 00:18:38,793 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:18:38,793 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-05-20 00:18:38,794 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:18:38,795 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:18:38,796 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-05-20 00:18:38,812 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-05-20 00:18:38,813 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:18:38,813 INFO sqlalchemy.engine.base.Engine Thread-36 : (1, 1)
2020-05-20 00:18:38,813 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:18:38,814 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:18:38,815 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-05-20 00:18:38,842 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-05-20 00:18:38,843 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:18:38,843 INFO sqlalchemy.engine.base.Engine Thread-37 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:18:38,844 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:18:38,844 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:18:38,844 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:18:38,847 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:18:38,848 INFO sqlalchemy.engine.base.Engine Thread-37 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:18:38,848 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:18:38,852 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:18:38,853 INFO sqlalchemy.engine.base.Engine Thread-37 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:18:38,853 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:18:38,857 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:18:38,857 INFO sqlalchemy.engine.base.Engine Thread-37 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:18:38,858 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:18:38,858 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:18:38,859 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-05-20 00:18:38,890 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-05-20 00:18:38,891 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:18:38,892 INFO sqlalchemy.engine.base.Engine Thread-39 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:18:38,893 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:18:38,893 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:18:38,893 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:18:38,897 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:18:38,897 INFO sqlalchemy.engine.base.Engine Thread-39 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:18:38,898 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:18:38,902 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:18:38,902 INFO sqlalchemy.engine.base.Engine Thread-39 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:18:38,903 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:18:38,907 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:18:38,907 INFO sqlalchemy.engine.base.Engine Thread-39 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:18:38,908 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:18:38,908 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:18:38,909 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-05-20 00:18:42,219 INFO sqlalchemy.engine.base.Engine Thread-40 : BEGIN (implicit)
2020-05-20 00:18:42,220 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:18:42,220 INFO sqlalchemy.engine.base.Engine Thread-40 : ('philip', 1, 1)
2020-05-20 00:18:42,221 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:18:42,221 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:18:42,231 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:18:42,232 INFO sqlalchemy.engine.base.Engine Thread-40 : (108,)
2020-05-20 00:18:42,232 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:18:42,233 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:18:42,233 INFO sqlalchemy.engine.base.Engine Thread-40 : ROLLBACK
2020-05-20 00:18:44,753 INFO sqlalchemy.engine.base.Engine Thread-41 : BEGIN (implicit)
2020-05-20 00:18:44,754 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:18:44,754 INFO sqlalchemy.engine.base.Engine Thread-41 : ('philip', 1, 1)
2020-05-20 00:18:44,755 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:18:44,755 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:18:44,764 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:18:44,764 INFO sqlalchemy.engine.base.Engine Thread-41 : (101,)
2020-05-20 00:18:44,765 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:18:44,765 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:18:44,765 INFO sqlalchemy.engine.base.Engine Thread-41 : ROLLBACK
2020-05-20 00:18:46,979 INFO sqlalchemy.engine.base.Engine Thread-42 : BEGIN (implicit)
2020-05-20 00:18:46,980 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:18:46,981 INFO sqlalchemy.engine.base.Engine Thread-42 : ('philip', 1, 1)
2020-05-20 00:18:46,981 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:18:46,982 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:18:46,990 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-05-20 00:18:46,990 INFO sqlalchemy.engine.base.Engine Thread-42 : ()
2020-05-20 00:18:46,991 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:18:46,991 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:18:46,991 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:18:46,992 INFO sqlalchemy.engine.base.Engine Thread-42 : ROLLBACK
2020-05-20 00:19:47,292 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-05-20 00:19:47,294 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:19:47,294 INFO sqlalchemy.engine.base.Engine Thread-43 : ('philip', 1, 1)
2020-05-20 00:19:47,295 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:19:47,295 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:19:47,304 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:19:47,304 INFO sqlalchemy.engine.base.Engine Thread-43 : (103,)
2020-05-20 00:19:47,305 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:19:47,306 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-05-20 00:19:51,286 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-05-20 00:19:51,287 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:19:51,287 INFO sqlalchemy.engine.base.Engine Thread-44 : ('philip', 1, 1)
2020-05-20 00:19:51,288 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:19:51,288 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:19:51,300 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:19:51,300 INFO sqlalchemy.engine.base.Engine Thread-44 : (101,)
2020-05-20 00:19:51,301 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:19:51,301 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:19:51,302 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-05-20 00:19:54,812 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-05-20 00:19:54,813 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:19:54,813 INFO sqlalchemy.engine.base.Engine Thread-45 : ('philip', 1, 1)
2020-05-20 00:19:54,814 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:19:54,814 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:19:54,823 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:19:54,823 INFO sqlalchemy.engine.base.Engine Thread-45 : (102,)
2020-05-20 00:19:54,823 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:19:54,824 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-05-20 00:19:58,319 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-05-20 00:19:58,321 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:19:58,321 INFO sqlalchemy.engine.base.Engine Thread-46 : ('philip', 1, 1)
2020-05-20 00:19:58,322 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:19:58,322 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:19:58,331 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:19:58,331 INFO sqlalchemy.engine.base.Engine Thread-46 : (108,)
2020-05-20 00:19:58,332 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:19:58,332 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:19:58,333 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-05-20 00:20:00,592 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-05-20 00:20:00,593 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:20:00,593 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-05-20 00:20:00,594 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:00,594 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:00,604 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-05-20 00:20:00,604 INFO sqlalchemy.engine.base.Engine Thread-47 : ()
2020-05-20 00:20:00,604 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:20:00,605 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:20:00,605 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:20:00,606 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-05-20 00:20:04,051 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-05-20 00:20:04,052 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:20:04,052 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-05-20 00:20:04,053 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:04,053 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:04,062 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:20:04,062 INFO sqlalchemy.engine.base.Engine Thread-48 : (104,)
2020-05-20 00:20:04,062 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:20:04,063 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-05-20 00:20:08,664 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-05-20 00:20:08,665 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:20:08,665 INFO sqlalchemy.engine.base.Engine Thread-49 : ('philip', 1, 1)
2020-05-20 00:20:08,666 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:08,666 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:08,676 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:20:08,677 INFO sqlalchemy.engine.base.Engine Thread-49 : (108,)
2020-05-20 00:20:08,677 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:20:08,678 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 00:20:08,678 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-05-20 00:20:12,701 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-05-20 00:20:12,704 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-05-20 00:20:12,704 INFO sqlalchemy.engine.base.Engine Thread-50 : ('0', 1)
2020-05-20 00:20:12,705 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-05-20 00:20:12,711 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 00:20:12,711 INFO sqlalchemy.engine.base.Engine Thread-50 : ()
2020-05-20 00:20:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:20:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 00:20:12,713 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 00:20:12,714 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 00:20:12,714 INFO sqlalchemy.engine.base.Engine Thread-50 : (97,)
2020-05-20 00:20:12,714 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 00:20:12,715 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 00:20:12,715 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 00:20:12,718 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-05-20 00:20:12,718 INFO sqlalchemy.engine.base.Engine Thread-50 : (1, 1)
2020-05-20 00:20:12,719 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:20:12,719 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 00:20:12,724 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:12,724 INFO sqlalchemy.engine.base.Engine Thread-50 : (1, 1)
2020-05-20 00:20:12,724 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:12,725 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:12,783 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:20:12,783 INFO sqlalchemy.engine.base.Engine Thread-50 : ('philip', 1, 1)
2020-05-20 00:20:12,784 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:12,784 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:12,788 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:20:12,789 INFO sqlalchemy.engine.base.Engine Thread-50 : ('philip', 1, 1)
2020-05-20 00:20:12,789 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:12,789 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:12,790 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-05-20 00:20:13,044 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-05-20 00:20:13,046 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:13,046 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-05-20 00:20:13,049 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-05-20 00:20:13,049 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:13,055 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:13,052 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:13,056 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-05-20 00:20:13,051 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-05-20 00:20:13,055 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-05-20 00:20:13,058 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:13,059 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-05-20 00:20:13,058 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:13,059 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:13,056 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-05-20 00:20:13,059 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:13,061 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-05-20 00:20:13,060 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-05-20 00:20:13,062 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:13,062 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:13,063 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:13,063 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:13,065 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-05-20 00:20:13,066 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-05-20 00:20:13,078 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-05-20 00:20:13,079 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:13,079 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-05-20 00:20:13,080 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:13,080 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:13,081 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-05-20 00:20:17,807 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-05-20 00:20:17,810 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-05-20 00:20:17,812 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:17,816 INFO sqlalchemy.engine.base.Engine Thread-64 : (1, 1)
2020-05-20 00:20:17,816 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:17,814 INFO sqlalchemy.engine.base.Engine Thread-66 : BEGIN (implicit)
2020-05-20 00:20:17,817 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-05-20 00:20:17,818 INFO sqlalchemy.engine.base.Engine Thread-67 : BEGIN (implicit)
2020-05-20 00:20:17,819 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:17,821 INFO sqlalchemy.engine.base.Engine Thread-66 : (1, 1)
2020-05-20 00:20:17,821 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:17,821 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:17,823 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:17,822 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:17,824 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:17,824 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-05-20 00:20:17,820 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:17,822 INFO sqlalchemy.engine.base.Engine Thread-67 : (1, 1)
2020-05-20 00:20:17,825 INFO sqlalchemy.engine.base.Engine Thread-66 : ROLLBACK
2020-05-20 00:20:17,826 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:17,828 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-05-20 00:20:17,829 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:17,829 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:17,830 INFO sqlalchemy.engine.base.Engine Thread-67 : ROLLBACK
2020-05-20 00:20:17,836 INFO sqlalchemy.engine.base.Engine Thread-68 : BEGIN (implicit)
2020-05-20 00:20:17,837 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:17,837 INFO sqlalchemy.engine.base.Engine Thread-68 : (1, 1)
2020-05-20 00:20:17,838 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:17,838 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:17,839 INFO sqlalchemy.engine.base.Engine Thread-68 : ROLLBACK
2020-05-20 00:20:18,667 INFO sqlalchemy.engine.base.Engine Thread-69 : BEGIN (implicit)
2020-05-20 00:20:18,669 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 00:20:18,669 INFO sqlalchemy.engine.base.Engine Thread-69 : ()
2020-05-20 00:20:18,670 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:20:18,671 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 00:20:18,671 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 00:20:18,673 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 00:20:18,673 INFO sqlalchemy.engine.base.Engine Thread-69 : (100,)
2020-05-20 00:20:18,673 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 00:20:18,674 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 00:20:18,674 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 00:20:18,674 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 00:20:18,674 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 00:20:18,674 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 00:20:18,676 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:18,676 INFO sqlalchemy.engine.base.Engine Thread-69 : (1, 1)
2020-05-20 00:20:18,676 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:18,677 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:18,681 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:20:18,681 INFO sqlalchemy.engine.base.Engine Thread-69 : ('philip', 1, 1)
2020-05-20 00:20:18,682 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:18,682 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:18,684 INFO sqlalchemy.engine.base.Engine Thread-69 : ROLLBACK
2020-05-20 00:20:18,914 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-05-20 00:20:18,917 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-05-20 00:20:18,919 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-05-20 00:20:18,922 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:18,925 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:18,931 INFO sqlalchemy.engine.base.Engine Thread-79 : (1, 1)
2020-05-20 00:20:18,929 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:18,929 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-05-20 00:20:18,928 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-05-20 00:20:18,932 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:18,932 INFO sqlalchemy.engine.base.Engine Thread-81 : (1, 1)
2020-05-20 00:20:18,931 INFO sqlalchemy.engine.base.Engine Thread-80 : (1, 1)
2020-05-20 00:20:18,933 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:18,933 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:18,934 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:18,935 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:18,935 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-05-20 00:20:18,934 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:18,936 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:18,937 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-05-20 00:20:18,936 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:18,939 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:18,940 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-05-20 00:20:18,944 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-05-20 00:20:18,945 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:20:18,945 INFO sqlalchemy.engine.base.Engine Thread-82 : (1, 1)
2020-05-20 00:20:18,946 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-05-20 00:20:18,946 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:20:18,946 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:20:18,947 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-05-20 00:20:18,970 INFO sqlalchemy.engine.base.Engine Thread-83 : BEGIN (implicit)
2020-05-20 00:20:18,971 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:20:18,971 INFO sqlalchemy.engine.base.Engine Thread-83 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:20:18,972 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:20:18,972 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:20:18,972 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:20:18,976 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:20:18,976 INFO sqlalchemy.engine.base.Engine Thread-83 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:20:18,976 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:20:18,981 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:20:18,981 INFO sqlalchemy.engine.base.Engine Thread-83 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:20:18,982 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:20:18,987 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:20:18,987 INFO sqlalchemy.engine.base.Engine Thread-83 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:20:18,988 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:20:18,988 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:20:18,989 INFO sqlalchemy.engine.base.Engine Thread-83 : ROLLBACK
2020-05-20 00:20:19,013 INFO sqlalchemy.engine.base.Engine Thread-84 : BEGIN (implicit)
2020-05-20 00:20:19,014 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:20:19,014 INFO sqlalchemy.engine.base.Engine Thread-84 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:20:19,016 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:20:19,017 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:20:19,017 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:20:19,020 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:20:19,020 INFO sqlalchemy.engine.base.Engine Thread-84 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:20:19,021 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:20:19,025 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:20:19,026 INFO sqlalchemy.engine.base.Engine Thread-84 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:20:19,026 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:20:19,030 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:20:19,031 INFO sqlalchemy.engine.base.Engine Thread-84 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:20:19,031 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:20:19,032 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:20:19,032 INFO sqlalchemy.engine.base.Engine Thread-84 : ROLLBACK
2020-05-20 00:23:32,240 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-05-20 00:23:32,242 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:23:32,242 INFO sqlalchemy.engine.base.Engine Thread-86 : ('philip', 1, 1)
2020-05-20 00:23:32,244 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:32,244 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:32,253 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 00:23:32,253 INFO sqlalchemy.engine.base.Engine Thread-86 : (101,)
2020-05-20 00:23:32,254 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 00:23:32,254 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 00:23:32,255 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-05-20 00:23:33,293 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-05-20 00:23:33,294 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-05-20 00:23:33,294 INFO sqlalchemy.engine.base.Engine Thread-87 : ('0', 1)
2020-05-20 00:23:33,295 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-05-20 00:23:33,300 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 00:23:33,300 INFO sqlalchemy.engine.base.Engine Thread-87 : ()
2020-05-20 00:23:33,301 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:23:33,301 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 00:23:33,302 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 00:23:33,303 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 00:23:33,303 INFO sqlalchemy.engine.base.Engine Thread-87 : (97,)
2020-05-20 00:23:33,304 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 00:23:33,304 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 00:23:33,304 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 00:23:33,307 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-05-20 00:23:33,307 INFO sqlalchemy.engine.base.Engine Thread-87 : (2, 1)
2020-05-20 00:23:33,308 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:23:33,308 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 00:23:33,311 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:23:33,311 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-05-20 00:23:33,311 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:33,311 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:33,316 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:23:33,316 INFO sqlalchemy.engine.base.Engine Thread-87 : ('philip', 1, 1)
2020-05-20 00:23:33,316 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:33,317 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:33,321 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:23:33,321 INFO sqlalchemy.engine.base.Engine Thread-87 : ('philip', 1, 1)
2020-05-20 00:23:33,322 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:33,322 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:33,323 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-05-20 00:23:33,625 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-05-20 00:23:33,627 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-05-20 00:23:33,628 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:23:33,632 INFO sqlalchemy.engine.base.Engine Thread-96 : (1, 1)
2020-05-20 00:23:33,629 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:23:33,632 INFO sqlalchemy.engine.base.Engine Thread-97 : (1, 1)
2020-05-20 00:23:33,632 INFO sqlalchemy.engine.base.Engine Thread-98 : BEGIN (implicit)
2020-05-20 00:23:33,633 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:33,634 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:33,636 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:33,635 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:33,638 INFO sqlalchemy.engine.base.Engine Thread-96 : ROLLBACK
2020-05-20 00:23:33,637 INFO sqlalchemy.engine.base.Engine Thread-97 : ROLLBACK
2020-05-20 00:23:33,635 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:23:33,641 INFO sqlalchemy.engine.base.Engine Thread-99 : BEGIN (implicit)
2020-05-20 00:23:33,641 INFO sqlalchemy.engine.base.Engine Thread-98 : (1, 1)
2020-05-20 00:23:33,643 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:23:33,643 INFO sqlalchemy.engine.base.Engine Thread-99 : (1, 1)
2020-05-20 00:23:33,644 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:33,644 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:33,644 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:33,645 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:33,646 INFO sqlalchemy.engine.base.Engine Thread-99 : ROLLBACK
2020-05-20 00:23:33,647 INFO sqlalchemy.engine.base.Engine Thread-98 : ROLLBACK
2020-05-20 00:23:33,663 INFO sqlalchemy.engine.base.Engine Thread-100 : BEGIN (implicit)
2020-05-20 00:23:33,664 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:23:33,665 INFO sqlalchemy.engine.base.Engine Thread-100 : (1, 1)
2020-05-20 00:23:33,665 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:33,665 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:33,666 INFO sqlalchemy.engine.base.Engine Thread-100 : ROLLBACK
2020-05-20 00:23:38,233 INFO sqlalchemy.engine.base.Engine Thread-101 : BEGIN (implicit)
2020-05-20 00:23:38,234 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 00:23:38,235 INFO sqlalchemy.engine.base.Engine Thread-101 : ()
2020-05-20 00:23:38,236 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 00:23:38,236 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 00:23:38,236 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 00:23:38,237 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 00:23:38,237 INFO sqlalchemy.engine.base.Engine Thread-101 : (100,)
2020-05-20 00:23:38,238 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 00:23:38,238 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 00:23:38,238 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 00:23:38,238 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 00:23:38,239 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 00:23:38,239 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 00:23:38,241 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:23:38,241 INFO sqlalchemy.engine.base.Engine Thread-101 : (1, 1)
2020-05-20 00:23:38,241 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:38,242 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:38,256 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 00:23:38,256 INFO sqlalchemy.engine.base.Engine Thread-101 : ('philip', 1, 1)
2020-05-20 00:23:38,257 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:38,257 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:38,258 INFO sqlalchemy.engine.base.Engine Thread-101 : ROLLBACK
2020-05-20 00:23:38,514 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-05-20 00:23:38,517 INFO sqlalchemy.engine.base.Engine Thread-111 : BEGIN (implicit)
2020-05-20 00:23:38,518 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:23:38,519 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:23:38,522 INFO sqlalchemy.engine.base.Engine Thread-112 : BEGIN (implicit)
2020-05-20 00:23:38,522 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-05-20 00:23:38,525 INFO sqlalchemy.engine.base.Engine Thread-113 : BEGIN (implicit)
2020-05-20 00:23:38,526 INFO sqlalchemy.engine.base.Engine Thread-111 : (1, 1)
2020-05-20 00:23:38,527 INFO sqlalchemy.engine.base.Engine Thread-112 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:23:38,528 INFO sqlalchemy.engine.base.Engine Thread-112 : (1, 1)
2020-05-20 00:23:38,528 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:38,529 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:38,528 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:23:38,530 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:38,530 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:38,532 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:38,530 INFO sqlalchemy.engine.base.Engine Thread-113 : (1, 1)
2020-05-20 00:23:38,531 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:38,534 INFO sqlalchemy.engine.base.Engine Thread-112 : ROLLBACK
2020-05-20 00:23:38,533 INFO sqlalchemy.engine.base.Engine Thread-111 : ROLLBACK
2020-05-20 00:23:38,531 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-05-20 00:23:38,535 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:38,536 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:38,537 INFO sqlalchemy.engine.base.Engine Thread-113 : ROLLBACK
2020-05-20 00:23:38,542 INFO sqlalchemy.engine.base.Engine Thread-114 : BEGIN (implicit)
2020-05-20 00:23:38,543 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 00:23:38,543 INFO sqlalchemy.engine.base.Engine Thread-114 : (1, 1)
2020-05-20 00:23:38,544 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 00:23:38,544 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 00:23:38,545 INFO sqlalchemy.engine.base.Engine Thread-114 : ROLLBACK
2020-05-20 00:23:38,573 INFO sqlalchemy.engine.base.Engine Thread-115 : BEGIN (implicit)
2020-05-20 00:23:38,574 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:23:38,575 INFO sqlalchemy.engine.base.Engine Thread-115 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:23:38,576 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:23:38,576 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:23:38,576 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:23:38,579 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:23:38,579 INFO sqlalchemy.engine.base.Engine Thread-115 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:23:38,580 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:23:38,585 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:23:38,585 INFO sqlalchemy.engine.base.Engine Thread-115 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:23:38,586 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:23:38,590 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:23:38,590 INFO sqlalchemy.engine.base.Engine Thread-115 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:23:38,591 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:23:38,591 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:23:38,592 INFO sqlalchemy.engine.base.Engine Thread-115 : ROLLBACK
2020-05-20 00:23:38,616 INFO sqlalchemy.engine.base.Engine Thread-116 : BEGIN (implicit)
2020-05-20 00:23:38,618 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:23:38,618 INFO sqlalchemy.engine.base.Engine Thread-116 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 00:23:38,619 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:23:38,619 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:23:38,619 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 00:23:38,623 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 00:23:38,623 INFO sqlalchemy.engine.base.Engine Thread-116 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 00:23:38,624 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:23:38,629 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 00:23:38,629 INFO sqlalchemy.engine.base.Engine Thread-116 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:23:38,630 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:23:38,634 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 00:23:38,634 INFO sqlalchemy.engine.base.Engine Thread-116 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 00:23:38,635 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 00:23:38,635 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 00:23:38,636 INFO sqlalchemy.engine.base.Engine Thread-116 : ROLLBACK
2020-05-20 01:44:09,231 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-05-20 01:44:09,233 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 01:44:09,233 INFO sqlalchemy.engine.base.Engine Thread-121 : ('philip', 1, 1)
2020-05-20 01:44:09,236 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:09,236 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:09,248 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 01:44:09,248 INFO sqlalchemy.engine.base.Engine Thread-121 : (108,)
2020-05-20 01:44:09,249 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 01:44:09,249 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 01:44:09,251 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-05-20 01:44:11,236 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-05-20 01:44:11,237 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 01:44:11,237 INFO sqlalchemy.engine.base.Engine Thread-122 : ('philip', 1, 1)
2020-05-20 01:44:11,238 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:11,238 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:11,247 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-05-20 01:44:11,247 INFO sqlalchemy.engine.base.Engine Thread-122 : ()
2020-05-20 01:44:11,248 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 01:44:11,248 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 01:44:11,248 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 01:44:11,249 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-05-20 01:44:13,468 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-05-20 01:44:13,469 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 01:44:13,469 INFO sqlalchemy.engine.base.Engine Thread-123 : ('philip', 1, 1)
2020-05-20 01:44:13,470 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:13,470 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:13,480 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 01:44:13,480 INFO sqlalchemy.engine.base.Engine Thread-123 : (104,)
2020-05-20 01:44:13,480 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 01:44:13,481 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-05-20 01:44:14,931 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-05-20 01:44:14,932 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-05-20 01:44:14,933 INFO sqlalchemy.engine.base.Engine Thread-124 : ('0', 1)
2020-05-20 01:44:14,933 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-05-20 01:44:14,939 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 01:44:14,939 INFO sqlalchemy.engine.base.Engine Thread-124 : ()
2020-05-20 01:44:14,940 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 01:44:14,941 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 01:44:14,941 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 01:44:14,943 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 01:44:14,943 INFO sqlalchemy.engine.base.Engine Thread-124 : (97,)
2020-05-20 01:44:14,944 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 01:44:14,944 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 01:44:14,944 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 01:44:14,948 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-05-20 01:44:14,948 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-05-20 01:44:14,949 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 01:44:14,949 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 01:44:14,952 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 01:44:14,952 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-05-20 01:44:14,952 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:14,953 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:14,957 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 01:44:14,957 INFO sqlalchemy.engine.base.Engine Thread-124 : ('philip', 1, 1)
2020-05-20 01:44:14,958 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:14,958 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:14,963 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 01:44:14,963 INFO sqlalchemy.engine.base.Engine Thread-124 : ('philip', 1, 1)
2020-05-20 01:44:14,964 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:14,964 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:14,965 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-05-20 01:44:15,264 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-05-20 01:44:15,265 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 01:44:15,268 INFO sqlalchemy.engine.base.Engine Thread-135 : BEGIN (implicit)
2020-05-20 01:44:15,268 INFO sqlalchemy.engine.base.Engine Thread-133 : (1, 1)
2020-05-20 01:44:15,271 INFO sqlalchemy.engine.base.Engine Thread-134 : BEGIN (implicit)
2020-05-20 01:44:15,274 INFO sqlalchemy.engine.base.Engine Thread-136 : BEGIN (implicit)
2020-05-20 01:44:15,275 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 01:44:15,277 INFO sqlalchemy.engine.base.Engine Thread-135 : (1, 1)
2020-05-20 01:44:15,276 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:15,278 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:15,276 INFO sqlalchemy.engine.base.Engine Thread-134 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 01:44:15,277 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 01:44:15,278 INFO sqlalchemy.engine.base.Engine Thread-134 : (1, 1)
2020-05-20 01:44:15,280 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:15,279 INFO sqlalchemy.engine.base.Engine Thread-136 : (1, 1)
2020-05-20 01:44:15,279 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-05-20 01:44:15,280 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:15,279 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:15,282 INFO sqlalchemy.engine.base.Engine Thread-134 : ROLLBACK
2020-05-20 01:44:15,282 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:15,283 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:15,284 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:15,285 INFO sqlalchemy.engine.base.Engine Thread-135 : ROLLBACK
2020-05-20 01:44:15,286 INFO sqlalchemy.engine.base.Engine Thread-136 : ROLLBACK
2020-05-20 01:44:15,307 INFO sqlalchemy.engine.base.Engine Thread-137 : BEGIN (implicit)
2020-05-20 01:44:15,308 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 01:44:15,308 INFO sqlalchemy.engine.base.Engine Thread-137 : (1, 1)
2020-05-20 01:44:15,309 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:15,309 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:15,310 INFO sqlalchemy.engine.base.Engine Thread-137 : ROLLBACK
2020-05-20 01:44:22,884 INFO sqlalchemy.engine.base.Engine Thread-138 : BEGIN (implicit)
2020-05-20 01:44:22,886 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 01:44:22,886 INFO sqlalchemy.engine.base.Engine Thread-138 : ()
2020-05-20 01:44:22,888 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 01:44:22,888 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 01:44:22,888 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 01:44:22,890 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 01:44:22,890 INFO sqlalchemy.engine.base.Engine Thread-138 : (100,)
2020-05-20 01:44:22,891 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 01:44:22,891 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 01:44:22,891 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 01:44:22,891 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 01:44:22,891 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 01:44:22,891 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 01:44:22,893 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 01:44:22,893 INFO sqlalchemy.engine.base.Engine Thread-138 : (1, 1)
2020-05-20 01:44:22,894 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:22,894 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:22,898 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 01:44:22,898 INFO sqlalchemy.engine.base.Engine Thread-138 : ('philip', 1, 1)
2020-05-20 01:44:22,899 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:22,899 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:22,902 INFO sqlalchemy.engine.base.Engine Thread-138 : ROLLBACK
2020-05-20 01:44:23,170 INFO sqlalchemy.engine.base.Engine Thread-147 : BEGIN (implicit)
2020-05-20 01:44:23,171 INFO sqlalchemy.engine.base.Engine Thread-147 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 01:44:23,171 INFO sqlalchemy.engine.base.Engine Thread-147 : (1, 1)
2020-05-20 01:44:23,174 INFO sqlalchemy.engine.base.Engine Thread-148 : BEGIN (implicit)
2020-05-20 01:44:23,175 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 01:44:23,175 INFO sqlalchemy.engine.base.Engine Thread-148 : (1, 1)
2020-05-20 01:44:23,176 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:23,176 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:23,177 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:23,177 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:23,179 INFO sqlalchemy.engine.base.Engine Thread-147 : ROLLBACK
2020-05-20 01:44:23,179 INFO sqlalchemy.engine.base.Engine Thread-148 : ROLLBACK
2020-05-20 01:44:23,184 INFO sqlalchemy.engine.base.Engine Thread-149 : BEGIN (implicit)
2020-05-20 01:44:23,185 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 01:44:23,185 INFO sqlalchemy.engine.base.Engine Thread-149 : (1, 1)
2020-05-20 01:44:23,188 INFO sqlalchemy.engine.base.Engine Thread-150 : BEGIN (implicit)
2020-05-20 01:44:23,192 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 01:44:23,193 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:23,193 INFO sqlalchemy.engine.base.Engine Thread-150 : (1, 1)
2020-05-20 01:44:23,193 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:23,194 INFO sqlalchemy.engine.base.Engine Thread-149 : ROLLBACK
2020-05-20 01:44:23,195 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:23,196 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:23,197 INFO sqlalchemy.engine.base.Engine Thread-150 : ROLLBACK
2020-05-20 01:44:23,210 INFO sqlalchemy.engine.base.Engine Thread-151 : BEGIN (implicit)
2020-05-20 01:44:23,211 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 01:44:23,211 INFO sqlalchemy.engine.base.Engine Thread-151 : (1, 1)
2020-05-20 01:44:23,212 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 01:44:23,212 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 01:44:23,213 INFO sqlalchemy.engine.base.Engine Thread-151 : ROLLBACK
2020-05-20 01:44:23,274 INFO sqlalchemy.engine.base.Engine Thread-152 : BEGIN (implicit)
2020-05-20 01:44:23,275 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 01:44:23,276 INFO sqlalchemy.engine.base.Engine Thread-152 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 01:44:23,277 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 01:44:23,277 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 01:44:23,277 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 01:44:23,280 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 01:44:23,280 INFO sqlalchemy.engine.base.Engine Thread-152 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 01:44:23,281 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 01:44:23,292 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 01:44:23,292 INFO sqlalchemy.engine.base.Engine Thread-152 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 01:44:23,293 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 01:44:23,298 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 01:44:23,298 INFO sqlalchemy.engine.base.Engine Thread-152 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 01:44:23,299 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 01:44:23,299 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 01:44:23,300 INFO sqlalchemy.engine.base.Engine Thread-152 : ROLLBACK
2020-05-20 01:44:23,328 INFO sqlalchemy.engine.base.Engine Thread-153 : BEGIN (implicit)
2020-05-20 01:44:23,329 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 01:44:23,329 INFO sqlalchemy.engine.base.Engine Thread-153 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 01:44:23,330 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 01:44:23,330 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 01:44:23,331 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 01:44:23,334 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 01:44:23,334 INFO sqlalchemy.engine.base.Engine Thread-153 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 01:44:23,335 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 01:44:23,339 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 01:44:23,339 INFO sqlalchemy.engine.base.Engine Thread-153 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 01:44:23,340 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 01:44:23,345 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 01:44:23,345 INFO sqlalchemy.engine.base.Engine Thread-153 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 01:44:23,346 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 01:44:23,346 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 01:44:23,347 INFO sqlalchemy.engine.base.Engine Thread-153 : ROLLBACK
2020-05-20 10:38:03,236 INFO sqlalchemy.engine.base.Engine Thread-158 : BEGIN (implicit)
2020-05-20 10:38:03,238 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 10:38:03,238 INFO sqlalchemy.engine.base.Engine Thread-158 : ('philip', 1, 1)
2020-05-20 10:38:03,240 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 10:38:03,240 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 10:38:03,250 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 10:38:03,251 INFO sqlalchemy.engine.base.Engine Thread-158 : (103,)
2020-05-20 10:38:03,251 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 10:38:03,253 INFO sqlalchemy.engine.base.Engine Thread-158 : ROLLBACK
2020-05-20 10:38:04,935 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-05-20 10:38:04,937 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 10:38:04,937 INFO sqlalchemy.engine.base.Engine Thread-159 : ('philip', 1, 1)
2020-05-20 10:38:04,937 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 10:38:04,938 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 10:38:04,946 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 10:38:04,946 INFO sqlalchemy.engine.base.Engine Thread-159 : (108,)
2020-05-20 10:38:04,947 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 10:38:04,947 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 10:38:04,948 INFO sqlalchemy.engine.base.Engine Thread-159 : ROLLBACK
2020-05-20 10:38:07,500 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-05-20 10:38:07,501 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 10:38:07,502 INFO sqlalchemy.engine.base.Engine Thread-160 : ('philip', 1, 1)
2020-05-20 10:38:07,502 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 10:38:07,502 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 10:38:07,512 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 10:38:07,512 INFO sqlalchemy.engine.base.Engine Thread-160 : (102,)
2020-05-20 10:38:07,512 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 10:38:07,513 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-05-20 10:38:09,061 INFO sqlalchemy.engine.base.Engine Thread-161 : BEGIN (implicit)
2020-05-20 10:38:09,062 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 10:38:09,062 INFO sqlalchemy.engine.base.Engine Thread-161 : ('philip', 1, 1)
2020-05-20 10:38:09,063 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 10:38:09,063 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 10:38:09,072 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 10:38:09,072 INFO sqlalchemy.engine.base.Engine Thread-161 : (101,)
2020-05-20 10:38:09,072 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 10:38:09,073 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 10:38:09,073 INFO sqlalchemy.engine.base.Engine Thread-161 : ROLLBACK
2020-05-20 12:16:52,805 INFO sqlalchemy.engine.base.Engine Thread-164 : BEGIN (implicit)
2020-05-20 12:16:52,807 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 12:16:52,807 INFO sqlalchemy.engine.base.Engine Thread-164 : ()
2020-05-20 12:16:52,813 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:16:52,814 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:16:52,814 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 12:16:52,816 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 12:16:52,816 INFO sqlalchemy.engine.base.Engine Thread-164 : (100,)
2020-05-20 12:16:52,817 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 12:16:52,817 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 12:16:52,817 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 12:16:52,817 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 12:16:52,817 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 12:16:52,817 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 12:16:52,819 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:16:52,820 INFO sqlalchemy.engine.base.Engine Thread-164 : (1, 1)
2020-05-20 12:16:52,820 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:16:52,820 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:16:52,837 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:16:52,837 INFO sqlalchemy.engine.base.Engine Thread-164 : ('philip', 1, 1)
2020-05-20 12:16:52,838 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:16:52,838 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:16:52,841 INFO sqlalchemy.engine.base.Engine Thread-164 : ROLLBACK
2020-05-20 12:16:53,062 INFO sqlalchemy.engine.base.Engine Thread-188 : BEGIN (implicit)
2020-05-20 12:16:53,063 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:16:53,064 INFO sqlalchemy.engine.base.Engine Thread-188 : (1, 1)
2020-05-20 12:16:53,066 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:16:53,067 INFO sqlalchemy.engine.base.Engine Thread-189 : BEGIN (implicit)
2020-05-20 12:16:53,070 INFO sqlalchemy.engine.base.Engine Thread-190 : BEGIN (implicit)
2020-05-20 12:16:53,073 INFO sqlalchemy.engine.base.Engine Thread-191 : BEGIN (implicit)
2020-05-20 12:16:53,073 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:16:53,074 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:16:53,075 INFO sqlalchemy.engine.base.Engine Thread-190 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:16:53,076 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:16:53,078 INFO sqlalchemy.engine.base.Engine Thread-188 : ROLLBACK
2020-05-20 12:16:53,078 INFO sqlalchemy.engine.base.Engine Thread-189 : (1, 1)
2020-05-20 12:16:53,078 INFO sqlalchemy.engine.base.Engine Thread-190 : (1, 1)
2020-05-20 12:16:53,078 INFO sqlalchemy.engine.base.Engine Thread-191 : (1, 1)
2020-05-20 12:16:53,079 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:16:53,080 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:16:53,080 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:16:53,081 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:16:53,082 INFO sqlalchemy.engine.base.Engine Thread-189 : ROLLBACK
2020-05-20 12:16:53,082 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:16:53,084 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:16:53,083 INFO sqlalchemy.engine.base.Engine Thread-190 : ROLLBACK
2020-05-20 12:16:53,087 INFO sqlalchemy.engine.base.Engine Thread-191 : ROLLBACK
2020-05-20 12:16:53,150 INFO sqlalchemy.engine.base.Engine Thread-192 : BEGIN (implicit)
2020-05-20 12:16:53,152 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:16:53,152 INFO sqlalchemy.engine.base.Engine Thread-192 : (1, 1)
2020-05-20 12:16:53,152 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:16:53,153 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:16:53,154 INFO sqlalchemy.engine.base.Engine Thread-192 : ROLLBACK
2020-05-20 12:16:53,176 INFO sqlalchemy.engine.base.Engine Thread-193 : BEGIN (implicit)
2020-05-20 12:16:53,177 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:16:53,177 INFO sqlalchemy.engine.base.Engine Thread-193 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:16:53,178 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:16:53,179 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:16:53,179 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:16:53,182 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:16:53,182 INFO sqlalchemy.engine.base.Engine Thread-193 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:16:53,183 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:16:53,187 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:16:53,187 INFO sqlalchemy.engine.base.Engine Thread-193 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:16:53,188 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:16:53,192 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:16:53,192 INFO sqlalchemy.engine.base.Engine Thread-193 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:16:53,193 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:16:53,193 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:16:53,194 INFO sqlalchemy.engine.base.Engine Thread-193 : ROLLBACK
2020-05-20 12:16:53,218 INFO sqlalchemy.engine.base.Engine Thread-194 : BEGIN (implicit)
2020-05-20 12:16:53,219 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:16:53,219 INFO sqlalchemy.engine.base.Engine Thread-194 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:16:53,220 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:16:53,220 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:16:53,220 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:16:53,224 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:16:53,224 INFO sqlalchemy.engine.base.Engine Thread-194 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:16:53,225 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:16:53,229 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:16:53,232 INFO sqlalchemy.engine.base.Engine Thread-194 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:16:53,233 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:16:53,237 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:16:53,238 INFO sqlalchemy.engine.base.Engine Thread-194 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:16:53,238 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:16:53,239 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:16:53,239 INFO sqlalchemy.engine.base.Engine Thread-194 : ROLLBACK
2020-05-20 12:16:56,281 INFO sqlalchemy.engine.base.Engine Thread-196 : BEGIN (implicit)
2020-05-20 12:16:56,282 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:16:56,282 INFO sqlalchemy.engine.base.Engine Thread-196 : ('philip', 1, 1)
2020-05-20 12:16:56,283 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:16:56,283 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:16:56,293 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 12:16:56,293 INFO sqlalchemy.engine.base.Engine Thread-196 : (108,)
2020-05-20 12:16:56,294 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 12:16:56,294 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 12:16:56,295 INFO sqlalchemy.engine.base.Engine Thread-196 : ROLLBACK
2020-05-20 12:16:58,959 INFO sqlalchemy.engine.base.Engine Thread-197 : BEGIN (implicit)
2020-05-20 12:16:58,960 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:16:58,961 INFO sqlalchemy.engine.base.Engine Thread-197 : ('philip', 1, 1)
2020-05-20 12:16:58,961 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:16:58,962 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:16:58,971 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 12:16:58,971 INFO sqlalchemy.engine.base.Engine Thread-197 : (104,)
2020-05-20 12:16:58,972 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 12:16:58,973 INFO sqlalchemy.engine.base.Engine Thread-197 : ROLLBACK
2020-05-20 12:16:59,677 INFO sqlalchemy.engine.base.Engine Thread-198 : BEGIN (implicit)
2020-05-20 12:16:59,678 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-05-20 12:16:59,678 INFO sqlalchemy.engine.base.Engine Thread-198 : ('0', 1)
2020-05-20 12:16:59,679 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-05-20 12:16:59,684 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 12:16:59,685 INFO sqlalchemy.engine.base.Engine Thread-198 : ()
2020-05-20 12:16:59,686 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:16:59,686 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:16:59,686 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 12:16:59,687 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 12:16:59,687 INFO sqlalchemy.engine.base.Engine Thread-198 : (97,)
2020-05-20 12:16:59,688 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 12:16:59,688 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 12:16:59,688 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 12:16:59,692 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-05-20 12:16:59,692 INFO sqlalchemy.engine.base.Engine Thread-198 : (1, 1)
2020-05-20 12:16:59,693 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:16:59,696 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:16:59,698 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:16:59,698 INFO sqlalchemy.engine.base.Engine Thread-198 : (1, 1)
2020-05-20 12:16:59,699 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:16:59,699 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:16:59,704 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:16:59,704 INFO sqlalchemy.engine.base.Engine Thread-198 : ('philip', 1, 1)
2020-05-20 12:16:59,705 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:16:59,705 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:16:59,710 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:16:59,710 INFO sqlalchemy.engine.base.Engine Thread-198 : ('philip', 1, 1)
2020-05-20 12:16:59,711 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:16:59,711 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:16:59,712 INFO sqlalchemy.engine.base.Engine Thread-198 : ROLLBACK
2020-05-20 12:17:00,048 INFO sqlalchemy.engine.base.Engine Thread-207 : BEGIN (implicit)
2020-05-20 12:17:00,051 INFO sqlalchemy.engine.base.Engine Thread-208 : BEGIN (implicit)
2020-05-20 12:17:00,053 INFO sqlalchemy.engine.base.Engine Thread-209 : BEGIN (implicit)
2020-05-20 12:17:00,055 INFO sqlalchemy.engine.base.Engine Thread-207 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:00,058 INFO sqlalchemy.engine.base.Engine Thread-210 : BEGIN (implicit)
2020-05-20 12:17:00,059 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:00,060 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:00,060 INFO sqlalchemy.engine.base.Engine Thread-207 : (1, 1)
2020-05-20 12:17:00,061 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:00,062 INFO sqlalchemy.engine.base.Engine Thread-210 : (1, 1)
2020-05-20 12:17:00,062 INFO sqlalchemy.engine.base.Engine Thread-209 : (1, 1)
2020-05-20 12:17:00,062 INFO sqlalchemy.engine.base.Engine Thread-208 : (1, 1)
2020-05-20 12:17:00,063 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:00,063 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:00,064 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:00,064 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:00,064 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:00,066 INFO sqlalchemy.engine.base.Engine Thread-207 : ROLLBACK
2020-05-20 12:17:00,066 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:00,067 INFO sqlalchemy.engine.base.Engine Thread-209 : ROLLBACK
2020-05-20 12:17:00,067 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:00,068 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:00,069 INFO sqlalchemy.engine.base.Engine Thread-210 : ROLLBACK
2020-05-20 12:17:00,071 INFO sqlalchemy.engine.base.Engine Thread-208 : ROLLBACK
2020-05-20 12:17:00,085 INFO sqlalchemy.engine.base.Engine Thread-211 : BEGIN (implicit)
2020-05-20 12:17:00,086 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:00,087 INFO sqlalchemy.engine.base.Engine Thread-211 : (1, 1)
2020-05-20 12:17:00,087 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:00,088 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:00,089 INFO sqlalchemy.engine.base.Engine Thread-211 : ROLLBACK
2020-05-20 12:17:07,988 INFO sqlalchemy.engine.base.Engine Thread-212 : BEGIN (implicit)
2020-05-20 12:17:07,990 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 12:17:07,990 INFO sqlalchemy.engine.base.Engine Thread-212 : ()
2020-05-20 12:17:07,991 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:17:07,991 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:17:07,991 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 12:17:07,993 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 12:17:07,993 INFO sqlalchemy.engine.base.Engine Thread-212 : (100,)
2020-05-20 12:17:07,994 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 12:17:07,994 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 12:17:07,994 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 12:17:07,994 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 12:17:07,994 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 12:17:07,994 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 12:17:07,996 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:07,996 INFO sqlalchemy.engine.base.Engine Thread-212 : (1, 1)
2020-05-20 12:17:07,997 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:07,997 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:08,001 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:17:08,002 INFO sqlalchemy.engine.base.Engine Thread-212 : ('philip', 1, 1)
2020-05-20 12:17:08,002 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:08,003 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:08,005 INFO sqlalchemy.engine.base.Engine Thread-212 : ROLLBACK
2020-05-20 12:17:08,278 INFO sqlalchemy.engine.base.Engine Thread-223 : BEGIN (implicit)
2020-05-20 12:17:08,279 INFO sqlalchemy.engine.base.Engine Thread-221 : BEGIN (implicit)
2020-05-20 12:17:08,281 INFO sqlalchemy.engine.base.Engine Thread-222 : BEGIN (implicit)
2020-05-20 12:17:08,282 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:08,287 INFO sqlalchemy.engine.base.Engine Thread-223 : (1, 1)
2020-05-20 12:17:08,283 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:08,287 INFO sqlalchemy.engine.base.Engine Thread-221 : (1, 1)
2020-05-20 12:17:08,287 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:08,288 INFO sqlalchemy.engine.base.Engine Thread-222 : (1, 1)
2020-05-20 12:17:08,286 INFO sqlalchemy.engine.base.Engine Thread-224 : BEGIN (implicit)
2020-05-20 12:17:08,289 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:08,289 INFO sqlalchemy.engine.base.Engine Thread-224 : (1, 1)
2020-05-20 12:17:08,290 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:08,290 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:08,290 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:08,291 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:08,292 INFO sqlalchemy.engine.base.Engine Thread-224 : ROLLBACK
2020-05-20 12:17:08,292 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:08,293 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:08,294 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:08,295 INFO sqlalchemy.engine.base.Engine Thread-222 : ROLLBACK
2020-05-20 12:17:08,295 INFO sqlalchemy.engine.base.Engine Thread-221 : ROLLBACK
2020-05-20 12:17:08,296 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:08,298 INFO sqlalchemy.engine.base.Engine Thread-223 : ROLLBACK
2020-05-20 12:17:08,307 INFO sqlalchemy.engine.base.Engine Thread-225 : BEGIN (implicit)
2020-05-20 12:17:08,309 INFO sqlalchemy.engine.base.Engine Thread-225 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:08,309 INFO sqlalchemy.engine.base.Engine Thread-225 : (1, 1)
2020-05-20 12:17:08,309 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:08,309 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:08,310 INFO sqlalchemy.engine.base.Engine Thread-225 : ROLLBACK
2020-05-20 12:17:08,335 INFO sqlalchemy.engine.base.Engine Thread-226 : BEGIN (implicit)
2020-05-20 12:17:08,336 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:08,336 INFO sqlalchemy.engine.base.Engine Thread-226 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:17:08,337 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:08,337 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:08,337 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:08,341 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:08,341 INFO sqlalchemy.engine.base.Engine Thread-226 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:17:08,341 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:08,346 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:17:08,346 INFO sqlalchemy.engine.base.Engine Thread-226 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:08,346 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:08,350 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:17:08,351 INFO sqlalchemy.engine.base.Engine Thread-226 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:08,351 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:08,351 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:17:08,352 INFO sqlalchemy.engine.base.Engine Thread-226 : ROLLBACK
2020-05-20 12:17:08,374 INFO sqlalchemy.engine.base.Engine Thread-227 : BEGIN (implicit)
2020-05-20 12:17:08,375 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:08,375 INFO sqlalchemy.engine.base.Engine Thread-227 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:17:08,376 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:08,376 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:08,377 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:08,380 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:08,380 INFO sqlalchemy.engine.base.Engine Thread-227 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:17:08,380 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:08,384 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:17:08,385 INFO sqlalchemy.engine.base.Engine Thread-227 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:08,385 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:08,389 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:17:08,389 INFO sqlalchemy.engine.base.Engine Thread-227 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:08,390 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:08,390 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:17:08,391 INFO sqlalchemy.engine.base.Engine Thread-227 : ROLLBACK
2020-05-20 12:17:11,788 INFO sqlalchemy.engine.base.Engine Thread-228 : BEGIN (implicit)
2020-05-20 12:17:11,790 INFO sqlalchemy.engine.base.Engine Thread-228 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:17:11,790 INFO sqlalchemy.engine.base.Engine Thread-228 : ('philip', 1, 1)
2020-05-20 12:17:11,791 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:11,791 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:11,800 INFO sqlalchemy.engine.base.Engine Thread-228 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 12:17:11,801 INFO sqlalchemy.engine.base.Engine Thread-228 : (101,)
2020-05-20 12:17:11,801 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 12:17:11,802 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 12:17:11,802 INFO sqlalchemy.engine.base.Engine Thread-228 : ROLLBACK
2020-05-20 12:17:12,858 INFO sqlalchemy.engine.base.Engine Thread-229 : BEGIN (implicit)
2020-05-20 12:17:12,859 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-05-20 12:17:12,859 INFO sqlalchemy.engine.base.Engine Thread-229 : ('0', 1)
2020-05-20 12:17:12,860 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-05-20 12:17:12,865 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 12:17:12,865 INFO sqlalchemy.engine.base.Engine Thread-229 : ()
2020-05-20 12:17:12,867 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:17:12,867 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:17:12,867 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 12:17:12,869 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 12:17:12,869 INFO sqlalchemy.engine.base.Engine Thread-229 : (97,)
2020-05-20 12:17:12,869 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 12:17:12,870 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 12:17:12,870 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 12:17:12,873 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-05-20 12:17:12,873 INFO sqlalchemy.engine.base.Engine Thread-229 : (2, 1)
2020-05-20 12:17:12,874 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:17:12,874 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 12:17:12,877 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:12,877 INFO sqlalchemy.engine.base.Engine Thread-229 : (1, 1)
2020-05-20 12:17:12,877 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:12,878 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:12,882 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:17:12,882 INFO sqlalchemy.engine.base.Engine Thread-229 : ('philip', 1, 1)
2020-05-20 12:17:12,883 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:12,883 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:12,888 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:17:12,888 INFO sqlalchemy.engine.base.Engine Thread-229 : ('philip', 1, 1)
2020-05-20 12:17:12,889 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:12,889 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:12,890 INFO sqlalchemy.engine.base.Engine Thread-229 : ROLLBACK
2020-05-20 12:17:13,149 INFO sqlalchemy.engine.base.Engine Thread-238 : BEGIN (implicit)
2020-05-20 12:17:13,154 INFO sqlalchemy.engine.base.Engine Thread-239 : BEGIN (implicit)
2020-05-20 12:17:13,157 INFO sqlalchemy.engine.base.Engine Thread-240 : BEGIN (implicit)
2020-05-20 12:17:13,159 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:13,164 INFO sqlalchemy.engine.base.Engine Thread-238 : (1, 1)
2020-05-20 12:17:13,160 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:13,163 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:13,164 INFO sqlalchemy.engine.base.Engine Thread-240 : (1, 1)
2020-05-20 12:17:13,164 INFO sqlalchemy.engine.base.Engine Thread-239 : (1, 1)
2020-05-20 12:17:13,162 INFO sqlalchemy.engine.base.Engine Thread-241 : BEGIN (implicit)
2020-05-20 12:17:13,165 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:13,165 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:13,167 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:13,166 INFO sqlalchemy.engine.base.Engine Thread-241 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:13,168 INFO sqlalchemy.engine.base.Engine Thread-241 : (1, 1)
2020-05-20 12:17:13,165 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:13,168 INFO sqlalchemy.engine.base.Engine Thread-239 : ROLLBACK
2020-05-20 12:17:13,169 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:13,170 INFO sqlalchemy.engine.base.Engine Thread-240 : ROLLBACK
2020-05-20 12:17:13,167 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:13,172 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:13,172 INFO sqlalchemy.engine.base.Engine Thread-238 : ROLLBACK
2020-05-20 12:17:13,173 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:13,178 INFO sqlalchemy.engine.base.Engine Thread-241 : ROLLBACK
2020-05-20 12:17:13,176 INFO sqlalchemy.engine.base.Engine Thread-242 : BEGIN (implicit)
2020-05-20 12:17:13,180 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:13,180 INFO sqlalchemy.engine.base.Engine Thread-242 : (1, 1)
2020-05-20 12:17:13,181 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:13,181 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:13,182 INFO sqlalchemy.engine.base.Engine Thread-242 : ROLLBACK
2020-05-20 12:17:16,718 INFO sqlalchemy.engine.base.Engine Thread-243 : BEGIN (implicit)
2020-05-20 12:17:16,720 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 12:17:16,720 INFO sqlalchemy.engine.base.Engine Thread-243 : ()
2020-05-20 12:17:16,721 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:17:16,722 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:17:16,722 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 12:17:16,723 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 12:17:16,723 INFO sqlalchemy.engine.base.Engine Thread-243 : (100,)
2020-05-20 12:17:16,724 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 12:17:16,724 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 12:17:16,724 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 12:17:16,725 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 12:17:16,725 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 12:17:16,725 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 12:17:16,727 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:16,727 INFO sqlalchemy.engine.base.Engine Thread-243 : (1, 1)
2020-05-20 12:17:16,727 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:16,727 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:16,731 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:17:16,731 INFO sqlalchemy.engine.base.Engine Thread-243 : ('philip', 1, 1)
2020-05-20 12:17:16,732 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:16,733 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:16,735 INFO sqlalchemy.engine.base.Engine Thread-243 : ROLLBACK
2020-05-20 12:17:16,999 INFO sqlalchemy.engine.base.Engine Thread-252 : BEGIN (implicit)
2020-05-20 12:17:17,000 INFO sqlalchemy.engine.base.Engine Thread-252 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:17,002 INFO sqlalchemy.engine.base.Engine Thread-253 : BEGIN (implicit)
2020-05-20 12:17:17,006 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:17,005 INFO sqlalchemy.engine.base.Engine Thread-254 : BEGIN (implicit)
2020-05-20 12:17:17,003 INFO sqlalchemy.engine.base.Engine Thread-252 : (1, 1)
2020-05-20 12:17:17,007 INFO sqlalchemy.engine.base.Engine Thread-253 : (1, 1)
2020-05-20 12:17:17,009 INFO sqlalchemy.engine.base.Engine Thread-255 : BEGIN (implicit)
2020-05-20 12:17:17,012 INFO sqlalchemy.engine.base.Engine Thread-255 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:17,011 DEBUG sqlalchemy.engine.base.Engine Thread-252 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:17,011 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:17,010 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:17,013 INFO sqlalchemy.engine.base.Engine Thread-255 : (1, 1)
2020-05-20 12:17:17,013 DEBUG sqlalchemy.engine.base.Engine Thread-252 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:17,013 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:17,013 INFO sqlalchemy.engine.base.Engine Thread-254 : (1, 1)
2020-05-20 12:17:17,015 INFO sqlalchemy.engine.base.Engine Thread-252 : ROLLBACK
2020-05-20 12:17:17,016 INFO sqlalchemy.engine.base.Engine Thread-253 : ROLLBACK
2020-05-20 12:17:17,016 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:17,018 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:17,017 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:17,019 INFO sqlalchemy.engine.base.Engine Thread-255 : ROLLBACK
2020-05-20 12:17:17,019 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:17,021 INFO sqlalchemy.engine.base.Engine Thread-254 : ROLLBACK
2020-05-20 12:17:17,032 INFO sqlalchemy.engine.base.Engine Thread-256 : BEGIN (implicit)
2020-05-20 12:17:17,032 INFO sqlalchemy.engine.base.Engine Thread-256 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:17,033 INFO sqlalchemy.engine.base.Engine Thread-256 : (1, 1)
2020-05-20 12:17:17,033 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:17,033 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:17,034 INFO sqlalchemy.engine.base.Engine Thread-256 : ROLLBACK
2020-05-20 12:17:17,058 INFO sqlalchemy.engine.base.Engine Thread-257 : BEGIN (implicit)
2020-05-20 12:17:17,060 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:17,060 INFO sqlalchemy.engine.base.Engine Thread-257 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:17:17,061 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:17,061 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:17,061 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:17,064 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:17,065 INFO sqlalchemy.engine.base.Engine Thread-257 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:17:17,065 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:17,069 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:17:17,070 INFO sqlalchemy.engine.base.Engine Thread-257 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:17,071 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:17,075 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:17:17,075 INFO sqlalchemy.engine.base.Engine Thread-257 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:17,076 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:17,076 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:17:17,077 INFO sqlalchemy.engine.base.Engine Thread-257 : ROLLBACK
2020-05-20 12:17:17,102 INFO sqlalchemy.engine.base.Engine Thread-258 : BEGIN (implicit)
2020-05-20 12:17:17,104 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:17,104 INFO sqlalchemy.engine.base.Engine Thread-258 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:17:17,105 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:17,105 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:17,105 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:17,109 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:17,109 INFO sqlalchemy.engine.base.Engine Thread-258 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:17:17,110 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:17,114 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:17:17,115 INFO sqlalchemy.engine.base.Engine Thread-258 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:17,116 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:17,120 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:17:17,120 INFO sqlalchemy.engine.base.Engine Thread-258 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:17,121 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:17,121 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:17:17,122 INFO sqlalchemy.engine.base.Engine Thread-258 : ROLLBACK
2020-05-20 12:17:21,023 INFO sqlalchemy.engine.base.Engine Thread-259 : BEGIN (implicit)
2020-05-20 12:17:21,024 INFO sqlalchemy.engine.base.Engine Thread-259 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:17:21,024 INFO sqlalchemy.engine.base.Engine Thread-259 : ('philip', 1, 1)
2020-05-20 12:17:21,025 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:21,025 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:21,034 INFO sqlalchemy.engine.base.Engine Thread-259 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 12:17:21,034 INFO sqlalchemy.engine.base.Engine Thread-259 : (108,)
2020-05-20 12:17:21,035 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 12:17:21,035 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 12:17:21,036 INFO sqlalchemy.engine.base.Engine Thread-259 : ROLLBACK
2020-05-20 12:17:21,778 INFO sqlalchemy.engine.base.Engine Thread-260 : BEGIN (implicit)
2020-05-20 12:17:21,780 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-05-20 12:17:21,780 INFO sqlalchemy.engine.base.Engine Thread-260 : ('0', 1)
2020-05-20 12:17:21,780 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-05-20 12:17:21,785 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 12:17:21,785 INFO sqlalchemy.engine.base.Engine Thread-260 : ()
2020-05-20 12:17:21,786 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:17:21,786 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:17:21,786 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 12:17:21,788 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 12:17:21,788 INFO sqlalchemy.engine.base.Engine Thread-260 : (97,)
2020-05-20 12:17:21,788 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 12:17:21,789 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 12:17:21,789 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 12:17:21,792 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-05-20 12:17:21,792 INFO sqlalchemy.engine.base.Engine Thread-260 : (1, 1)
2020-05-20 12:17:21,793 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:17:21,793 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:17:21,796 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:21,796 INFO sqlalchemy.engine.base.Engine Thread-260 : (1, 1)
2020-05-20 12:17:21,797 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:21,797 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:21,801 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:17:21,801 INFO sqlalchemy.engine.base.Engine Thread-260 : ('philip', 1, 1)
2020-05-20 12:17:21,802 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:21,802 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:21,807 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:17:21,807 INFO sqlalchemy.engine.base.Engine Thread-260 : ('philip', 1, 1)
2020-05-20 12:17:21,808 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:21,808 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:21,809 INFO sqlalchemy.engine.base.Engine Thread-260 : ROLLBACK
2020-05-20 12:17:22,052 INFO sqlalchemy.engine.base.Engine Thread-270 : BEGIN (implicit)
2020-05-20 12:17:22,053 INFO sqlalchemy.engine.base.Engine Thread-270 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:22,055 INFO sqlalchemy.engine.base.Engine Thread-269 : BEGIN (implicit)
2020-05-20 12:17:22,055 INFO sqlalchemy.engine.base.Engine Thread-270 : (1, 1)
2020-05-20 12:17:22,058 INFO sqlalchemy.engine.base.Engine Thread-272 : BEGIN (implicit)
2020-05-20 12:17:22,059 INFO sqlalchemy.engine.base.Engine Thread-269 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:22,063 INFO sqlalchemy.engine.base.Engine Thread-269 : (1, 1)
2020-05-20 12:17:22,062 DEBUG sqlalchemy.engine.base.Engine Thread-270 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:22,064 DEBUG sqlalchemy.engine.base.Engine Thread-270 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:22,063 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:22,062 INFO sqlalchemy.engine.base.Engine Thread-271 : BEGIN (implicit)
2020-05-20 12:17:22,064 INFO sqlalchemy.engine.base.Engine Thread-272 : (1, 1)
2020-05-20 12:17:22,064 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:22,065 INFO sqlalchemy.engine.base.Engine Thread-271 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:22,067 INFO sqlalchemy.engine.base.Engine Thread-271 : (1, 1)
2020-05-20 12:17:22,067 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:22,066 INFO sqlalchemy.engine.base.Engine Thread-270 : ROLLBACK
2020-05-20 12:17:22,068 DEBUG sqlalchemy.engine.base.Engine Thread-271 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:22,068 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:22,069 DEBUG sqlalchemy.engine.base.Engine Thread-271 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:22,069 INFO sqlalchemy.engine.base.Engine Thread-269 : ROLLBACK
2020-05-20 12:17:22,070 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:22,071 INFO sqlalchemy.engine.base.Engine Thread-271 : ROLLBACK
2020-05-20 12:17:22,072 INFO sqlalchemy.engine.base.Engine Thread-272 : ROLLBACK
2020-05-20 12:17:22,086 INFO sqlalchemy.engine.base.Engine Thread-273 : BEGIN (implicit)
2020-05-20 12:17:22,086 INFO sqlalchemy.engine.base.Engine Thread-273 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:22,087 INFO sqlalchemy.engine.base.Engine Thread-273 : (1, 1)
2020-05-20 12:17:22,087 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:22,087 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:22,088 INFO sqlalchemy.engine.base.Engine Thread-273 : ROLLBACK
2020-05-20 12:17:24,839 INFO sqlalchemy.engine.base.Engine Thread-274 : BEGIN (implicit)
2020-05-20 12:17:24,841 INFO sqlalchemy.engine.base.Engine Thread-274 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 12:17:24,841 INFO sqlalchemy.engine.base.Engine Thread-274 : ()
2020-05-20 12:17:24,843 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:17:24,843 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:17:24,843 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 12:17:24,844 INFO sqlalchemy.engine.base.Engine Thread-274 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 12:17:24,844 INFO sqlalchemy.engine.base.Engine Thread-274 : (100,)
2020-05-20 12:17:24,845 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 12:17:24,845 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 12:17:24,845 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 12:17:24,845 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 12:17:24,845 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 12:17:24,845 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 12:17:24,847 INFO sqlalchemy.engine.base.Engine Thread-274 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:24,847 INFO sqlalchemy.engine.base.Engine Thread-274 : (1, 1)
2020-05-20 12:17:24,848 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:24,848 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:24,855 INFO sqlalchemy.engine.base.Engine Thread-274 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:17:24,855 INFO sqlalchemy.engine.base.Engine Thread-274 : ('philip', 1, 1)
2020-05-20 12:17:24,856 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:24,856 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:24,857 INFO sqlalchemy.engine.base.Engine Thread-274 : ROLLBACK
2020-05-20 12:17:25,112 INFO sqlalchemy.engine.base.Engine Thread-283 : BEGIN (implicit)
2020-05-20 12:17:25,113 INFO sqlalchemy.engine.base.Engine Thread-283 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:25,113 INFO sqlalchemy.engine.base.Engine Thread-283 : (1, 1)
2020-05-20 12:17:25,114 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:25,116 INFO sqlalchemy.engine.base.Engine Thread-284 : BEGIN (implicit)
2020-05-20 12:17:25,117 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:25,118 INFO sqlalchemy.engine.base.Engine Thread-284 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:25,122 INFO sqlalchemy.engine.base.Engine Thread-284 : (1, 1)
2020-05-20 12:17:25,122 INFO sqlalchemy.engine.base.Engine Thread-283 : ROLLBACK
2020-05-20 12:17:25,121 INFO sqlalchemy.engine.base.Engine Thread-285 : BEGIN (implicit)
2020-05-20 12:17:25,124 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:25,126 INFO sqlalchemy.engine.base.Engine Thread-286 : BEGIN (implicit)
2020-05-20 12:17:25,127 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:25,130 INFO sqlalchemy.engine.base.Engine Thread-285 : (1, 1)
2020-05-20 12:17:25,130 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:25,129 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:25,130 INFO sqlalchemy.engine.base.Engine Thread-286 : (1, 1)
2020-05-20 12:17:25,132 INFO sqlalchemy.engine.base.Engine Thread-284 : ROLLBACK
2020-05-20 12:17:25,132 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:25,132 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:25,134 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:25,134 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:25,135 INFO sqlalchemy.engine.base.Engine Thread-286 : ROLLBACK
2020-05-20 12:17:25,136 INFO sqlalchemy.engine.base.Engine Thread-285 : ROLLBACK
2020-05-20 12:17:25,145 INFO sqlalchemy.engine.base.Engine Thread-287 : BEGIN (implicit)
2020-05-20 12:17:25,146 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:25,146 INFO sqlalchemy.engine.base.Engine Thread-287 : (1, 1)
2020-05-20 12:17:25,147 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:25,147 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:25,148 INFO sqlalchemy.engine.base.Engine Thread-287 : ROLLBACK
2020-05-20 12:17:25,167 INFO sqlalchemy.engine.base.Engine Thread-288 : BEGIN (implicit)
2020-05-20 12:17:25,169 INFO sqlalchemy.engine.base.Engine Thread-288 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:25,169 INFO sqlalchemy.engine.base.Engine Thread-288 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:17:25,170 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:25,170 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:25,170 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:25,174 INFO sqlalchemy.engine.base.Engine Thread-288 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:25,174 INFO sqlalchemy.engine.base.Engine Thread-288 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:17:25,175 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:25,180 INFO sqlalchemy.engine.base.Engine Thread-288 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:17:25,180 INFO sqlalchemy.engine.base.Engine Thread-288 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:25,181 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:25,185 INFO sqlalchemy.engine.base.Engine Thread-288 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:17:25,186 INFO sqlalchemy.engine.base.Engine Thread-288 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:25,186 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:25,187 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:17:25,187 INFO sqlalchemy.engine.base.Engine Thread-288 : ROLLBACK
2020-05-20 12:17:25,211 INFO sqlalchemy.engine.base.Engine Thread-289 : BEGIN (implicit)
2020-05-20 12:17:25,212 INFO sqlalchemy.engine.base.Engine Thread-289 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:25,213 INFO sqlalchemy.engine.base.Engine Thread-289 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:17:25,213 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:25,214 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:25,214 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:25,217 INFO sqlalchemy.engine.base.Engine Thread-289 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:25,217 INFO sqlalchemy.engine.base.Engine Thread-289 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:17:25,218 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:25,223 INFO sqlalchemy.engine.base.Engine Thread-289 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:17:25,223 INFO sqlalchemy.engine.base.Engine Thread-289 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:25,224 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:25,228 INFO sqlalchemy.engine.base.Engine Thread-289 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:17:25,228 INFO sqlalchemy.engine.base.Engine Thread-289 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:25,229 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:25,229 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:17:25,230 INFO sqlalchemy.engine.base.Engine Thread-289 : ROLLBACK
2020-05-20 12:17:30,091 INFO sqlalchemy.engine.base.Engine Thread-290 : BEGIN (implicit)
2020-05-20 12:17:30,092 INFO sqlalchemy.engine.base.Engine Thread-290 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:17:30,092 INFO sqlalchemy.engine.base.Engine Thread-290 : ('philip', 1, 1)
2020-05-20 12:17:30,093 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:30,093 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:30,102 INFO sqlalchemy.engine.base.Engine Thread-290 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 12:17:30,102 INFO sqlalchemy.engine.base.Engine Thread-290 : (104,)
2020-05-20 12:17:30,103 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 12:17:30,104 INFO sqlalchemy.engine.base.Engine Thread-290 : ROLLBACK
2020-05-20 12:17:32,201 INFO sqlalchemy.engine.base.Engine Thread-291 : BEGIN (implicit)
2020-05-20 12:17:32,202 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-05-20 12:17:32,202 INFO sqlalchemy.engine.base.Engine Thread-291 : ('0', 1)
2020-05-20 12:17:32,203 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-05-20 12:17:32,207 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 12:17:32,207 INFO sqlalchemy.engine.base.Engine Thread-291 : ()
2020-05-20 12:17:32,208 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:17:32,209 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:17:32,209 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 12:17:32,210 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 12:17:32,210 INFO sqlalchemy.engine.base.Engine Thread-291 : (97,)
2020-05-20 12:17:32,211 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 12:17:32,211 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 12:17:32,211 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 12:17:32,214 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-05-20 12:17:32,215 INFO sqlalchemy.engine.base.Engine Thread-291 : (1, 1)
2020-05-20 12:17:32,215 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:17:32,216 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:17:32,218 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:32,218 INFO sqlalchemy.engine.base.Engine Thread-291 : (1, 1)
2020-05-20 12:17:32,219 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:32,219 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:32,223 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:17:32,223 INFO sqlalchemy.engine.base.Engine Thread-291 : ('philip', 1, 1)
2020-05-20 12:17:32,224 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:32,224 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:32,229 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:17:32,229 INFO sqlalchemy.engine.base.Engine Thread-291 : ('philip', 1, 1)
2020-05-20 12:17:32,230 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:32,230 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:32,230 INFO sqlalchemy.engine.base.Engine Thread-291 : ROLLBACK
2020-05-20 12:17:32,475 INFO sqlalchemy.engine.base.Engine Thread-301 : BEGIN (implicit)
2020-05-20 12:17:32,478 INFO sqlalchemy.engine.base.Engine Thread-300 : BEGIN (implicit)
2020-05-20 12:17:32,482 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:32,481 INFO sqlalchemy.engine.base.Engine Thread-302 : BEGIN (implicit)
2020-05-20 12:17:32,484 INFO sqlalchemy.engine.base.Engine Thread-302 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:32,483 INFO sqlalchemy.engine.base.Engine Thread-300 : (1, 1)
2020-05-20 12:17:32,479 INFO sqlalchemy.engine.base.Engine Thread-301 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:32,484 INFO sqlalchemy.engine.base.Engine Thread-302 : (1, 1)
2020-05-20 12:17:32,487 INFO sqlalchemy.engine.base.Engine Thread-303 : BEGIN (implicit)
2020-05-20 12:17:32,488 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:32,490 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:32,489 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:32,490 DEBUG sqlalchemy.engine.base.Engine Thread-302 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:32,491 DEBUG sqlalchemy.engine.base.Engine Thread-302 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:32,490 INFO sqlalchemy.engine.base.Engine Thread-303 : (1, 1)
2020-05-20 12:17:32,491 INFO sqlalchemy.engine.base.Engine Thread-300 : ROLLBACK
2020-05-20 12:17:32,492 INFO sqlalchemy.engine.base.Engine Thread-302 : ROLLBACK
2020-05-20 12:17:32,488 INFO sqlalchemy.engine.base.Engine Thread-301 : (1, 1)
2020-05-20 12:17:32,493 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:32,494 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:32,495 INFO sqlalchemy.engine.base.Engine Thread-303 : ROLLBACK
2020-05-20 12:17:32,496 DEBUG sqlalchemy.engine.base.Engine Thread-301 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:32,497 DEBUG sqlalchemy.engine.base.Engine Thread-301 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:32,498 INFO sqlalchemy.engine.base.Engine Thread-301 : ROLLBACK
2020-05-20 12:17:32,509 INFO sqlalchemy.engine.base.Engine Thread-304 : BEGIN (implicit)
2020-05-20 12:17:32,510 INFO sqlalchemy.engine.base.Engine Thread-304 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:32,510 INFO sqlalchemy.engine.base.Engine Thread-304 : (1, 1)
2020-05-20 12:17:32,511 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:32,511 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:32,512 INFO sqlalchemy.engine.base.Engine Thread-304 : ROLLBACK
2020-05-20 12:17:35,688 INFO sqlalchemy.engine.base.Engine Thread-305 : BEGIN (implicit)
2020-05-20 12:17:35,690 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 12:17:35,691 INFO sqlalchemy.engine.base.Engine Thread-305 : ()
2020-05-20 12:17:35,692 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:17:35,692 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:17:35,692 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 12:17:35,694 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 12:17:35,694 INFO sqlalchemy.engine.base.Engine Thread-305 : (100,)
2020-05-20 12:17:35,694 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 12:17:35,695 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 12:17:35,695 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 12:17:35,695 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 12:17:35,695 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 12:17:35,695 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 12:17:35,697 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:35,697 INFO sqlalchemy.engine.base.Engine Thread-305 : (1, 1)
2020-05-20 12:17:35,698 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:35,698 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:35,702 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:17:35,702 INFO sqlalchemy.engine.base.Engine Thread-305 : ('philip', 1, 1)
2020-05-20 12:17:35,703 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:35,703 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:35,705 INFO sqlalchemy.engine.base.Engine Thread-305 : ROLLBACK
2020-05-20 12:17:35,952 INFO sqlalchemy.engine.base.Engine Thread-314 : BEGIN (implicit)
2020-05-20 12:17:35,954 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:35,954 INFO sqlalchemy.engine.base.Engine Thread-314 : (1, 1)
2020-05-20 12:17:35,955 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:35,955 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:35,957 INFO sqlalchemy.engine.base.Engine Thread-314 : ROLLBACK
2020-05-20 12:17:35,959 INFO sqlalchemy.engine.base.Engine Thread-315 : BEGIN (implicit)
2020-05-20 12:17:35,960 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:35,961 INFO sqlalchemy.engine.base.Engine Thread-315 : (1, 1)
2020-05-20 12:17:35,962 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:35,965 INFO sqlalchemy.engine.base.Engine Thread-317 : BEGIN (implicit)
2020-05-20 12:17:35,967 INFO sqlalchemy.engine.base.Engine Thread-316 : BEGIN (implicit)
2020-05-20 12:17:35,969 INFO sqlalchemy.engine.base.Engine Thread-316 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:35,968 INFO sqlalchemy.engine.base.Engine Thread-317 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:35,969 INFO sqlalchemy.engine.base.Engine Thread-316 : (1, 1)
2020-05-20 12:17:35,967 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:35,970 INFO sqlalchemy.engine.base.Engine Thread-317 : (1, 1)
2020-05-20 12:17:35,971 INFO sqlalchemy.engine.base.Engine Thread-315 : ROLLBACK
2020-05-20 12:17:35,971 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:35,972 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:35,972 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:35,973 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:35,974 INFO sqlalchemy.engine.base.Engine Thread-316 : ROLLBACK
2020-05-20 12:17:35,975 INFO sqlalchemy.engine.base.Engine Thread-317 : ROLLBACK
2020-05-20 12:17:35,991 INFO sqlalchemy.engine.base.Engine Thread-318 : BEGIN (implicit)
2020-05-20 12:17:35,991 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:17:35,992 INFO sqlalchemy.engine.base.Engine Thread-318 : (1, 1)
2020-05-20 12:17:35,992 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:17:35,993 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:17:35,993 INFO sqlalchemy.engine.base.Engine Thread-318 : ROLLBACK
2020-05-20 12:17:36,013 INFO sqlalchemy.engine.base.Engine Thread-319 : BEGIN (implicit)
2020-05-20 12:17:36,015 INFO sqlalchemy.engine.base.Engine Thread-319 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:36,015 INFO sqlalchemy.engine.base.Engine Thread-319 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:17:36,016 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:36,016 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:36,016 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:36,019 INFO sqlalchemy.engine.base.Engine Thread-319 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:36,020 INFO sqlalchemy.engine.base.Engine Thread-319 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:17:36,020 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:36,024 INFO sqlalchemy.engine.base.Engine Thread-319 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:17:36,024 INFO sqlalchemy.engine.base.Engine Thread-319 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:36,025 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:36,029 INFO sqlalchemy.engine.base.Engine Thread-319 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:17:36,029 INFO sqlalchemy.engine.base.Engine Thread-319 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:36,030 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:36,030 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:17:36,031 INFO sqlalchemy.engine.base.Engine Thread-319 : ROLLBACK
2020-05-20 12:17:36,053 INFO sqlalchemy.engine.base.Engine Thread-320 : BEGIN (implicit)
2020-05-20 12:17:36,055 INFO sqlalchemy.engine.base.Engine Thread-320 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:36,055 INFO sqlalchemy.engine.base.Engine Thread-320 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:17:36,056 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:36,056 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:36,056 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:17:36,059 INFO sqlalchemy.engine.base.Engine Thread-320 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:17:36,060 INFO sqlalchemy.engine.base.Engine Thread-320 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:17:36,060 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:36,065 INFO sqlalchemy.engine.base.Engine Thread-320 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:17:36,065 INFO sqlalchemy.engine.base.Engine Thread-320 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:36,065 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:36,069 INFO sqlalchemy.engine.base.Engine Thread-320 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:17:36,070 INFO sqlalchemy.engine.base.Engine Thread-320 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:17:36,070 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:17:36,071 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:17:36,071 INFO sqlalchemy.engine.base.Engine Thread-320 : ROLLBACK
2020-05-20 12:22:02,077 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-20 12:22:02,077 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 12:22:02,079 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-20 12:22:02,079 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-20 12:22:02,080 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-20 12:22:02,080 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 12:22:02,081 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-20 12:22:02,081 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-20 12:22:02,081 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-20 12:22:02,082 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 12:22:02,082 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-20 12:22:02,082 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-20 12:22:02,082 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-20 12:22:02,082 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 12:22:02,083 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-20 12:22:02,083 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-20 12:22:02,084 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-20 12:22:02,084 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 12:22:02,085 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-20 12:22:02,085 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 12:22:02,086 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-20 12:22:02,086 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 12:22:02,086 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-20 12:22:02,092 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 12:22:02,092 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-20 12:22:02,094 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:22:02,094 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:22:02,095 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 12:22:02,097 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 12:22:02,097 INFO sqlalchemy.engine.base.Engine Thread-2 : (100,)
2020-05-20 12:22:02,098 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 12:22:02,098 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 12:22:02,099 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 12:22:02,099 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 12:22:02,099 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 12:22:02,099 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 12:22:02,103 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:22:02,103 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-05-20 12:22:02,104 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:02,104 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:02,177 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:22:02,177 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-05-20 12:22:02,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:02,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:02,181 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-20 12:22:02,435 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-05-20 12:22:02,437 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:22:02,437 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-05-20 12:22:02,440 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:02,441 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:02,441 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-05-20 12:22:02,442 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:22:02,442 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-05-20 12:22:02,448 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:02,454 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:02,454 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-05-20 12:22:02,461 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-05-20 12:22:02,462 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-05-20 12:22:02,463 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-05-20 12:22:02,466 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-05-20 12:22:02,470 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:22:02,469 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:22:02,470 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-05-20 12:22:02,468 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:22:02,471 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-05-20 12:22:02,471 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-05-20 12:22:02,471 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:02,472 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:02,472 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:02,473 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:02,475 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-05-20 12:22:02,474 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:02,473 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-05-20 12:22:02,475 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:02,477 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-05-20 12:22:02,503 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-05-20 12:22:02,505 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:22:02,506 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:22:02,507 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:02,507 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:22:02,507 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:22:02,511 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:22:02,511 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:22:02,512 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:02,516 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:22:02,517 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:22:02,518 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:02,522 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:22:02,522 INFO sqlalchemy.engine.base.Engine Thread-16 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:22:02,523 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:02,523 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:22:02,524 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-05-20 12:22:02,556 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-05-20 12:22:02,557 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:22:02,557 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:22:02,560 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:02,561 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:22:02,561 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:22:02,564 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:22:02,564 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:22:02,565 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:02,570 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:22:02,570 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:22:02,571 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:02,575 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:22:02,575 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:22:02,576 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:02,576 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:22:02,577 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-05-20 12:22:06,111 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-05-20 12:22:06,112 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:22:06,112 INFO sqlalchemy.engine.base.Engine Thread-19 : ('philip', 1, 1)
2020-05-20 12:22:06,113 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:06,113 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:06,123 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 12:22:06,123 INFO sqlalchemy.engine.base.Engine Thread-19 : (103,)
2020-05-20 12:22:06,124 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 12:22:06,125 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-05-20 12:22:38,863 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-05-20 12:22:38,865 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 12:22:38,866 INFO sqlalchemy.engine.base.Engine Thread-20 : ()
2020-05-20 12:22:38,867 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 12:22:38,868 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 12:22:38,868 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 12:22:38,869 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 12:22:38,869 INFO sqlalchemy.engine.base.Engine Thread-20 : (100,)
2020-05-20 12:22:38,870 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 12:22:38,870 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 12:22:38,870 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 12:22:38,870 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 12:22:38,870 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 12:22:38,870 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 12:22:38,872 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:22:38,873 INFO sqlalchemy.engine.base.Engine Thread-20 : (1, 1)
2020-05-20 12:22:38,873 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:38,873 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:38,888 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:22:38,888 INFO sqlalchemy.engine.base.Engine Thread-20 : ('philip', 1, 1)
2020-05-20 12:22:38,889 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:38,889 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:38,891 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-05-20 12:22:39,150 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-05-20 12:22:39,151 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:22:39,152 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-05-20 12:22:39,154 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-05-20 12:22:39,154 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:39,155 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:22:39,158 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-05-20 12:22:39,158 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:39,157 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-05-20 12:22:39,159 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:22:39,159 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-05-20 12:22:39,160 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:39,163 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:39,162 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:39,161 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-05-20 12:22:39,165 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-05-20 12:22:39,165 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-05-20 12:22:39,166 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:39,167 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:22:39,169 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-05-20 12:22:39,169 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-05-20 12:22:39,170 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:39,170 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:39,172 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-05-20 12:22:39,183 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-05-20 12:22:39,184 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 12:22:39,184 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-05-20 12:22:39,185 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:39,185 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:39,186 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-05-20 12:22:39,208 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-05-20 12:22:39,209 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:22:39,209 INFO sqlalchemy.engine.base.Engine Thread-34 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:22:39,210 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:39,210 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:22:39,210 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:22:39,214 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:22:39,214 INFO sqlalchemy.engine.base.Engine Thread-34 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:22:39,215 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:39,219 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:22:39,219 INFO sqlalchemy.engine.base.Engine Thread-34 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:22:39,220 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:39,224 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:22:39,224 INFO sqlalchemy.engine.base.Engine Thread-34 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:22:39,225 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:39,225 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:22:39,226 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-05-20 12:22:39,249 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-05-20 12:22:39,253 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:22:39,254 INFO sqlalchemy.engine.base.Engine Thread-35 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 12:22:39,255 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:39,255 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:22:39,255 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 12:22:39,258 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 12:22:39,258 INFO sqlalchemy.engine.base.Engine Thread-35 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 12:22:39,259 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:39,263 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 12:22:39,263 INFO sqlalchemy.engine.base.Engine Thread-35 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:22:39,264 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:39,268 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 12:22:39,268 INFO sqlalchemy.engine.base.Engine Thread-35 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 12:22:39,269 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 12:22:39,269 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 12:22:39,270 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-05-20 12:22:44,206 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-05-20 12:22:44,207 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:22:44,208 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-05-20 12:22:44,208 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:44,209 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:44,218 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 12:22:44,218 INFO sqlalchemy.engine.base.Engine Thread-37 : (103,)
2020-05-20 12:22:44,219 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 12:22:44,219 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-05-20 12:22:46,457 INFO sqlalchemy.engine.base.Engine Thread-38 : BEGIN (implicit)
2020-05-20 12:22:46,458 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:22:46,458 INFO sqlalchemy.engine.base.Engine Thread-38 : ('philip', 1, 1)
2020-05-20 12:22:46,459 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:22:46,459 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:22:46,469 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 12:22:46,469 INFO sqlalchemy.engine.base.Engine Thread-38 : (108,)
2020-05-20 12:22:46,469 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 12:22:46,470 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 12:22:46,470 INFO sqlalchemy.engine.base.Engine Thread-38 : ROLLBACK
2020-05-20 12:24:28,833 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-05-20 12:24:28,834 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 12:24:28,834 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip', 1, 1)
2020-05-20 12:24:28,836 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 12:24:28,836 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 12:24:28,847 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-05-20 12:24:28,847 INFO sqlalchemy.engine.base.Engine Thread-39 : ()
2020-05-20 12:24:28,848 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 12:24:28,849 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 12:24:28,849 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 12:24:28,850 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-05-20 13:06:12,375 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-05-20 13:06:12,377 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 13:06:12,378 INFO sqlalchemy.engine.base.Engine Thread-44 : ()
2020-05-20 13:06:12,381 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 13:06:12,381 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 13:06:12,381 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 13:06:12,383 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 13:06:12,383 INFO sqlalchemy.engine.base.Engine Thread-44 : (100,)
2020-05-20 13:06:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 13:06:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 13:06:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 13:06:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 13:06:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 13:06:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 13:06:12,387 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:06:12,387 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-05-20 13:06:12,387 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:06:12,388 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:06:12,404 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:06:12,404 INFO sqlalchemy.engine.base.Engine Thread-44 : ('philip', 1, 1)
2020-05-20 13:06:12,405 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:06:12,405 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:06:12,407 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-05-20 13:06:12,685 INFO sqlalchemy.engine.base.Engine Thread-54 : BEGIN (implicit)
2020-05-20 13:06:12,686 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:06:12,689 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-05-20 13:06:12,692 INFO sqlalchemy.engine.base.Engine Thread-56 : BEGIN (implicit)
2020-05-20 13:06:12,694 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-05-20 13:06:12,695 INFO sqlalchemy.engine.base.Engine Thread-54 : (1, 1)
2020-05-20 13:06:12,696 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:06:12,699 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-05-20 13:06:12,698 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:06:12,700 INFO sqlalchemy.engine.base.Engine Thread-53 : (1, 1)
2020-05-20 13:06:12,699 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:06:12,699 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:06:12,697 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:06:12,701 INFO sqlalchemy.engine.base.Engine Thread-56 : (1, 1)
2020-05-20 13:06:12,700 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:06:12,700 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:06:12,701 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:06:12,702 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-05-20 13:06:12,703 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:06:12,704 INFO sqlalchemy.engine.base.Engine Thread-54 : ROLLBACK
2020-05-20 13:06:12,704 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:06:12,705 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:06:12,708 INFO sqlalchemy.engine.base.Engine Thread-56 : ROLLBACK
2020-05-20 13:06:12,707 INFO sqlalchemy.engine.base.Engine Thread-53 : ROLLBACK
2020-05-20 13:06:12,715 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-05-20 13:06:12,716 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:06:12,716 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-05-20 13:06:12,717 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:06:12,717 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:06:12,718 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-05-20 13:06:12,747 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-05-20 13:06:12,749 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:06:12,749 INFO sqlalchemy.engine.base.Engine Thread-58 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 13:06:12,750 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:06:12,750 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:06:12,751 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:06:12,754 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:06:12,754 INFO sqlalchemy.engine.base.Engine Thread-58 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 13:06:12,755 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:06:12,760 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 13:06:12,760 INFO sqlalchemy.engine.base.Engine Thread-58 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:06:12,761 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:06:12,765 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 13:06:12,765 INFO sqlalchemy.engine.base.Engine Thread-58 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:06:12,766 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:06:12,766 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 13:06:12,767 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-05-20 13:06:12,792 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-05-20 13:06:12,794 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:06:12,794 INFO sqlalchemy.engine.base.Engine Thread-59 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 13:06:12,796 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:06:12,797 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:06:12,797 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:06:12,800 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:06:12,800 INFO sqlalchemy.engine.base.Engine Thread-59 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 13:06:12,802 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:06:12,806 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 13:06:12,806 INFO sqlalchemy.engine.base.Engine Thread-59 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:06:12,807 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:06:12,811 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 13:06:12,812 INFO sqlalchemy.engine.base.Engine Thread-59 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:06:12,812 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:06:12,813 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 13:06:12,813 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-05-20 13:06:32,014 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-05-20 13:06:32,015 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:06:32,016 INFO sqlalchemy.engine.base.Engine Thread-61 : ('philip', 1, 1)
2020-05-20 13:06:32,016 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:06:32,017 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:06:32,027 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 13:06:32,028 INFO sqlalchemy.engine.base.Engine Thread-61 : (108,)
2020-05-20 13:06:32,028 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 13:06:32,029 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 13:06:32,029 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-05-20 13:06:39,385 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-05-20 13:06:39,386 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:06:39,387 INFO sqlalchemy.engine.base.Engine Thread-62 : ('philip', 1, 1)
2020-05-20 13:06:39,388 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:06:39,388 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:06:39,397 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 13:06:39,397 INFO sqlalchemy.engine.base.Engine Thread-62 : (101,)
2020-05-20 13:06:39,398 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 13:06:39,398 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 13:06:39,399 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-05-20 13:06:44,588 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-05-20 13:06:44,590 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:06:44,590 INFO sqlalchemy.engine.base.Engine Thread-63 : ('philip', 1, 1)
2020-05-20 13:06:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:06:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:06:44,601 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-05-20 13:06:44,601 INFO sqlalchemy.engine.base.Engine Thread-63 : ()
2020-05-20 13:06:44,602 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 13:06:44,602 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 13:06:44,602 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 13:06:44,603 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-05-20 13:07:22,168 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-05-20 13:07:22,170 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 13:07:22,170 INFO sqlalchemy.engine.base.Engine Thread-64 : ()
2020-05-20 13:07:22,171 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 13:07:22,172 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 13:07:22,172 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 13:07:22,173 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 13:07:22,174 INFO sqlalchemy.engine.base.Engine Thread-64 : (100,)
2020-05-20 13:07:22,174 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 13:07:22,175 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 13:07:22,175 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 13:07:22,175 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 13:07:22,175 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 13:07:22,175 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 13:07:22,177 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:07:22,177 INFO sqlalchemy.engine.base.Engine Thread-64 : (1, 1)
2020-05-20 13:07:22,178 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:22,178 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:22,193 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:07:22,193 INFO sqlalchemy.engine.base.Engine Thread-64 : ('philip', 1, 1)
2020-05-20 13:07:22,194 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:22,194 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:22,196 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-05-20 13:07:22,481 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-05-20 13:07:22,484 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-05-20 13:07:22,485 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:07:22,487 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:07:22,487 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-05-20 13:07:22,493 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:22,490 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-05-20 13:07:22,492 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-05-20 13:07:22,494 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:22,495 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:07:22,496 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-05-20 13:07:22,495 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:22,490 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-05-20 13:07:22,496 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:22,497 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:07:22,500 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-05-20 13:07:22,499 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-05-20 13:07:22,500 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-05-20 13:07:22,498 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:22,501 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:22,502 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-05-20 13:07:22,503 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:22,503 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:22,504 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-05-20 13:07:22,511 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-05-20 13:07:22,512 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:07:22,512 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-05-20 13:07:22,512 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:22,513 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:22,514 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-05-20 13:07:22,540 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-05-20 13:07:22,541 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:07:22,541 INFO sqlalchemy.engine.base.Engine Thread-78 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 13:07:22,542 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:22,542 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:07:22,543 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:07:22,546 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:07:22,546 INFO sqlalchemy.engine.base.Engine Thread-78 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 13:07:22,547 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:22,551 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 13:07:22,551 INFO sqlalchemy.engine.base.Engine Thread-78 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:07:22,552 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:22,556 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 13:07:22,557 INFO sqlalchemy.engine.base.Engine Thread-78 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:07:22,557 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:22,557 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 13:07:22,558 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-05-20 13:07:22,586 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-05-20 13:07:22,588 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:07:22,588 INFO sqlalchemy.engine.base.Engine Thread-79 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 13:07:22,589 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:22,589 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:07:22,589 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:07:22,593 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:07:22,593 INFO sqlalchemy.engine.base.Engine Thread-79 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 13:07:22,595 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:22,600 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 13:07:22,600 INFO sqlalchemy.engine.base.Engine Thread-79 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:07:22,601 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:22,606 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 13:07:22,606 INFO sqlalchemy.engine.base.Engine Thread-79 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:07:22,607 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:22,607 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 13:07:22,608 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-05-20 13:07:25,748 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-05-20 13:07:25,749 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:07:25,749 INFO sqlalchemy.engine.base.Engine Thread-81 : ('philip', 1, 1)
2020-05-20 13:07:25,750 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:25,751 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:25,760 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 13:07:25,760 INFO sqlalchemy.engine.base.Engine Thread-81 : (108,)
2020-05-20 13:07:25,761 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 13:07:25,761 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 13:07:25,762 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-05-20 13:07:51,434 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-05-20 13:07:51,437 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 13:07:51,437 INFO sqlalchemy.engine.base.Engine Thread-82 : ()
2020-05-20 13:07:51,438 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 13:07:51,438 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 13:07:51,438 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 13:07:51,440 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 13:07:51,440 INFO sqlalchemy.engine.base.Engine Thread-82 : (100,)
2020-05-20 13:07:51,441 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 13:07:51,441 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 13:07:51,441 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 13:07:51,442 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 13:07:51,442 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 13:07:51,442 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 13:07:51,444 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:07:51,444 INFO sqlalchemy.engine.base.Engine Thread-82 : (1, 1)
2020-05-20 13:07:51,444 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:51,445 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:51,458 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:07:51,458 INFO sqlalchemy.engine.base.Engine Thread-82 : ('philip', 1, 1)
2020-05-20 13:07:51,459 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:51,459 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:51,461 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-05-20 13:07:51,710 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-05-20 13:07:51,713 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-05-20 13:07:51,714 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:07:51,715 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:07:51,715 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-05-20 13:07:51,718 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-05-20 13:07:51,723 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:07:51,723 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-05-20 13:07:51,722 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:51,724 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:51,725 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-05-20 13:07:51,719 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-05-20 13:07:51,724 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:51,721 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-05-20 13:07:51,726 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:51,726 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:51,728 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:51,727 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:07:51,729 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-05-20 13:07:51,729 INFO sqlalchemy.engine.base.Engine Thread-94 : (1, 1)
2020-05-20 13:07:51,730 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-05-20 13:07:51,733 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:51,733 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:51,734 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-05-20 13:07:51,744 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-05-20 13:07:51,745 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:07:51,745 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-05-20 13:07:51,746 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:51,746 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:51,747 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-05-20 13:07:51,769 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-05-20 13:07:51,771 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:07:51,771 INFO sqlalchemy.engine.base.Engine Thread-96 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 13:07:51,772 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:51,772 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:07:51,772 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:07:51,775 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:07:51,775 INFO sqlalchemy.engine.base.Engine Thread-96 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 13:07:51,776 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:51,781 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 13:07:51,781 INFO sqlalchemy.engine.base.Engine Thread-96 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:07:51,782 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:51,786 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 13:07:51,786 INFO sqlalchemy.engine.base.Engine Thread-96 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:07:51,787 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:51,787 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 13:07:51,788 INFO sqlalchemy.engine.base.Engine Thread-96 : ROLLBACK
2020-05-20 13:07:51,812 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-05-20 13:07:51,814 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:07:51,814 INFO sqlalchemy.engine.base.Engine Thread-97 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 13:07:51,816 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:51,816 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:07:51,817 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:07:51,820 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:07:51,820 INFO sqlalchemy.engine.base.Engine Thread-97 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 13:07:51,821 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:51,826 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 13:07:51,826 INFO sqlalchemy.engine.base.Engine Thread-97 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:07:51,827 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:51,831 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 13:07:51,831 INFO sqlalchemy.engine.base.Engine Thread-97 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:07:51,832 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:07:51,832 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 13:07:51,833 INFO sqlalchemy.engine.base.Engine Thread-97 : ROLLBACK
2020-05-20 13:07:54,475 INFO sqlalchemy.engine.base.Engine Thread-99 : BEGIN (implicit)
2020-05-20 13:07:54,477 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:07:54,477 INFO sqlalchemy.engine.base.Engine Thread-99 : ('philip', 1, 1)
2020-05-20 13:07:54,477 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:07:54,478 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:07:54,490 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 13:07:54,490 INFO sqlalchemy.engine.base.Engine Thread-99 : (108,)
2020-05-20 13:07:54,491 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 13:07:54,491 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 13:07:54,492 INFO sqlalchemy.engine.base.Engine Thread-99 : ROLLBACK
2020-05-20 13:08:00,843 INFO sqlalchemy.engine.base.Engine Thread-100 : BEGIN (implicit)
2020-05-20 13:08:00,844 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:08:00,844 INFO sqlalchemy.engine.base.Engine Thread-100 : ('philip', 1, 1)
2020-05-20 13:08:00,845 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:08:00,845 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:08:00,854 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 13:08:00,854 INFO sqlalchemy.engine.base.Engine Thread-100 : (101,)
2020-05-20 13:08:00,855 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 13:08:00,855 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 13:08:00,856 INFO sqlalchemy.engine.base.Engine Thread-100 : ROLLBACK
2020-05-20 13:57:01,225 INFO sqlalchemy.engine.base.Engine Thread-101 : BEGIN (implicit)
2020-05-20 13:57:01,228 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 13:57:01,229 INFO sqlalchemy.engine.base.Engine Thread-101 : ()
2020-05-20 13:57:01,231 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 13:57:01,232 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 13:57:01,232 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 13:57:01,234 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 13:57:01,234 INFO sqlalchemy.engine.base.Engine Thread-101 : (100,)
2020-05-20 13:57:01,235 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 13:57:01,235 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 13:57:01,235 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 13:57:01,235 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 13:57:01,235 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 13:57:01,235 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 13:57:01,238 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:57:01,238 INFO sqlalchemy.engine.base.Engine Thread-101 : (1, 1)
2020-05-20 13:57:01,238 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:01,239 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:01,255 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:57:01,255 INFO sqlalchemy.engine.base.Engine Thread-101 : ('philip', 1, 1)
2020-05-20 13:57:01,256 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:01,256 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:01,258 INFO sqlalchemy.engine.base.Engine Thread-101 : ROLLBACK
2020-05-20 13:57:01,521 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-05-20 13:57:01,522 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:57:01,522 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-05-20 13:57:01,524 INFO sqlalchemy.engine.base.Engine Thread-111 : BEGIN (implicit)
2020-05-20 13:57:01,525 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:01,526 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:57:01,529 INFO sqlalchemy.engine.base.Engine Thread-112 : BEGIN (implicit)
2020-05-20 13:57:01,533 INFO sqlalchemy.engine.base.Engine Thread-112 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:57:01,532 INFO sqlalchemy.engine.base.Engine Thread-113 : BEGIN (implicit)
2020-05-20 13:57:01,535 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:57:01,534 INFO sqlalchemy.engine.base.Engine Thread-112 : (1, 1)
2020-05-20 13:57:01,529 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:01,535 INFO sqlalchemy.engine.base.Engine Thread-113 : (1, 1)
2020-05-20 13:57:01,532 INFO sqlalchemy.engine.base.Engine Thread-111 : (1, 1)
2020-05-20 13:57:01,537 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-05-20 13:57:01,538 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:01,538 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:01,540 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:01,539 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:01,542 INFO sqlalchemy.engine.base.Engine Thread-113 : ROLLBACK
2020-05-20 13:57:01,541 INFO sqlalchemy.engine.base.Engine Thread-112 : ROLLBACK
2020-05-20 13:57:01,538 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:01,543 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:01,544 INFO sqlalchemy.engine.base.Engine Thread-111 : ROLLBACK
2020-05-20 13:57:01,554 INFO sqlalchemy.engine.base.Engine Thread-114 : BEGIN (implicit)
2020-05-20 13:57:01,555 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:57:01,556 INFO sqlalchemy.engine.base.Engine Thread-114 : (1, 1)
2020-05-20 13:57:01,556 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:01,556 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:01,557 INFO sqlalchemy.engine.base.Engine Thread-114 : ROLLBACK
2020-05-20 13:57:01,584 INFO sqlalchemy.engine.base.Engine Thread-115 : BEGIN (implicit)
2020-05-20 13:57:01,586 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:57:01,586 INFO sqlalchemy.engine.base.Engine Thread-115 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 13:57:01,587 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:01,587 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:57:01,588 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:57:01,591 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:57:01,591 INFO sqlalchemy.engine.base.Engine Thread-115 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 13:57:01,592 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:01,596 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 13:57:01,596 INFO sqlalchemy.engine.base.Engine Thread-115 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:57:01,597 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:01,601 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 13:57:01,602 INFO sqlalchemy.engine.base.Engine Thread-115 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:57:01,602 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:01,603 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 13:57:01,604 INFO sqlalchemy.engine.base.Engine Thread-115 : ROLLBACK
2020-05-20 13:57:01,633 INFO sqlalchemy.engine.base.Engine Thread-116 : BEGIN (implicit)
2020-05-20 13:57:01,634 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:57:01,636 INFO sqlalchemy.engine.base.Engine Thread-116 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 13:57:01,638 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:01,638 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:57:01,638 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:57:01,641 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:57:01,641 INFO sqlalchemy.engine.base.Engine Thread-116 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 13:57:01,642 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:01,647 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 13:57:01,647 INFO sqlalchemy.engine.base.Engine Thread-116 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:57:01,648 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:01,652 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 13:57:01,652 INFO sqlalchemy.engine.base.Engine Thread-116 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:57:01,653 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:01,653 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 13:57:01,654 INFO sqlalchemy.engine.base.Engine Thread-116 : ROLLBACK
2020-05-20 13:57:04,810 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-05-20 13:57:04,812 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:57:04,812 INFO sqlalchemy.engine.base.Engine Thread-118 : ('philip', 1, 1)
2020-05-20 13:57:04,813 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:04,814 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:04,824 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 13:57:04,824 INFO sqlalchemy.engine.base.Engine Thread-118 : (108,)
2020-05-20 13:57:04,825 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 13:57:04,825 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 13:57:04,826 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-05-20 13:57:18,195 INFO sqlalchemy.engine.base.Engine Thread-119 : BEGIN (implicit)
2020-05-20 13:57:18,197 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 13:57:18,197 INFO sqlalchemy.engine.base.Engine Thread-119 : ()
2020-05-20 13:57:18,198 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 13:57:18,199 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 13:57:18,199 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 13:57:18,200 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 13:57:18,201 INFO sqlalchemy.engine.base.Engine Thread-119 : (100,)
2020-05-20 13:57:18,201 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 13:57:18,202 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 13:57:18,202 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 13:57:18,202 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 13:57:18,202 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 13:57:18,202 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 13:57:18,204 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:57:18,204 INFO sqlalchemy.engine.base.Engine Thread-119 : (1, 1)
2020-05-20 13:57:18,205 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:18,205 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:18,221 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:57:18,221 INFO sqlalchemy.engine.base.Engine Thread-119 : ('philip', 1, 1)
2020-05-20 13:57:18,222 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:18,222 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:18,224 INFO sqlalchemy.engine.base.Engine Thread-119 : ROLLBACK
2020-05-20 13:57:18,487 INFO sqlalchemy.engine.base.Engine Thread-129 : BEGIN (implicit)
2020-05-20 13:57:18,490 INFO sqlalchemy.engine.base.Engine Thread-128 : BEGIN (implicit)
2020-05-20 13:57:18,491 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:57:18,494 INFO sqlalchemy.engine.base.Engine Thread-130 : BEGIN (implicit)
2020-05-20 13:57:18,495 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:57:18,501 INFO sqlalchemy.engine.base.Engine Thread-131 : BEGIN (implicit)
2020-05-20 13:57:18,501 INFO sqlalchemy.engine.base.Engine Thread-129 : (1, 1)
2020-05-20 13:57:18,502 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:57:18,503 INFO sqlalchemy.engine.base.Engine Thread-130 : (1, 1)
2020-05-20 13:57:18,502 INFO sqlalchemy.engine.base.Engine Thread-128 : (1, 1)
2020-05-20 13:57:18,503 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:57:18,505 INFO sqlalchemy.engine.base.Engine Thread-131 : (1, 1)
2020-05-20 13:57:18,505 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:18,504 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:18,505 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:18,505 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:18,508 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:18,509 INFO sqlalchemy.engine.base.Engine Thread-129 : ROLLBACK
2020-05-20 13:57:18,507 INFO sqlalchemy.engine.base.Engine Thread-128 : ROLLBACK
2020-05-20 13:57:18,506 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:18,510 INFO sqlalchemy.engine.base.Engine Thread-130 : ROLLBACK
2020-05-20 13:57:18,506 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:18,511 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:18,512 INFO sqlalchemy.engine.base.Engine Thread-131 : ROLLBACK
2020-05-20 13:57:18,526 INFO sqlalchemy.engine.base.Engine Thread-132 : BEGIN (implicit)
2020-05-20 13:57:18,527 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 13:57:18,527 INFO sqlalchemy.engine.base.Engine Thread-132 : (1, 1)
2020-05-20 13:57:18,527 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:18,528 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:18,529 INFO sqlalchemy.engine.base.Engine Thread-132 : ROLLBACK
2020-05-20 13:57:18,581 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-05-20 13:57:18,583 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:57:18,583 INFO sqlalchemy.engine.base.Engine Thread-133 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 13:57:18,584 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:18,584 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:57:18,584 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:57:18,587 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:57:18,587 INFO sqlalchemy.engine.base.Engine Thread-133 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 13:57:18,588 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:18,594 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 13:57:18,596 INFO sqlalchemy.engine.base.Engine Thread-133 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:57:18,598 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:18,602 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 13:57:18,602 INFO sqlalchemy.engine.base.Engine Thread-133 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:57:18,603 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:18,603 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 13:57:18,604 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-05-20 13:57:18,626 INFO sqlalchemy.engine.base.Engine Thread-135 : BEGIN (implicit)
2020-05-20 13:57:18,628 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:57:18,628 INFO sqlalchemy.engine.base.Engine Thread-135 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 13:57:18,629 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:18,629 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:57:18,629 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 13:57:18,633 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 13:57:18,633 INFO sqlalchemy.engine.base.Engine Thread-135 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 13:57:18,634 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:18,638 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 13:57:18,638 INFO sqlalchemy.engine.base.Engine Thread-135 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:57:18,639 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:18,643 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 13:57:18,643 INFO sqlalchemy.engine.base.Engine Thread-135 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 13:57:18,643 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 13:57:18,644 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 13:57:18,644 INFO sqlalchemy.engine.base.Engine Thread-135 : ROLLBACK
2020-05-20 13:57:21,182 INFO sqlalchemy.engine.base.Engine Thread-136 : BEGIN (implicit)
2020-05-20 13:57:21,183 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:57:21,183 INFO sqlalchemy.engine.base.Engine Thread-136 : ('philip', 1, 1)
2020-05-20 13:57:21,184 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:21,184 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:21,193 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 13:57:21,193 INFO sqlalchemy.engine.base.Engine Thread-136 : (108,)
2020-05-20 13:57:21,194 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 13:57:21,194 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 13:57:21,195 INFO sqlalchemy.engine.base.Engine Thread-136 : ROLLBACK
2020-05-20 13:57:23,909 INFO sqlalchemy.engine.base.Engine Thread-137 : BEGIN (implicit)
2020-05-20 13:57:23,910 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:57:23,910 INFO sqlalchemy.engine.base.Engine Thread-137 : ('philip', 1, 1)
2020-05-20 13:57:23,911 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:23,912 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:23,921 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 13:57:23,921 INFO sqlalchemy.engine.base.Engine Thread-137 : (101,)
2020-05-20 13:57:23,922 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 13:57:23,923 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 13:57:23,924 INFO sqlalchemy.engine.base.Engine Thread-137 : ROLLBACK
2020-05-20 13:57:45,977 INFO sqlalchemy.engine.base.Engine Thread-138 : BEGIN (implicit)
2020-05-20 13:57:45,979 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:57:45,979 INFO sqlalchemy.engine.base.Engine Thread-138 : ('philip', 1, 1)
2020-05-20 13:57:45,980 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:45,980 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:45,989 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 13:57:45,989 INFO sqlalchemy.engine.base.Engine Thread-138 : (102,)
2020-05-20 13:57:45,990 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 13:57:45,991 INFO sqlalchemy.engine.base.Engine Thread-138 : ROLLBACK
2020-05-20 13:57:48,625 INFO sqlalchemy.engine.base.Engine Thread-139 : BEGIN (implicit)
2020-05-20 13:57:48,626 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 13:57:48,626 INFO sqlalchemy.engine.base.Engine Thread-139 : ('philip', 1, 1)
2020-05-20 13:57:48,627 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 13:57:48,627 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 13:57:48,636 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 13:57:48,637 INFO sqlalchemy.engine.base.Engine Thread-139 : (103,)
2020-05-20 13:57:48,637 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 13:57:48,638 INFO sqlalchemy.engine.base.Engine Thread-139 : ROLLBACK
2020-05-20 14:48:39,828 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-05-20 14:48:39,829 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:48:39,829 INFO sqlalchemy.engine.base.Engine Thread-143 : ('philip', 1, 1)
2020-05-20 14:48:39,831 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:48:39,831 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:48:39,845 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 14:48:39,845 INFO sqlalchemy.engine.base.Engine Thread-143 : (108,)
2020-05-20 14:48:39,846 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 14:48:39,846 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 14:48:39,848 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-05-20 14:48:43,406 INFO sqlalchemy.engine.base.Engine Thread-144 : BEGIN (implicit)
2020-05-20 14:48:43,407 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:48:43,407 INFO sqlalchemy.engine.base.Engine Thread-144 : ('philip', 1, 1)
2020-05-20 14:48:43,408 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:48:43,408 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:48:43,417 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 14:48:43,418 INFO sqlalchemy.engine.base.Engine Thread-144 : (101,)
2020-05-20 14:48:43,418 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 14:48:43,419 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 14:48:43,419 INFO sqlalchemy.engine.base.Engine Thread-144 : ROLLBACK
2020-05-20 14:48:46,704 INFO sqlalchemy.engine.base.Engine Thread-145 : BEGIN (implicit)
2020-05-20 14:48:46,705 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:48:46,705 INFO sqlalchemy.engine.base.Engine Thread-145 : ('philip', 1, 1)
2020-05-20 14:48:46,706 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:48:46,706 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:48:46,716 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 14:48:46,716 INFO sqlalchemy.engine.base.Engine Thread-145 : (102,)
2020-05-20 14:48:46,717 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 14:48:46,718 INFO sqlalchemy.engine.base.Engine Thread-145 : ROLLBACK
2020-05-20 14:49:05,823 INFO sqlalchemy.engine.base.Engine Thread-146 : BEGIN (implicit)
2020-05-20 14:49:05,825 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 14:49:05,825 INFO sqlalchemy.engine.base.Engine Thread-146 : ()
2020-05-20 14:49:05,826 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 14:49:05,827 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 14:49:05,827 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 14:49:05,828 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 14:49:05,828 INFO sqlalchemy.engine.base.Engine Thread-146 : (100,)
2020-05-20 14:49:05,829 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:49:05,829 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 14:49:05,829 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 14:49:05,829 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 14:49:05,830 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 14:49:05,830 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 14:49:05,832 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:05,832 INFO sqlalchemy.engine.base.Engine Thread-146 : (1, 1)
2020-05-20 14:49:05,832 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:05,832 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:05,847 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:49:05,847 INFO sqlalchemy.engine.base.Engine Thread-146 : ('philip', 1, 1)
2020-05-20 14:49:05,848 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:05,848 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:05,851 INFO sqlalchemy.engine.base.Engine Thread-146 : ROLLBACK
2020-05-20 14:49:06,179 INFO sqlalchemy.engine.base.Engine Thread-155 : BEGIN (implicit)
2020-05-20 14:49:06,180 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:06,180 INFO sqlalchemy.engine.base.Engine Thread-155 : (1, 1)
2020-05-20 14:49:06,183 INFO sqlalchemy.engine.base.Engine Thread-156 : BEGIN (implicit)
2020-05-20 14:49:06,184 INFO sqlalchemy.engine.base.Engine Thread-156 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:06,184 INFO sqlalchemy.engine.base.Engine Thread-156 : (1, 1)
2020-05-20 14:49:06,185 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:06,186 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:06,187 INFO sqlalchemy.engine.base.Engine Thread-155 : ROLLBACK
2020-05-20 14:49:06,190 INFO sqlalchemy.engine.base.Engine Thread-158 : BEGIN (implicit)
2020-05-20 14:49:06,190 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:06,191 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:06,193 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:06,193 INFO sqlalchemy.engine.base.Engine Thread-158 : (1, 1)
2020-05-20 14:49:06,194 INFO sqlalchemy.engine.base.Engine Thread-157 : BEGIN (implicit)
2020-05-20 14:49:06,195 INFO sqlalchemy.engine.base.Engine Thread-156 : ROLLBACK
2020-05-20 14:49:06,196 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:06,197 INFO sqlalchemy.engine.base.Engine Thread-157 : (1, 1)
2020-05-20 14:49:06,197 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:06,197 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:06,199 INFO sqlalchemy.engine.base.Engine Thread-158 : ROLLBACK
2020-05-20 14:49:06,199 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:06,200 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:06,201 INFO sqlalchemy.engine.base.Engine Thread-157 : ROLLBACK
2020-05-20 14:49:06,214 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-05-20 14:49:06,215 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:06,215 INFO sqlalchemy.engine.base.Engine Thread-159 : (1, 1)
2020-05-20 14:49:06,216 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:06,216 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:06,217 INFO sqlalchemy.engine.base.Engine Thread-159 : ROLLBACK
2020-05-20 14:49:06,236 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-05-20 14:49:06,237 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 14:49:06,237 INFO sqlalchemy.engine.base.Engine Thread-160 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 14:49:06,238 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:06,239 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 14:49:06,239 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 14:49:06,242 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 14:49:06,242 INFO sqlalchemy.engine.base.Engine Thread-160 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 14:49:06,243 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:06,248 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 14:49:06,248 INFO sqlalchemy.engine.base.Engine Thread-160 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 14:49:06,249 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:06,253 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 14:49:06,253 INFO sqlalchemy.engine.base.Engine Thread-160 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 14:49:06,254 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:06,254 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 14:49:06,255 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-05-20 14:49:06,277 INFO sqlalchemy.engine.base.Engine Thread-161 : BEGIN (implicit)
2020-05-20 14:49:06,278 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 14:49:06,278 INFO sqlalchemy.engine.base.Engine Thread-161 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 14:49:06,279 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:06,280 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 14:49:06,280 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 14:49:06,283 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 14:49:06,283 INFO sqlalchemy.engine.base.Engine Thread-161 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 14:49:06,283 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:06,288 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 14:49:06,288 INFO sqlalchemy.engine.base.Engine Thread-161 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 14:49:06,289 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:06,293 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 14:49:06,293 INFO sqlalchemy.engine.base.Engine Thread-161 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 14:49:06,294 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:06,294 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 14:49:06,294 INFO sqlalchemy.engine.base.Engine Thread-161 : ROLLBACK
2020-05-20 14:49:08,919 INFO sqlalchemy.engine.base.Engine Thread-163 : BEGIN (implicit)
2020-05-20 14:49:08,921 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:49:08,921 INFO sqlalchemy.engine.base.Engine Thread-163 : ('philip', 1, 1)
2020-05-20 14:49:08,921 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:08,922 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:08,930 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 14:49:08,930 INFO sqlalchemy.engine.base.Engine Thread-163 : (108,)
2020-05-20 14:49:08,931 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 14:49:08,931 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 14:49:08,932 INFO sqlalchemy.engine.base.Engine Thread-163 : ROLLBACK
2020-05-20 14:49:13,045 INFO sqlalchemy.engine.base.Engine Thread-164 : BEGIN (implicit)
2020-05-20 14:49:13,046 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:49:13,046 INFO sqlalchemy.engine.base.Engine Thread-164 : ('philip', 1, 1)
2020-05-20 14:49:13,047 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:13,047 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:13,059 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 14:49:13,059 INFO sqlalchemy.engine.base.Engine Thread-164 : (103,)
2020-05-20 14:49:13,059 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 14:49:13,060 INFO sqlalchemy.engine.base.Engine Thread-164 : ROLLBACK
2020-05-20 14:49:26,932 INFO sqlalchemy.engine.base.Engine Thread-165 : BEGIN (implicit)
2020-05-20 14:49:26,934 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 14:49:26,934 INFO sqlalchemy.engine.base.Engine Thread-165 : ()
2020-05-20 14:49:26,935 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 14:49:26,936 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 14:49:26,936 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 14:49:26,938 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 14:49:26,938 INFO sqlalchemy.engine.base.Engine Thread-165 : (100,)
2020-05-20 14:49:26,939 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:49:26,939 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 14:49:26,939 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 14:49:26,939 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 14:49:26,939 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 14:49:26,939 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 14:49:26,941 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:26,942 INFO sqlalchemy.engine.base.Engine Thread-165 : (1, 1)
2020-05-20 14:49:26,942 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:26,943 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:26,957 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:49:26,957 INFO sqlalchemy.engine.base.Engine Thread-165 : ('philip', 1, 1)
2020-05-20 14:49:26,958 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:26,958 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:26,960 INFO sqlalchemy.engine.base.Engine Thread-165 : ROLLBACK
2020-05-20 14:49:27,260 INFO sqlalchemy.engine.base.Engine Thread-174 : BEGIN (implicit)
2020-05-20 14:49:27,262 INFO sqlalchemy.engine.base.Engine Thread-175 : BEGIN (implicit)
2020-05-20 14:49:27,264 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:27,265 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:27,266 INFO sqlalchemy.engine.base.Engine Thread-174 : (1, 1)
2020-05-20 14:49:27,267 INFO sqlalchemy.engine.base.Engine Thread-175 : (1, 1)
2020-05-20 14:49:27,269 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-05-20 14:49:27,271 INFO sqlalchemy.engine.base.Engine Thread-176 : BEGIN (implicit)
2020-05-20 14:49:27,272 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:27,272 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:27,273 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:27,274 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:27,275 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:27,275 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:27,275 INFO sqlalchemy.engine.base.Engine Thread-177 : (1, 1)
2020-05-20 14:49:27,275 INFO sqlalchemy.engine.base.Engine Thread-176 : (1, 1)
2020-05-20 14:49:27,277 INFO sqlalchemy.engine.base.Engine Thread-175 : ROLLBACK
2020-05-20 14:49:27,278 INFO sqlalchemy.engine.base.Engine Thread-174 : ROLLBACK
2020-05-20 14:49:27,279 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:27,279 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:27,281 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:27,282 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:27,283 INFO sqlalchemy.engine.base.Engine Thread-177 : ROLLBACK
2020-05-20 14:49:27,284 INFO sqlalchemy.engine.base.Engine Thread-176 : ROLLBACK
2020-05-20 14:49:27,302 INFO sqlalchemy.engine.base.Engine Thread-178 : BEGIN (implicit)
2020-05-20 14:49:27,303 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:27,303 INFO sqlalchemy.engine.base.Engine Thread-178 : (1, 1)
2020-05-20 14:49:27,304 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:27,304 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:27,305 INFO sqlalchemy.engine.base.Engine Thread-178 : ROLLBACK
2020-05-20 14:49:27,325 INFO sqlalchemy.engine.base.Engine Thread-179 : BEGIN (implicit)
2020-05-20 14:49:27,326 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 14:49:27,326 INFO sqlalchemy.engine.base.Engine Thread-179 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 14:49:27,327 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:27,327 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 14:49:27,327 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 14:49:27,331 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 14:49:27,331 INFO sqlalchemy.engine.base.Engine Thread-179 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 14:49:27,332 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:27,337 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 14:49:27,337 INFO sqlalchemy.engine.base.Engine Thread-179 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 14:49:27,338 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:27,342 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 14:49:27,342 INFO sqlalchemy.engine.base.Engine Thread-179 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 14:49:27,343 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:27,343 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 14:49:27,344 INFO sqlalchemy.engine.base.Engine Thread-179 : ROLLBACK
2020-05-20 14:49:27,370 INFO sqlalchemy.engine.base.Engine Thread-180 : BEGIN (implicit)
2020-05-20 14:49:27,374 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 14:49:27,374 INFO sqlalchemy.engine.base.Engine Thread-180 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 14:49:27,375 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:27,376 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 14:49:27,376 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 14:49:27,379 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 14:49:27,379 INFO sqlalchemy.engine.base.Engine Thread-180 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 14:49:27,380 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:27,385 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 14:49:27,385 INFO sqlalchemy.engine.base.Engine Thread-180 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 14:49:27,386 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:27,390 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 14:49:27,390 INFO sqlalchemy.engine.base.Engine Thread-180 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 14:49:27,391 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:49:27,392 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 14:49:27,392 INFO sqlalchemy.engine.base.Engine Thread-180 : ROLLBACK
2020-05-20 14:49:30,037 INFO sqlalchemy.engine.base.Engine Thread-182 : BEGIN (implicit)
2020-05-20 14:49:30,038 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:49:30,038 INFO sqlalchemy.engine.base.Engine Thread-182 : ('philip', 1, 1)
2020-05-20 14:49:30,039 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:30,039 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:30,047 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 14:49:30,047 INFO sqlalchemy.engine.base.Engine Thread-182 : (108,)
2020-05-20 14:49:30,048 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 14:49:30,048 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 14:49:30,049 INFO sqlalchemy.engine.base.Engine Thread-182 : ROLLBACK
2020-05-20 14:49:33,383 INFO sqlalchemy.engine.base.Engine Thread-183 : BEGIN (implicit)
2020-05-20 14:49:33,384 INFO sqlalchemy.engine.base.Engine Thread-183 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:49:33,384 INFO sqlalchemy.engine.base.Engine Thread-183 : ('philip', 1, 1)
2020-05-20 14:49:33,385 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:33,385 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:33,395 INFO sqlalchemy.engine.base.Engine Thread-183 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 14:49:33,395 INFO sqlalchemy.engine.base.Engine Thread-183 : (104,)
2020-05-20 14:49:33,396 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 14:49:33,397 INFO sqlalchemy.engine.base.Engine Thread-183 : ROLLBACK
2020-05-20 14:49:36,595 INFO sqlalchemy.engine.base.Engine Thread-184 : BEGIN (implicit)
2020-05-20 14:49:36,597 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:49:36,597 INFO sqlalchemy.engine.base.Engine Thread-184 : ('philip', 1, 1)
2020-05-20 14:49:36,598 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:36,598 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:36,607 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 14:49:36,607 INFO sqlalchemy.engine.base.Engine Thread-184 : (108,)
2020-05-20 14:49:36,608 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 14:49:36,608 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 14:49:36,609 INFO sqlalchemy.engine.base.Engine Thread-184 : ROLLBACK
2020-05-20 14:49:55,172 INFO sqlalchemy.engine.base.Engine Thread-185 : BEGIN (implicit)
2020-05-20 14:49:55,173 INFO sqlalchemy.engine.base.Engine Thread-185 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:49:55,173 INFO sqlalchemy.engine.base.Engine Thread-185 : ('philip', 1, 1)
2020-05-20 14:49:55,174 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:55,174 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:55,185 INFO sqlalchemy.engine.base.Engine Thread-185 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 14:49:55,185 INFO sqlalchemy.engine.base.Engine Thread-185 : (101,)
2020-05-20 14:49:55,186 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 14:49:55,186 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 14:49:55,187 INFO sqlalchemy.engine.base.Engine Thread-185 : ROLLBACK
2020-05-20 14:49:58,919 INFO sqlalchemy.engine.base.Engine Thread-186 : BEGIN (implicit)
2020-05-20 14:49:58,922 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-05-20 14:49:58,922 INFO sqlalchemy.engine.base.Engine Thread-186 : ('0', 1)
2020-05-20 14:49:58,923 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-05-20 14:49:58,930 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 14:49:58,930 INFO sqlalchemy.engine.base.Engine Thread-186 : ()
2020-05-20 14:49:58,931 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 14:49:58,932 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 14:49:58,932 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 14:49:58,933 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 14:49:58,934 INFO sqlalchemy.engine.base.Engine Thread-186 : (97,)
2020-05-20 14:49:58,934 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:49:58,934 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 14:49:58,934 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 14:49:58,938 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-05-20 14:49:58,938 INFO sqlalchemy.engine.base.Engine Thread-186 : (2, 1)
2020-05-20 14:49:58,939 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 14:49:58,939 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 14:49:58,943 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:58,943 INFO sqlalchemy.engine.base.Engine Thread-186 : (1, 1)
2020-05-20 14:49:58,944 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:58,944 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:59,002 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:49:59,003 INFO sqlalchemy.engine.base.Engine Thread-186 : ('philip', 1, 1)
2020-05-20 14:49:59,003 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:59,004 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:59,008 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:49:59,008 INFO sqlalchemy.engine.base.Engine Thread-186 : ('philip', 1, 1)
2020-05-20 14:49:59,009 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:59,009 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:59,010 INFO sqlalchemy.engine.base.Engine Thread-186 : ROLLBACK
2020-05-20 14:49:59,286 INFO sqlalchemy.engine.base.Engine Thread-195 : BEGIN (implicit)
2020-05-20 14:49:59,287 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:59,287 INFO sqlalchemy.engine.base.Engine Thread-195 : (1, 1)
2020-05-20 14:49:59,290 INFO sqlalchemy.engine.base.Engine Thread-196 : BEGIN (implicit)
2020-05-20 14:49:59,291 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:59,293 INFO sqlalchemy.engine.base.Engine Thread-196 : (1, 1)
2020-05-20 14:49:59,294 INFO sqlalchemy.engine.base.Engine Thread-197 : BEGIN (implicit)
2020-05-20 14:49:59,295 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:59,300 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:59,298 INFO sqlalchemy.engine.base.Engine Thread-198 : BEGIN (implicit)
2020-05-20 14:49:59,302 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:59,301 INFO sqlalchemy.engine.base.Engine Thread-195 : ROLLBACK
2020-05-20 14:49:59,295 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:59,302 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:59,302 INFO sqlalchemy.engine.base.Engine Thread-198 : (1, 1)
2020-05-20 14:49:59,299 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:59,303 INFO sqlalchemy.engine.base.Engine Thread-196 : ROLLBACK
2020-05-20 14:49:59,304 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:59,305 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:59,304 INFO sqlalchemy.engine.base.Engine Thread-197 : (1, 1)
2020-05-20 14:49:59,306 INFO sqlalchemy.engine.base.Engine Thread-198 : ROLLBACK
2020-05-20 14:49:59,307 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:59,307 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:59,308 INFO sqlalchemy.engine.base.Engine Thread-197 : ROLLBACK
2020-05-20 14:49:59,330 INFO sqlalchemy.engine.base.Engine Thread-199 : BEGIN (implicit)
2020-05-20 14:49:59,332 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:49:59,332 INFO sqlalchemy.engine.base.Engine Thread-199 : (1, 1)
2020-05-20 14:49:59,332 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:49:59,333 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:49:59,333 INFO sqlalchemy.engine.base.Engine Thread-199 : ROLLBACK
2020-05-20 14:50:04,825 INFO sqlalchemy.engine.base.Engine Thread-200 : BEGIN (implicit)
2020-05-20 14:50:04,828 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-20 14:50:04,828 INFO sqlalchemy.engine.base.Engine Thread-200 : ()
2020-05-20 14:50:04,830 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-20 14:50:04,831 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-20 14:50:04,831 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-20 14:50:04,833 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 14:50:04,833 INFO sqlalchemy.engine.base.Engine Thread-200 : (100,)
2020-05-20 14:50:04,833 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:50:04,834 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 14:50:04,834 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 14:50:04,834 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 14:50:04,834 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 14:50:04,834 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 14:50:04,836 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:04,836 INFO sqlalchemy.engine.base.Engine Thread-200 : (1, 1)
2020-05-20 14:50:04,836 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:04,837 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:04,841 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:50:04,841 INFO sqlalchemy.engine.base.Engine Thread-200 : ('philip', 1, 1)
2020-05-20 14:50:04,841 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:04,842 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:04,843 INFO sqlalchemy.engine.base.Engine Thread-200 : ROLLBACK
2020-05-20 14:50:05,115 INFO sqlalchemy.engine.base.Engine Thread-209 : BEGIN (implicit)
2020-05-20 14:50:05,116 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:05,118 INFO sqlalchemy.engine.base.Engine Thread-211 : BEGIN (implicit)
2020-05-20 14:50:05,121 INFO sqlalchemy.engine.base.Engine Thread-210 : BEGIN (implicit)
2020-05-20 14:50:05,121 INFO sqlalchemy.engine.base.Engine Thread-209 : (1, 1)
2020-05-20 14:50:05,124 INFO sqlalchemy.engine.base.Engine Thread-212 : BEGIN (implicit)
2020-05-20 14:50:05,125 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:05,128 INFO sqlalchemy.engine.base.Engine Thread-211 : (1, 1)
2020-05-20 14:50:05,126 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:05,128 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:05,129 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:05,128 INFO sqlalchemy.engine.base.Engine Thread-210 : (1, 1)
2020-05-20 14:50:05,131 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:05,127 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:05,131 INFO sqlalchemy.engine.base.Engine Thread-212 : (1, 1)
2020-05-20 14:50:05,131 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:05,132 INFO sqlalchemy.engine.base.Engine Thread-210 : ROLLBACK
2020-05-20 14:50:05,130 INFO sqlalchemy.engine.base.Engine Thread-209 : ROLLBACK
2020-05-20 14:50:05,129 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:05,133 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:05,134 INFO sqlalchemy.engine.base.Engine Thread-211 : ROLLBACK
2020-05-20 14:50:05,135 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:05,136 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:05,137 INFO sqlalchemy.engine.base.Engine Thread-212 : ROLLBACK
2020-05-20 14:50:05,149 INFO sqlalchemy.engine.base.Engine Thread-213 : BEGIN (implicit)
2020-05-20 14:50:05,150 INFO sqlalchemy.engine.base.Engine Thread-213 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:05,151 INFO sqlalchemy.engine.base.Engine Thread-213 : (1, 1)
2020-05-20 14:50:05,151 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:05,151 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:05,153 INFO sqlalchemy.engine.base.Engine Thread-213 : ROLLBACK
2020-05-20 14:50:05,179 INFO sqlalchemy.engine.base.Engine Thread-214 : BEGIN (implicit)
2020-05-20 14:50:05,180 INFO sqlalchemy.engine.base.Engine Thread-214 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 14:50:05,180 INFO sqlalchemy.engine.base.Engine Thread-214 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 14:50:05,181 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:50:05,181 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 14:50:05,181 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 14:50:05,185 INFO sqlalchemy.engine.base.Engine Thread-214 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 14:50:05,185 INFO sqlalchemy.engine.base.Engine Thread-214 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 14:50:05,185 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:50:05,189 INFO sqlalchemy.engine.base.Engine Thread-214 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 14:50:05,189 INFO sqlalchemy.engine.base.Engine Thread-214 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 14:50:05,190 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:50:05,194 INFO sqlalchemy.engine.base.Engine Thread-214 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 14:50:05,194 INFO sqlalchemy.engine.base.Engine Thread-214 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 14:50:05,195 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:50:05,195 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 14:50:05,196 INFO sqlalchemy.engine.base.Engine Thread-214 : ROLLBACK
2020-05-20 14:50:05,228 INFO sqlalchemy.engine.base.Engine Thread-215 : BEGIN (implicit)
2020-05-20 14:50:05,229 INFO sqlalchemy.engine.base.Engine Thread-215 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 14:50:05,229 INFO sqlalchemy.engine.base.Engine Thread-215 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-20 14:50:05,230 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:50:05,231 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 14:50:05,231 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-20 14:50:05,234 INFO sqlalchemy.engine.base.Engine Thread-215 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-20 14:50:05,234 INFO sqlalchemy.engine.base.Engine Thread-215 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-20 14:50:05,235 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:50:05,242 INFO sqlalchemy.engine.base.Engine Thread-215 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-20 14:50:05,242 INFO sqlalchemy.engine.base.Engine Thread-215 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 14:50:05,243 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:50:05,247 INFO sqlalchemy.engine.base.Engine Thread-215 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-20 14:50:05,247 INFO sqlalchemy.engine.base.Engine Thread-215 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-20 14:50:05,248 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-20 14:50:05,248 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-20 14:50:05,249 INFO sqlalchemy.engine.base.Engine Thread-215 : ROLLBACK
2020-05-20 14:50:21,323 INFO sqlalchemy.engine.base.Engine Thread-216 : BEGIN (implicit)
2020-05-20 14:50:21,325 INFO sqlalchemy.engine.base.Engine Thread-216 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:50:21,325 INFO sqlalchemy.engine.base.Engine Thread-216 : ('philip', 1, 1)
2020-05-20 14:50:21,326 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:21,326 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:21,337 INFO sqlalchemy.engine.base.Engine Thread-216 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 14:50:21,337 INFO sqlalchemy.engine.base.Engine Thread-216 : (101,)
2020-05-20 14:50:21,338 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 14:50:21,338 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-20 14:50:21,339 INFO sqlalchemy.engine.base.Engine Thread-216 : ROLLBACK
2020-05-20 14:50:25,321 INFO sqlalchemy.engine.base.Engine Thread-217 : BEGIN (implicit)
2020-05-20 14:50:25,322 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:50:25,322 INFO sqlalchemy.engine.base.Engine Thread-217 : ('philip', 1, 1)
2020-05-20 14:50:25,323 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:25,323 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:25,332 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 14:50:25,332 INFO sqlalchemy.engine.base.Engine Thread-217 : (102,)
2020-05-20 14:50:25,333 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 14:50:25,334 INFO sqlalchemy.engine.base.Engine Thread-217 : ROLLBACK
2020-05-20 14:50:29,591 INFO sqlalchemy.engine.base.Engine Thread-218 : BEGIN (implicit)
2020-05-20 14:50:29,593 INFO sqlalchemy.engine.base.Engine Thread-218 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:50:29,593 INFO sqlalchemy.engine.base.Engine Thread-218 : ('philip', 1, 1)
2020-05-20 14:50:29,593 DEBUG sqlalchemy.engine.base.Engine Thread-218 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:29,594 DEBUG sqlalchemy.engine.base.Engine Thread-218 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:29,603 INFO sqlalchemy.engine.base.Engine Thread-218 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 14:50:29,604 INFO sqlalchemy.engine.base.Engine Thread-218 : (103,)
2020-05-20 14:50:29,604 DEBUG sqlalchemy.engine.base.Engine Thread-218 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 14:50:29,605 INFO sqlalchemy.engine.base.Engine Thread-218 : ROLLBACK
2020-05-20 14:50:33,415 INFO sqlalchemy.engine.base.Engine Thread-219 : BEGIN (implicit)
2020-05-20 14:50:33,416 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:50:33,416 INFO sqlalchemy.engine.base.Engine Thread-219 : ('philip', 1, 1)
2020-05-20 14:50:33,417 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:33,417 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:33,426 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-20 14:50:33,426 INFO sqlalchemy.engine.base.Engine Thread-219 : (108,)
2020-05-20 14:50:33,427 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-20 14:50:33,427 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-20 14:50:33,428 INFO sqlalchemy.engine.base.Engine Thread-219 : ROLLBACK
2020-05-20 14:50:53,865 INFO sqlalchemy.engine.base.Engine Thread-220 : BEGIN (implicit)
2020-05-20 14:50:53,866 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:53,866 INFO sqlalchemy.engine.base.Engine Thread-220 : (1, 1)
2020-05-20 14:50:53,867 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:53,867 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:53,870 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:50:53,870 INFO sqlalchemy.engine.base.Engine Thread-220 : ('philip', 1, 1)
2020-05-20 14:50:53,870 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:53,871 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:53,873 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 14:50:53,873 INFO sqlalchemy.engine.base.Engine Thread-220 : (116,)
2020-05-20 14:50:53,873 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:50:53,874 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 14:50:53,874 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 14:50:53,874 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 14:50:53,905 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:50:53,905 INFO sqlalchemy.engine.base.Engine Thread-220 : ('philip', 1, 1)
2020-05-20 14:50:53,905 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:53,905 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:53,907 INFO sqlalchemy.engine.base.Engine Thread-220 : ROLLBACK
2020-05-20 14:50:54,199 INFO sqlalchemy.engine.base.Engine Thread-230 : BEGIN (implicit)
2020-05-20 14:50:54,201 INFO sqlalchemy.engine.base.Engine Thread-230 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:54,201 INFO sqlalchemy.engine.base.Engine Thread-230 : (1, 1)
2020-05-20 14:50:54,203 INFO sqlalchemy.engine.base.Engine Thread-229 : BEGIN (implicit)
2020-05-20 14:50:54,204 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:54,204 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:54,205 INFO sqlalchemy.engine.base.Engine Thread-229 : (1, 1)
2020-05-20 14:50:54,207 INFO sqlalchemy.engine.base.Engine Thread-231 : BEGIN (implicit)
2020-05-20 14:50:54,210 INFO sqlalchemy.engine.base.Engine Thread-232 : BEGIN (implicit)
2020-05-20 14:50:54,213 INFO sqlalchemy.engine.base.Engine Thread-232 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:54,212 INFO sqlalchemy.engine.base.Engine Thread-231 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:54,213 INFO sqlalchemy.engine.base.Engine Thread-231 : (1, 1)
2020-05-20 14:50:54,213 INFO sqlalchemy.engine.base.Engine Thread-232 : (1, 1)
2020-05-20 14:50:54,211 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:54,214 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:54,214 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:54,216 INFO sqlalchemy.engine.base.Engine Thread-230 : ROLLBACK
2020-05-20 14:50:54,216 INFO sqlalchemy.engine.base.Engine Thread-232 : ROLLBACK
2020-05-20 14:50:54,218 DEBUG sqlalchemy.engine.base.Engine Thread-231 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:54,218 DEBUG sqlalchemy.engine.base.Engine Thread-231 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:54,219 INFO sqlalchemy.engine.base.Engine Thread-231 : ROLLBACK
2020-05-20 14:50:54,220 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:54,221 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:54,222 INFO sqlalchemy.engine.base.Engine Thread-229 : ROLLBACK
2020-05-20 14:50:54,227 INFO sqlalchemy.engine.base.Engine Thread-233 : BEGIN (implicit)
2020-05-20 14:50:54,228 INFO sqlalchemy.engine.base.Engine Thread-233 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:54,229 INFO sqlalchemy.engine.base.Engine Thread-233 : (1, 1)
2020-05-20 14:50:54,229 DEBUG sqlalchemy.engine.base.Engine Thread-233 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:54,229 DEBUG sqlalchemy.engine.base.Engine Thread-233 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:54,230 INFO sqlalchemy.engine.base.Engine Thread-233 : ROLLBACK
2020-05-20 14:50:57,791 INFO sqlalchemy.engine.base.Engine Thread-234 : BEGIN (implicit)
2020-05-20 14:50:57,792 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:57,792 INFO sqlalchemy.engine.base.Engine Thread-234 : (1, 1)
2020-05-20 14:50:57,793 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:57,793 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:57,795 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:50:57,795 INFO sqlalchemy.engine.base.Engine Thread-234 : ('philip', 1, 1)
2020-05-20 14:50:57,796 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:57,796 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:57,798 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 14:50:57,798 INFO sqlalchemy.engine.base.Engine Thread-234 : (116,)
2020-05-20 14:50:57,799 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:50:57,800 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 14:50:57,800 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 14:50:57,800 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 14:50:57,801 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-05-20 14:50:57,801 INFO sqlalchemy.engine.base.Engine Thread-234 : ('OPERATIONS_EMAILS', 1)
2020-05-20 14:50:57,802 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:50:57,802 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 0)
2020-05-20 14:50:57,803 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-05-20 14:50:57,803 INFO sqlalchemy.engine.base.Engine Thread-234 : ('117', 1)
2020-05-20 14:50:57,804 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:50:57,804 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 14:50:57,808 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:50:57,808 INFO sqlalchemy.engine.base.Engine Thread-234 : ('philip', 1, 1)
2020-05-20 14:50:57,809 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:57,809 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:57,811 INFO sqlalchemy.engine.base.Engine Thread-234 : ROLLBACK
2020-05-20 14:50:58,090 INFO sqlalchemy.engine.base.Engine Thread-243 : BEGIN (implicit)
2020-05-20 14:50:58,093 INFO sqlalchemy.engine.base.Engine Thread-244 : BEGIN (implicit)
2020-05-20 14:50:58,095 INFO sqlalchemy.engine.base.Engine Thread-245 : BEGIN (implicit)
2020-05-20 14:50:58,096 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:58,099 INFO sqlalchemy.engine.base.Engine Thread-246 : BEGIN (implicit)
2020-05-20 14:50:58,100 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:58,101 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:58,102 INFO sqlalchemy.engine.base.Engine Thread-243 : (1, 1)
2020-05-20 14:50:58,102 INFO sqlalchemy.engine.base.Engine Thread-246 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:58,103 INFO sqlalchemy.engine.base.Engine Thread-246 : (1, 1)
2020-05-20 14:50:58,103 INFO sqlalchemy.engine.base.Engine Thread-244 : (1, 1)
2020-05-20 14:50:58,103 INFO sqlalchemy.engine.base.Engine Thread-245 : (1, 1)
2020-05-20 14:50:58,104 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:58,104 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:58,105 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:58,105 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:58,107 INFO sqlalchemy.engine.base.Engine Thread-244 : ROLLBACK
2020-05-20 14:50:58,105 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:58,106 INFO sqlalchemy.engine.base.Engine Thread-245 : ROLLBACK
2020-05-20 14:50:58,108 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:58,104 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:58,110 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:58,111 INFO sqlalchemy.engine.base.Engine Thread-246 : ROLLBACK
2020-05-20 14:50:58,110 INFO sqlalchemy.engine.base.Engine Thread-243 : ROLLBACK
2020-05-20 14:50:58,122 INFO sqlalchemy.engine.base.Engine Thread-247 : BEGIN (implicit)
2020-05-20 14:50:58,123 INFO sqlalchemy.engine.base.Engine Thread-247 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:50:58,123 INFO sqlalchemy.engine.base.Engine Thread-247 : (1, 1)
2020-05-20 14:50:58,123 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:50:58,124 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:50:58,125 INFO sqlalchemy.engine.base.Engine Thread-247 : ROLLBACK
2020-05-20 14:52:14,167 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-20 14:52:14,167 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 14:52:14,168 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-05-20 14:52:14,169 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-05-20 14:52:14,169 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-20 14:52:14,169 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 14:52:14,170 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-05-20 14:52:14,170 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-05-20 14:52:14,170 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-05-20 14:52:14,170 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 14:52:14,171 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-05-20 14:52:14,171 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-05-20 14:52:14,171 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-20 14:52:14,171 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 14:52:14,172 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-20 14:52:14,172 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-20 14:52:14,172 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-20 14:52:14,173 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 14:52:14,173 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-20 14:52:14,173 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 14:52:14,174 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-20 14:52:14,174 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 14:52:14,174 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-05-20 14:52:14,177 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:14,177 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-05-20 14:52:14,177 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:14,178 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:14,180 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:52:14,180 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-05-20 14:52:14,181 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:14,181 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:14,186 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 14:52:14,186 INFO sqlalchemy.engine.base.Engine Thread-3 : (116,)
2020-05-20 14:52:14,187 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:52:14,187 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 14:52:14,187 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 14:52:14,187 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 14:52:14,189 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-05-20 14:52:14,189 INFO sqlalchemy.engine.base.Engine Thread-3 : ('OPERATIONS_EMAILS', 1)
2020-05-20 14:52:14,190 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:52:14,190 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 0)
2020-05-20 14:52:14,191 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-05-20 14:52:14,191 INFO sqlalchemy.engine.base.Engine Thread-3 : ('117', 1)
2020-05-20 14:52:14,192 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:52:14,192 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 14:52:14,262 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:52:14,262 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-05-20 14:52:14,262 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:14,263 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:14,264 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-05-20 14:52:14,552 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-05-20 14:52:14,556 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:14,556 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-05-20 14:52:14,560 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-05-20 14:52:14,560 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-05-20 14:52:14,560 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:14,565 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:14,565 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:14,566 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-05-20 14:52:14,564 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:14,577 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-05-20 14:52:14,577 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-05-20 14:52:14,577 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:14,578 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:14,578 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-05-20 14:52:14,579 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-05-20 14:52:14,580 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:14,580 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-05-20 14:52:14,581 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:14,581 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:14,582 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-05-20 14:52:14,584 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:14,584 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:14,585 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-05-20 14:52:14,588 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-05-20 14:52:14,589 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:14,589 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-05-20 14:52:14,590 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:14,590 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:14,591 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-05-20 14:52:17,504 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-05-20 14:52:17,505 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:17,505 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-05-20 14:52:17,506 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:17,506 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:17,508 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:52:17,508 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-05-20 14:52:17,509 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:17,509 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:17,511 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 14:52:17,511 INFO sqlalchemy.engine.base.Engine Thread-17 : (116,)
2020-05-20 14:52:17,512 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:52:17,512 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 14:52:17,512 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 14:52:17,512 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 14:52:17,513 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-05-20 14:52:17,513 INFO sqlalchemy.engine.base.Engine Thread-17 : ('OPERATIONS_EMAILS', 1)
2020-05-20 14:52:17,514 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:52:17,515 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 0)
2020-05-20 14:52:17,516 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-05-20 14:52:17,516 INFO sqlalchemy.engine.base.Engine Thread-17 : ('118', 1)
2020-05-20 14:52:17,517 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:52:17,521 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:52:17,521 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-05-20 14:52:17,521 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:17,522 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:17,523 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-05-20 14:52:17,809 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-05-20 14:52:17,812 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-05-20 14:52:17,816 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:17,815 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-05-20 14:52:17,817 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:17,816 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-05-20 14:52:17,813 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:17,817 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-05-20 14:52:17,817 INFO sqlalchemy.engine.base.Engine Thread-26 : (1, 1)
2020-05-20 14:52:17,818 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:17,819 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:17,819 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:17,821 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-05-20 14:52:17,823 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-05-20 14:52:17,825 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:17,824 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:17,825 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-05-20 14:52:17,823 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:17,827 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:17,826 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-05-20 14:52:17,827 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:17,828 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:17,829 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-05-20 14:52:17,828 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-05-20 14:52:17,845 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-05-20 14:52:17,846 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:17,846 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-05-20 14:52:17,846 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:17,847 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:17,847 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-05-20 14:52:21,261 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-05-20 14:52:21,262 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:21,262 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-05-20 14:52:21,263 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:21,263 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:21,265 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:52:21,265 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-05-20 14:52:21,266 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:21,266 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:21,268 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 14:52:21,268 INFO sqlalchemy.engine.base.Engine Thread-31 : (116,)
2020-05-20 14:52:21,268 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:52:21,269 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 14:52:21,269 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 14:52:21,269 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 14:52:21,270 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-05-20 14:52:21,270 INFO sqlalchemy.engine.base.Engine Thread-31 : ('OPERATIONS_EMAILS', 1)
2020-05-20 14:52:21,271 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:52:21,271 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 0)
2020-05-20 14:52:21,272 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-05-20 14:52:21,272 INFO sqlalchemy.engine.base.Engine Thread-31 : ('119', 1)
2020-05-20 14:52:21,272 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 14:52:21,276 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 14:52:21,276 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-05-20 14:52:21,277 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:21,278 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:21,279 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-05-20 14:52:21,535 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-05-20 14:52:21,537 INFO sqlalchemy.engine.base.Engine Thread-42 : BEGIN (implicit)
2020-05-20 14:52:21,538 INFO sqlalchemy.engine.base.Engine Thread-40 : BEGIN (implicit)
2020-05-20 14:52:21,541 INFO sqlalchemy.engine.base.Engine Thread-41 : BEGIN (implicit)
2020-05-20 14:52:21,542 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:21,543 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:21,544 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:21,545 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:21,545 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-05-20 14:52:21,545 INFO sqlalchemy.engine.base.Engine Thread-42 : (1, 1)
2020-05-20 14:52:21,545 INFO sqlalchemy.engine.base.Engine Thread-40 : (1, 1)
2020-05-20 14:52:21,546 INFO sqlalchemy.engine.base.Engine Thread-41 : (1, 1)
2020-05-20 14:52:21,546 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:21,548 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:21,547 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:21,549 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:21,548 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:21,549 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-05-20 14:52:21,550 INFO sqlalchemy.engine.base.Engine Thread-40 : ROLLBACK
2020-05-20 14:52:21,547 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:21,550 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:21,551 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:21,552 INFO sqlalchemy.engine.base.Engine Thread-42 : ROLLBACK
2020-05-20 14:52:21,553 INFO sqlalchemy.engine.base.Engine Thread-41 : ROLLBACK
2020-05-20 14:52:21,564 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-05-20 14:52:21,565 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 14:52:21,565 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-05-20 14:52:21,565 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 14:52:21,565 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 14:52:21,566 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-05-20 15:46:44,579 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-05-20 15:46:44,580 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:46:44,581 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-05-20 15:46:44,583 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:46:44,583 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:46:44,585 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:46:44,585 INFO sqlalchemy.engine.base.Engine Thread-45 : ('philip', 1, 1)
2020-05-20 15:46:44,586 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:46:44,586 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:46:44,589 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:46:44,589 INFO sqlalchemy.engine.base.Engine Thread-45 : (0,)
2020-05-20 15:46:44,589 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:46:44,590 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:46:44,590 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 15:46:44,590 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 15:46:44,590 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 15:46:44,590 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 15:46:44,590 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 15:46:44,590 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:46:44,590 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 15:46:44,590 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 15:46:44,590 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 15:46:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 15:46:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 15:46:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 15:46:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 15:46:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 15:46:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 15:46:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 15:46:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 15:46:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 15:46:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 15:46:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 15:46:44,591 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 15:46:44,594 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-05-20 15:46:44,594 INFO sqlalchemy.engine.base.Engine Thread-45 : (0, 1)
2020-05-20 15:46:44,595 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:46:44,595 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:46:44,596 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-20 15:46:44,596 INFO sqlalchemy.engine.base.Engine Thread-45 : (66,)
2020-05-20 15:46:44,597 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:46:44,597 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 15:46:44,597 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 15:46:44,620 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:46:44,621 INFO sqlalchemy.engine.base.Engine Thread-45 : ('philip', 1, 1)
2020-05-20 15:46:44,621 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:46:44,621 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:46:44,625 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-05-20 15:46:50,876 INFO sqlalchemy.engine.base.Engine Thread-54 : BEGIN (implicit)
2020-05-20 15:46:50,879 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-05-20 15:46:50,881 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:46:50,882 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:46:50,884 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-05-20 15:46:50,884 INFO sqlalchemy.engine.base.Engine Thread-54 : (1, 1)
2020-05-20 15:46:50,885 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:46:50,889 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:46:50,886 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:46:50,888 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-05-20 15:46:50,884 INFO sqlalchemy.engine.base.Engine Thread-56 : BEGIN (implicit)
2020-05-20 15:46:50,889 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:46:50,893 INFO sqlalchemy.engine.base.Engine Thread-54 : ROLLBACK
2020-05-20 15:46:50,890 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-05-20 15:46:50,892 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:46:50,891 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:46:50,894 INFO sqlalchemy.engine.base.Engine Thread-56 : (1, 1)
2020-05-20 15:46:50,895 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-05-20 15:46:50,896 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:46:50,897 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:46:50,897 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:46:50,898 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:46:50,898 INFO sqlalchemy.engine.base.Engine Thread-56 : ROLLBACK
2020-05-20 15:46:50,899 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-05-20 15:46:50,915 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-05-20 15:46:50,917 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:46:50,917 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-05-20 15:46:50,917 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:46:50,917 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:46:50,918 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-05-20 15:47:03,384 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-05-20 15:47:03,385 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:03,385 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-05-20 15:47:03,386 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:03,386 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:03,388 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:47:03,388 INFO sqlalchemy.engine.base.Engine Thread-61 : ('philip', 1, 1)
2020-05-20 15:47:03,389 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:03,389 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:03,391 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:47:03,391 INFO sqlalchemy.engine.base.Engine Thread-61 : (0,)
2020-05-20 15:47:03,392 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:03,392 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:47:03,392 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 15:47:03,392 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 15:47:03,392 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 15:47:03,392 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 15:47:03,392 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 15:47:03,392 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:47:03,392 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 15:47:03,393 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 15:47:03,393 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 15:47:03,393 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 15:47:03,393 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 15:47:03,393 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 15:47:03,393 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 15:47:03,393 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 15:47:03,393 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 15:47:03,393 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 15:47:03,393 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 15:47:03,393 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 15:47:03,393 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 15:47:03,394 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 15:47:03,394 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 15:47:03,396 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-20 15:47:03,396 INFO sqlalchemy.engine.base.Engine Thread-61 : ('120',)
2020-05-20 15:47:03,396 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:03,397 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 0)
2020-05-20 15:47:03,400 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:47:03,400 INFO sqlalchemy.engine.base.Engine Thread-61 : ('philip', 1, 1)
2020-05-20 15:47:03,401 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:03,401 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:03,404 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-05-20 15:47:03,689 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-05-20 15:47:03,690 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:03,690 INFO sqlalchemy.engine.base.Engine Thread-70 : (1, 1)
2020-05-20 15:47:03,693 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-05-20 15:47:03,694 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:03,694 INFO sqlalchemy.engine.base.Engine Thread-71 : (1, 1)
2020-05-20 15:47:03,696 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-05-20 15:47:03,698 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:03,698 INFO sqlalchemy.engine.base.Engine Thread-72 : (1, 1)
2020-05-20 15:47:03,700 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-05-20 15:47:03,701 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:03,701 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:03,703 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:03,702 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:03,704 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:03,704 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-05-20 15:47:03,702 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:03,705 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-05-20 15:47:03,705 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-05-20 15:47:03,703 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:03,707 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-05-20 15:47:03,707 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:03,709 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:03,710 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-05-20 15:47:03,729 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-05-20 15:47:03,730 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:03,730 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-05-20 15:47:03,730 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:03,731 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:03,732 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-05-20 15:47:04,919 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-05-20 15:47:04,921 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:04,921 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-05-20 15:47:04,922 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:04,922 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:04,924 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:47:04,925 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip', 1, 1)
2020-05-20 15:47:04,925 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:04,925 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:04,927 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 15:47:04,927 INFO sqlalchemy.engine.base.Engine Thread-75 : ('121', 1)
2020-05-20 15:47:04,927 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:04,928 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 0)
2020-05-20 15:47:04,930 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:47:04,930 INFO sqlalchemy.engine.base.Engine Thread-75 : (0,)
2020-05-20 15:47:04,931 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:04,931 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:47:04,931 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 15:47:04,931 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 15:47:04,931 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 15:47:04,931 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 15:47:04,931 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 15:47:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:47:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 15:47:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 15:47:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 15:47:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 15:47:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 15:47:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 15:47:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 15:47:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 15:47:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 15:47:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 15:47:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 15:47:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 15:47:04,933 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 15:47:04,933 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 15:47:04,933 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 15:47:04,934 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-20 15:47:04,935 INFO sqlalchemy.engine.base.Engine Thread-75 : (0,)
2020-05-20 15:47:04,936 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:04,936 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-20 15:47:04,936 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-20 15:47:04,936 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 15:47:04,936 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-20 15:47:04,936 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 15:47:04,936 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 15:47:04,936 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 15:47:04,936 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-20 15:47:04,936 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 15:47:04,936 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-20 15:47:04,936 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-20 15:47:04,937 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-20 15:47:04,937 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 15:47:04,937 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-20 15:47:04,937 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 15:47:04,937 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 15:47:04,937 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 15:47:04,937 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-20 15:47:04,937 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-20 15:47:04,937 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 15:47:04,937 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-20 15:47:04,937 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-20 15:47:04,937 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-20 15:47:04,938 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-20 15:47:04,938 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-20 15:47:04,938 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-20 15:47:04,938 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-20 15:47:04,938 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-20 15:47:04,938 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-20 15:47:04,938 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-20 15:47:04,938 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-20 15:47:04,938 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-20 15:47:04,938 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-20 15:47:04,938 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-20 15:47:04,939 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-20 15:47:04,939 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-20 15:47:04,939 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-20 15:47:04,939 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-20 15:47:04,939 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-20 15:47:04,939 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-20 15:47:04,939 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-20 15:47:04,939 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-20 15:47:04,939 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-20 15:47:04,939 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-20 15:47:04,939 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 15:47:04,940 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 15:47:04,940 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-20 15:47:04,940 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 15:47:04,940 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 15:47:04,940 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-20 15:47:04,940 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 15:47:04,940 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-20 15:47:04,940 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-20 15:47:04,940 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-20 15:47:04,940 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-20 15:47:04,940 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-20 15:47:04,940 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-20 15:47:04,940 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 15:47:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 15:47:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 0)
2020-05-20 15:47:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 15:47:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-20 15:47:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-20 15:47:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-20 15:47:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-20 15:47:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-20 15:47:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-20 15:47:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-20 15:47:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-20 15:47:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-20 15:47:04,942 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 15:47:04,942 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-20 15:47:04,942 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-20 15:47:04,942 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-20 15:47:04,942 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 15:47:04,975 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:47:04,975 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip', 1, 1)
2020-05-20 15:47:04,976 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:04,976 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:04,980 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-05-20 15:47:05,234 INFO sqlalchemy.engine.base.Engine Thread-85 : BEGIN (implicit)
2020-05-20 15:47:05,235 INFO sqlalchemy.engine.base.Engine Thread-84 : BEGIN (implicit)
2020-05-20 15:47:05,238 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-05-20 15:47:05,239 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:05,244 INFO sqlalchemy.engine.base.Engine Thread-85 : (1, 1)
2020-05-20 15:47:05,240 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:05,244 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:05,244 INFO sqlalchemy.engine.base.Engine Thread-84 : (1, 1)
2020-05-20 15:47:05,243 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-05-20 15:47:05,245 INFO sqlalchemy.engine.base.Engine Thread-86 : (1, 1)
2020-05-20 15:47:05,245 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:05,247 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:05,246 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:05,245 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:05,248 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:05,248 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-05-20 15:47:05,248 INFO sqlalchemy.engine.base.Engine Thread-85 : ROLLBACK
2020-05-20 15:47:05,249 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:05,249 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:05,250 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:05,251 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-05-20 15:47:05,252 INFO sqlalchemy.engine.base.Engine Thread-84 : ROLLBACK
2020-05-20 15:47:05,252 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:05,255 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-05-20 15:47:05,266 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-05-20 15:47:05,267 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:05,267 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-05-20 15:47:05,268 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:05,268 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:05,269 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-05-20 15:47:13,549 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-05-20 15:47:13,550 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:13,550 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-05-20 15:47:13,551 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:13,551 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:13,553 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:47:13,553 INFO sqlalchemy.engine.base.Engine Thread-89 : ('philip', 1, 1)
2020-05-20 15:47:13,554 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:13,554 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:13,556 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 15:47:13,556 INFO sqlalchemy.engine.base.Engine Thread-89 : ('121', 1)
2020-05-20 15:47:13,556 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:13,557 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 0)
2020-05-20 15:47:13,559 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:47:13,560 INFO sqlalchemy.engine.base.Engine Thread-89 : (0,)
2020-05-20 15:47:13,560 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:13,560 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:47:13,560 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 15:47:13,560 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 15:47:13,561 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 15:47:13,561 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 15:47:13,561 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 15:47:13,561 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:47:13,561 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 15:47:13,561 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 15:47:13,561 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 15:47:13,561 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 15:47:13,561 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 15:47:13,561 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 15:47:13,561 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 15:47:13,561 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 15:47:13,562 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 15:47:13,562 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 15:47:13,562 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 15:47:13,562 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 15:47:13,562 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 15:47:13,562 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 15:47:13,562 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 15:47:13,564 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-20 15:47:13,564 INFO sqlalchemy.engine.base.Engine Thread-89 : (0,)
2020-05-20 15:47:13,565 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:13,565 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-20 15:47:13,565 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-20 15:47:13,565 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 15:47:13,565 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-20 15:47:13,565 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 15:47:13,565 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 15:47:13,565 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 15:47:13,566 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-20 15:47:13,566 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 15:47:13,566 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-20 15:47:13,566 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-20 15:47:13,566 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-20 15:47:13,566 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 15:47:13,566 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-20 15:47:13,566 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 15:47:13,566 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 15:47:13,566 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 15:47:13,566 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-20 15:47:13,566 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-20 15:47:13,566 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 15:47:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-20 15:47:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-20 15:47:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-20 15:47:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-20 15:47:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-20 15:47:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-20 15:47:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-20 15:47:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-20 15:47:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-20 15:47:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-20 15:47:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-20 15:47:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-20 15:47:13,568 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-20 15:47:13,568 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-20 15:47:13,568 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-20 15:47:13,568 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-20 15:47:13,568 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-20 15:47:13,568 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-20 15:47:13,568 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-20 15:47:13,568 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-20 15:47:13,568 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-20 15:47:13,568 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-20 15:47:13,568 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-20 15:47:13,568 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-20 15:47:13,568 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 15:47:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 15:47:13,570 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 0)
2020-05-20 15:47:13,570 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 15:47:13,570 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-20 15:47:13,570 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-20 15:47:13,570 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-20 15:47:13,570 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-20 15:47:13,570 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-20 15:47:13,570 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-20 15:47:13,570 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-20 15:47:13,570 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-20 15:47:13,570 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-20 15:47:13,570 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 15:47:13,570 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-20 15:47:13,571 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-20 15:47:13,571 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-20 15:47:13,571 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 15:47:13,575 INFO sqlalchemy.engine.base.Engine Thread-89 : UPDATE parameters SET id=%s, param_critical=%s WHERE parameters.id = %s
2020-05-20 15:47:13,575 INFO sqlalchemy.engine.base.Engine Thread-89 : ('121', 1, 121)
2020-05-20 15:47:13,576 INFO sqlalchemy.engine.base.Engine Thread-89 : COMMIT
2020-05-20 15:47:13,644 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-05-20 15:47:13,645 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:13,645 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-05-20 15:47:13,646 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:13,646 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:13,648 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:47:13,648 INFO sqlalchemy.engine.base.Engine Thread-90 : ('philip', 1, 1)
2020-05-20 15:47:13,649 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:13,649 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:13,651 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:47:13,651 INFO sqlalchemy.engine.base.Engine Thread-90 : (0,)
2020-05-20 15:47:13,652 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:13,652 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:47:13,652 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 15:47:13,652 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 15:47:13,652 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 15:47:13,652 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 15:47:13,652 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 15:47:13,652 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:47:13,653 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 15:47:13,653 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 15:47:13,653 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 15:47:13,653 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 15:47:13,653 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 15:47:13,653 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 15:47:13,653 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 15:47:13,653 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 15:47:13,653 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 15:47:13,653 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 15:47:13,653 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 15:47:13,653 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 15:47:13,653 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 15:47:13,654 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 15:47:13,654 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 15:47:13,656 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 15:47:13,656 INFO sqlalchemy.engine.base.Engine Thread-90 : (120, 1)
2020-05-20 15:47:13,656 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:13,656 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:47:13,658 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-20 15:47:13,658 INFO sqlalchemy.engine.base.Engine Thread-90 : (120,)
2020-05-20 15:47:13,658 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:13,658 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 15:47:13,663 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:47:13,663 INFO sqlalchemy.engine.base.Engine Thread-90 : ('philip', 1, 1)
2020-05-20 15:47:13,664 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:13,664 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:13,667 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-05-20 15:47:13,949 INFO sqlalchemy.engine.base.Engine Thread-100 : BEGIN (implicit)
2020-05-20 15:47:13,952 INFO sqlalchemy.engine.base.Engine Thread-99 : BEGIN (implicit)
2020-05-20 15:47:13,953 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:13,959 INFO sqlalchemy.engine.base.Engine Thread-100 : (1, 1)
2020-05-20 15:47:13,955 INFO sqlalchemy.engine.base.Engine Thread-101 : BEGIN (implicit)
2020-05-20 15:47:13,959 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:13,960 INFO sqlalchemy.engine.base.Engine Thread-99 : (1, 1)
2020-05-20 15:47:13,960 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:13,961 INFO sqlalchemy.engine.base.Engine Thread-101 : (1, 1)
2020-05-20 15:47:13,961 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:13,962 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:13,958 INFO sqlalchemy.engine.base.Engine Thread-102 : BEGIN (implicit)
2020-05-20 15:47:13,961 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:13,963 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:13,965 INFO sqlalchemy.engine.base.Engine Thread-102 : (1, 1)
2020-05-20 15:47:13,964 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:13,965 INFO sqlalchemy.engine.base.Engine Thread-99 : ROLLBACK
2020-05-20 15:47:13,963 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:13,964 INFO sqlalchemy.engine.base.Engine Thread-100 : ROLLBACK
2020-05-20 15:47:13,966 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:13,967 INFO sqlalchemy.engine.base.Engine Thread-101 : ROLLBACK
2020-05-20 15:47:13,966 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:13,969 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:13,970 INFO sqlalchemy.engine.base.Engine Thread-102 : ROLLBACK
2020-05-20 15:47:13,981 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-05-20 15:47:13,982 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:13,982 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-05-20 15:47:13,983 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:13,983 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:13,984 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-05-20 15:47:15,362 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-05-20 15:47:15,363 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:15,363 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-05-20 15:47:15,364 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:15,364 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:15,367 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:47:15,367 INFO sqlalchemy.engine.base.Engine Thread-104 : ('philip', 1, 1)
2020-05-20 15:47:15,367 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:15,368 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:15,369 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 15:47:15,369 INFO sqlalchemy.engine.base.Engine Thread-104 : ('121', 1)
2020-05-20 15:47:15,370 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:15,370 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 15:47:15,372 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:47:15,372 INFO sqlalchemy.engine.base.Engine Thread-104 : (0,)
2020-05-20 15:47:15,373 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:15,373 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:47:15,373 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 15:47:15,373 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 15:47:15,373 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 15:47:15,373 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 15:47:15,373 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 15:47:15,373 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:47:15,373 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 15:47:15,373 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 15:47:15,374 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 15:47:15,374 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 15:47:15,374 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 15:47:15,374 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 15:47:15,374 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 15:47:15,374 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 15:47:15,374 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 15:47:15,374 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 15:47:15,374 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 15:47:15,374 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 15:47:15,374 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 15:47:15,375 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 15:47:15,375 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 15:47:15,377 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-20 15:47:15,377 INFO sqlalchemy.engine.base.Engine Thread-104 : (0,)
2020-05-20 15:47:15,378 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:15,378 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-20 15:47:15,378 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-20 15:47:15,378 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 15:47:15,378 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-20 15:47:15,378 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 15:47:15,379 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 15:47:15,379 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 15:47:15,379 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-20 15:47:15,379 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 15:47:15,379 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-20 15:47:15,379 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-20 15:47:15,379 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-20 15:47:15,379 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 15:47:15,379 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-20 15:47:15,379 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 15:47:15,380 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 15:47:15,380 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 15:47:15,380 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-20 15:47:15,380 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-20 15:47:15,380 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 15:47:15,380 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-20 15:47:15,380 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-20 15:47:15,380 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-20 15:47:15,380 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-20 15:47:15,380 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-20 15:47:15,380 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-20 15:47:15,381 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-20 15:47:15,381 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-20 15:47:15,381 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-20 15:47:15,381 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-20 15:47:15,381 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-20 15:47:15,381 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-20 15:47:15,381 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-20 15:47:15,381 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-20 15:47:15,381 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-20 15:47:15,381 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-20 15:47:15,381 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-20 15:47:15,382 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-20 15:47:15,382 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-20 15:47:15,382 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-20 15:47:15,382 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-20 15:47:15,382 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-20 15:47:15,382 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-20 15:47:15,382 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-20 15:47:15,382 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 15:47:15,382 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 15:47:15,382 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-20 15:47:15,382 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 15:47:15,383 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 15:47:15,383 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-20 15:47:15,383 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 15:47:15,383 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-20 15:47:15,383 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-20 15:47:15,383 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-20 15:47:15,383 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-20 15:47:15,383 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-20 15:47:15,383 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-20 15:47:15,383 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 15:47:15,383 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 15:47:15,383 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 15:47:15,384 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 15:47:15,384 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-20 15:47:15,384 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-20 15:47:15,384 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-20 15:47:15,384 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-20 15:47:15,384 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-20 15:47:15,384 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-20 15:47:15,384 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-20 15:47:15,384 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-20 15:47:15,384 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-20 15:47:15,384 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 15:47:15,385 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-20 15:47:15,385 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-20 15:47:15,385 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-20 15:47:15,385 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 15:47:15,390 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:47:15,391 INFO sqlalchemy.engine.base.Engine Thread-104 : ('philip', 1, 1)
2020-05-20 15:47:15,391 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:15,391 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:15,395 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-05-20 15:47:15,663 INFO sqlalchemy.engine.base.Engine Thread-113 : BEGIN (implicit)
2020-05-20 15:47:15,664 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:15,664 INFO sqlalchemy.engine.base.Engine Thread-113 : (1, 1)
2020-05-20 15:47:15,665 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:15,665 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:15,666 INFO sqlalchemy.engine.base.Engine Thread-113 : ROLLBACK
2020-05-20 15:47:15,668 INFO sqlalchemy.engine.base.Engine Thread-114 : BEGIN (implicit)
2020-05-20 15:47:15,669 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:15,669 INFO sqlalchemy.engine.base.Engine Thread-114 : (1, 1)
2020-05-20 15:47:15,672 INFO sqlalchemy.engine.base.Engine Thread-115 : BEGIN (implicit)
2020-05-20 15:47:15,673 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:15,673 INFO sqlalchemy.engine.base.Engine Thread-115 : (1, 1)
2020-05-20 15:47:15,674 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:15,674 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:15,675 INFO sqlalchemy.engine.base.Engine Thread-115 : ROLLBACK
2020-05-20 15:47:15,676 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:15,676 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:15,677 INFO sqlalchemy.engine.base.Engine Thread-114 : ROLLBACK
2020-05-20 15:47:15,680 INFO sqlalchemy.engine.base.Engine Thread-116 : BEGIN (implicit)
2020-05-20 15:47:15,682 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:15,682 INFO sqlalchemy.engine.base.Engine Thread-116 : (1, 1)
2020-05-20 15:47:15,682 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:15,683 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:15,684 INFO sqlalchemy.engine.base.Engine Thread-116 : ROLLBACK
2020-05-20 15:47:15,698 INFO sqlalchemy.engine.base.Engine Thread-117 : BEGIN (implicit)
2020-05-20 15:47:15,699 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:15,700 INFO sqlalchemy.engine.base.Engine Thread-117 : (1, 1)
2020-05-20 15:47:15,700 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:15,700 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:15,701 INFO sqlalchemy.engine.base.Engine Thread-117 : ROLLBACK
2020-05-20 15:47:28,047 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-05-20 15:47:28,048 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:28,048 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-05-20 15:47:28,048 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:28,049 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:28,051 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:47:28,051 INFO sqlalchemy.engine.base.Engine Thread-118 : ('philip', 1, 1)
2020-05-20 15:47:28,052 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:28,052 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:28,054 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:47:28,054 INFO sqlalchemy.engine.base.Engine Thread-118 : (0,)
2020-05-20 15:47:28,055 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:28,055 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:47:28,055 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 15:47:28,055 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 15:47:28,055 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 15:47:28,055 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 15:47:28,056 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 15:47:28,056 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:47:28,056 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 15:47:28,056 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 15:47:28,056 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 15:47:28,056 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 15:47:28,056 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 15:47:28,056 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 15:47:28,056 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 15:47:28,056 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 15:47:28,056 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 15:47:28,056 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 15:47:28,057 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 15:47:28,057 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 15:47:28,057 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 15:47:28,057 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 15:47:28,057 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 15:47:28,059 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 15:47:28,059 INFO sqlalchemy.engine.base.Engine Thread-118 : (120, 1)
2020-05-20 15:47:28,060 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:28,060 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:47:28,061 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-20 15:47:28,061 INFO sqlalchemy.engine.base.Engine Thread-118 : (120,)
2020-05-20 15:47:28,062 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:28,062 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 15:47:28,066 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:47:28,066 INFO sqlalchemy.engine.base.Engine Thread-118 : ('philip', 1, 1)
2020-05-20 15:47:28,067 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:28,067 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:28,070 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-05-20 15:47:28,335 INFO sqlalchemy.engine.base.Engine Thread-127 : BEGIN (implicit)
2020-05-20 15:47:28,338 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:28,338 INFO sqlalchemy.engine.base.Engine Thread-127 : (1, 1)
2020-05-20 15:47:28,340 INFO sqlalchemy.engine.base.Engine Thread-129 : BEGIN (implicit)
2020-05-20 15:47:28,341 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:28,341 INFO sqlalchemy.engine.base.Engine Thread-129 : (1, 1)
2020-05-20 15:47:28,341 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:28,345 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:28,343 INFO sqlalchemy.engine.base.Engine Thread-128 : BEGIN (implicit)
2020-05-20 15:47:28,345 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:28,347 INFO sqlalchemy.engine.base.Engine Thread-127 : ROLLBACK
2020-05-20 15:47:28,348 INFO sqlalchemy.engine.base.Engine Thread-130 : BEGIN (implicit)
2020-05-20 15:47:28,349 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:28,350 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:28,352 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:28,353 INFO sqlalchemy.engine.base.Engine Thread-130 : (1, 1)
2020-05-20 15:47:28,353 INFO sqlalchemy.engine.base.Engine Thread-129 : ROLLBACK
2020-05-20 15:47:28,352 INFO sqlalchemy.engine.base.Engine Thread-128 : (1, 1)
2020-05-20 15:47:28,354 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:28,354 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:28,355 INFO sqlalchemy.engine.base.Engine Thread-130 : ROLLBACK
2020-05-20 15:47:28,357 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:28,357 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:28,358 INFO sqlalchemy.engine.base.Engine Thread-128 : ROLLBACK
2020-05-20 15:47:28,364 INFO sqlalchemy.engine.base.Engine Thread-131 : BEGIN (implicit)
2020-05-20 15:47:28,365 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:28,365 INFO sqlalchemy.engine.base.Engine Thread-131 : (1, 1)
2020-05-20 15:47:28,366 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:28,366 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:28,367 INFO sqlalchemy.engine.base.Engine Thread-131 : ROLLBACK
2020-05-20 15:47:54,723 INFO sqlalchemy.engine.base.Engine Thread-132 : BEGIN (implicit)
2020-05-20 15:47:54,724 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:54,724 INFO sqlalchemy.engine.base.Engine Thread-132 : (1, 1)
2020-05-20 15:47:54,725 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:54,725 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:54,727 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:47:54,728 INFO sqlalchemy.engine.base.Engine Thread-132 : ('philip', 1, 1)
2020-05-20 15:47:54,728 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:54,729 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:54,731 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 15:47:54,731 INFO sqlalchemy.engine.base.Engine Thread-132 : ('121', 1)
2020-05-20 15:47:54,731 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:54,732 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 15:47:54,734 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:47:54,734 INFO sqlalchemy.engine.base.Engine Thread-132 : (0,)
2020-05-20 15:47:54,735 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:54,735 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:47:54,735 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 15:47:54,735 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 15:47:54,735 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 15:47:54,735 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 15:47:54,735 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 15:47:54,735 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:47:54,735 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 15:47:54,736 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 15:47:54,736 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 15:47:54,736 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 15:47:54,736 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 15:47:54,736 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 15:47:54,736 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 15:47:54,736 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 15:47:54,736 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 15:47:54,736 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 15:47:54,736 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 15:47:54,736 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 15:47:54,736 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 15:47:54,737 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 15:47:54,737 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 15:47:54,738 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-20 15:47:54,738 INFO sqlalchemy.engine.base.Engine Thread-132 : (0,)
2020-05-20 15:47:54,739 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:47:54,739 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-20 15:47:54,739 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-20 15:47:54,740 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 15:47:54,740 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-20 15:47:54,740 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 15:47:54,740 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 15:47:54,740 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 15:47:54,740 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-20 15:47:54,740 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 15:47:54,740 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-20 15:47:54,740 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-20 15:47:54,740 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-20 15:47:54,740 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 15:47:54,740 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-20 15:47:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 15:47:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 15:47:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 15:47:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-20 15:47:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-20 15:47:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 15:47:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-20 15:47:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-20 15:47:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-20 15:47:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-20 15:47:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-20 15:47:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-20 15:47:54,741 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-20 15:47:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-20 15:47:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-20 15:47:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-20 15:47:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-20 15:47:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-20 15:47:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-20 15:47:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-20 15:47:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-20 15:47:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-20 15:47:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-20 15:47:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-20 15:47:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-20 15:47:54,742 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-20 15:47:54,743 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-20 15:47:54,743 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-20 15:47:54,743 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-20 15:47:54,743 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-20 15:47:54,743 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 15:47:54,743 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 15:47:54,743 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-20 15:47:54,743 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 15:47:54,743 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 15:47:54,743 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-20 15:47:54,743 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 15:47:54,743 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-20 15:47:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-20 15:47:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-20 15:47:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-20 15:47:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-20 15:47:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-20 15:47:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 15:47:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 15:47:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 15:47:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 15:47:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-20 15:47:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-20 15:47:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-20 15:47:54,744 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-20 15:47:54,745 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-20 15:47:54,745 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-20 15:47:54,745 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-20 15:47:54,745 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-20 15:47:54,745 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-20 15:47:54,745 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 15:47:54,745 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-20 15:47:54,745 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-20 15:47:54,745 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-20 15:47:54,745 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 15:47:54,752 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:47:54,752 INFO sqlalchemy.engine.base.Engine Thread-132 : ('philip', 1, 1)
2020-05-20 15:47:54,752 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:54,753 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:54,756 INFO sqlalchemy.engine.base.Engine Thread-132 : ROLLBACK
2020-05-20 15:47:55,027 INFO sqlalchemy.engine.base.Engine Thread-141 : BEGIN (implicit)
2020-05-20 15:47:55,028 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:55,028 INFO sqlalchemy.engine.base.Engine Thread-141 : (1, 1)
2020-05-20 15:47:55,030 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:55,032 INFO sqlalchemy.engine.base.Engine Thread-142 : BEGIN (implicit)
2020-05-20 15:47:55,037 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:55,035 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-05-20 15:47:55,037 INFO sqlalchemy.engine.base.Engine Thread-142 : (1, 1)
2020-05-20 15:47:55,041 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:55,041 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:55,041 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:55,043 INFO sqlalchemy.engine.base.Engine Thread-143 : (1, 1)
2020-05-20 15:47:55,032 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:55,043 INFO sqlalchemy.engine.base.Engine Thread-142 : ROLLBACK
2020-05-20 15:47:55,044 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:55,044 INFO sqlalchemy.engine.base.Engine Thread-141 : ROLLBACK
2020-05-20 15:47:55,039 INFO sqlalchemy.engine.base.Engine Thread-144 : BEGIN (implicit)
2020-05-20 15:47:55,045 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:55,046 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:55,048 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-05-20 15:47:55,049 INFO sqlalchemy.engine.base.Engine Thread-144 : (1, 1)
2020-05-20 15:47:55,050 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:55,051 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:55,052 INFO sqlalchemy.engine.base.Engine Thread-144 : ROLLBACK
2020-05-20 15:47:55,065 INFO sqlalchemy.engine.base.Engine Thread-145 : BEGIN (implicit)
2020-05-20 15:47:55,067 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:47:55,067 INFO sqlalchemy.engine.base.Engine Thread-145 : (1, 1)
2020-05-20 15:47:55,068 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:47:55,068 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:47:55,069 INFO sqlalchemy.engine.base.Engine Thread-145 : ROLLBACK
2020-05-20 15:48:12,907 INFO sqlalchemy.engine.base.Engine Thread-146 : BEGIN (implicit)
2020-05-20 15:48:12,909 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:48:12,909 INFO sqlalchemy.engine.base.Engine Thread-146 : (1, 1)
2020-05-20 15:48:12,910 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:12,910 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:12,913 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:48:12,913 INFO sqlalchemy.engine.base.Engine Thread-146 : ('philip', 1, 1)
2020-05-20 15:48:12,914 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:12,914 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:12,916 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:48:12,916 INFO sqlalchemy.engine.base.Engine Thread-146 : (0,)
2020-05-20 15:48:12,917 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:48:12,917 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:48:12,917 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 15:48:12,917 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 15:48:12,917 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 15:48:12,918 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 15:48:12,918 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 15:48:12,918 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:48:12,918 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 15:48:12,918 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 15:48:12,918 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 15:48:12,918 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 15:48:12,918 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 15:48:12,918 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 15:48:12,918 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 15:48:12,918 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 15:48:12,919 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 15:48:12,919 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 15:48:12,919 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 15:48:12,919 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 15:48:12,919 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 15:48:12,919 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 15:48:12,919 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 15:48:12,921 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 15:48:12,921 INFO sqlalchemy.engine.base.Engine Thread-146 : (120, 1)
2020-05-20 15:48:12,922 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:48:12,922 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:48:12,923 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-20 15:48:12,923 INFO sqlalchemy.engine.base.Engine Thread-146 : (120,)
2020-05-20 15:48:12,924 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:48:12,924 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 15:48:12,928 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:48:12,928 INFO sqlalchemy.engine.base.Engine Thread-146 : ('philip', 1, 1)
2020-05-20 15:48:12,929 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:12,929 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:12,932 INFO sqlalchemy.engine.base.Engine Thread-146 : ROLLBACK
2020-05-20 15:48:13,232 INFO sqlalchemy.engine.base.Engine Thread-156 : BEGIN (implicit)
2020-05-20 15:48:13,235 INFO sqlalchemy.engine.base.Engine Thread-157 : BEGIN (implicit)
2020-05-20 15:48:13,236 INFO sqlalchemy.engine.base.Engine Thread-155 : BEGIN (implicit)
2020-05-20 15:48:13,242 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:48:13,240 INFO sqlalchemy.engine.base.Engine Thread-158 : BEGIN (implicit)
2020-05-20 15:48:13,244 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:48:13,244 INFO sqlalchemy.engine.base.Engine Thread-158 : (1, 1)
2020-05-20 15:48:13,243 INFO sqlalchemy.engine.base.Engine Thread-155 : (1, 1)
2020-05-20 15:48:13,238 INFO sqlalchemy.engine.base.Engine Thread-156 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:48:13,244 INFO sqlalchemy.engine.base.Engine Thread-156 : (1, 1)
2020-05-20 15:48:13,241 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:48:13,245 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:13,245 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:13,246 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:13,246 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:13,245 INFO sqlalchemy.engine.base.Engine Thread-157 : (1, 1)
2020-05-20 15:48:13,247 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:13,248 INFO sqlalchemy.engine.base.Engine Thread-156 : ROLLBACK
2020-05-20 15:48:13,249 INFO sqlalchemy.engine.base.Engine Thread-155 : ROLLBACK
2020-05-20 15:48:13,249 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:13,251 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:13,253 INFO sqlalchemy.engine.base.Engine Thread-158 : ROLLBACK
2020-05-20 15:48:13,253 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:13,254 INFO sqlalchemy.engine.base.Engine Thread-157 : ROLLBACK
2020-05-20 15:48:13,262 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-05-20 15:48:13,263 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:48:13,263 INFO sqlalchemy.engine.base.Engine Thread-159 : (1, 1)
2020-05-20 15:48:13,264 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:13,264 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:13,265 INFO sqlalchemy.engine.base.Engine Thread-159 : ROLLBACK
2020-05-20 15:48:31,980 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-05-20 15:48:31,981 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:48:31,981 INFO sqlalchemy.engine.base.Engine Thread-160 : (1, 1)
2020-05-20 15:48:31,981 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:31,982 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:31,984 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:48:31,984 INFO sqlalchemy.engine.base.Engine Thread-160 : ('philip', 1, 1)
2020-05-20 15:48:31,985 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:31,985 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:31,988 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:48:31,988 INFO sqlalchemy.engine.base.Engine Thread-160 : (0,)
2020-05-20 15:48:31,989 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:48:31,989 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:48:31,989 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 15:48:31,989 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 15:48:31,989 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 15:48:31,989 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 15:48:31,989 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 15:48:31,989 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:48:31,989 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 15:48:31,990 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 15:48:31,990 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 15:48:31,990 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 15:48:31,990 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 15:48:31,990 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 15:48:31,990 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 15:48:31,990 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 15:48:31,990 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 15:48:31,990 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 15:48:31,990 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 15:48:31,991 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 15:48:31,991 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 15:48:31,991 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 15:48:31,991 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 15:48:31,993 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-20 15:48:31,993 INFO sqlalchemy.engine.base.Engine Thread-160 : ('125',)
2020-05-20 15:48:31,993 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:48:31,998 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:48:31,998 INFO sqlalchemy.engine.base.Engine Thread-160 : ('philip', 1, 1)
2020-05-20 15:48:31,999 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:31,999 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:32,002 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-05-20 15:48:32,284 INFO sqlalchemy.engine.base.Engine Thread-169 : BEGIN (implicit)
2020-05-20 15:48:32,287 INFO sqlalchemy.engine.base.Engine Thread-170 : BEGIN (implicit)
2020-05-20 15:48:32,290 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:48:32,294 INFO sqlalchemy.engine.base.Engine Thread-170 : (1, 1)
2020-05-20 15:48:32,291 INFO sqlalchemy.engine.base.Engine Thread-171 : BEGIN (implicit)
2020-05-20 15:48:32,288 INFO sqlalchemy.engine.base.Engine Thread-169 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:48:32,295 INFO sqlalchemy.engine.base.Engine Thread-171 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:48:32,296 INFO sqlalchemy.engine.base.Engine Thread-171 : (1, 1)
2020-05-20 15:48:32,295 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:32,294 INFO sqlalchemy.engine.base.Engine Thread-172 : BEGIN (implicit)
2020-05-20 15:48:32,296 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:32,296 INFO sqlalchemy.engine.base.Engine Thread-169 : (1, 1)
2020-05-20 15:48:32,297 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:32,299 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:32,299 INFO sqlalchemy.engine.base.Engine Thread-170 : ROLLBACK
2020-05-20 15:48:32,298 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:48:32,300 INFO sqlalchemy.engine.base.Engine Thread-171 : ROLLBACK
2020-05-20 15:48:32,300 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:32,302 INFO sqlalchemy.engine.base.Engine Thread-172 : (1, 1)
2020-05-20 15:48:32,303 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:32,304 INFO sqlalchemy.engine.base.Engine Thread-169 : ROLLBACK
2020-05-20 15:48:32,304 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:32,305 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:32,306 INFO sqlalchemy.engine.base.Engine Thread-172 : ROLLBACK
2020-05-20 15:48:32,319 INFO sqlalchemy.engine.base.Engine Thread-173 : BEGIN (implicit)
2020-05-20 15:48:32,320 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:48:32,320 INFO sqlalchemy.engine.base.Engine Thread-173 : (1, 1)
2020-05-20 15:48:32,321 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:48:32,321 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:48:32,322 INFO sqlalchemy.engine.base.Engine Thread-173 : ROLLBACK
2020-05-20 15:58:53,944 INFO sqlalchemy.engine.base.Engine Thread-174 : BEGIN (implicit)
2020-05-20 15:58:53,946 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:58:53,946 INFO sqlalchemy.engine.base.Engine Thread-174 : (1, 1)
2020-05-20 15:58:53,948 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:53,948 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:53,951 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:58:53,951 INFO sqlalchemy.engine.base.Engine Thread-174 : ('philip', 1, 1)
2020-05-20 15:58:53,952 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:53,952 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:53,955 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:58:53,955 INFO sqlalchemy.engine.base.Engine Thread-174 : (116,)
2020-05-20 15:58:53,955 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:58:53,956 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 15:58:53,956 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 15:58:53,956 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 15:58:53,960 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:58:53,961 INFO sqlalchemy.engine.base.Engine Thread-174 : ('philip', 1, 1)
2020-05-20 15:58:53,961 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:53,961 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:53,963 INFO sqlalchemy.engine.base.Engine Thread-174 : ROLLBACK
2020-05-20 15:58:54,326 INFO sqlalchemy.engine.base.Engine Thread-183 : BEGIN (implicit)
2020-05-20 15:58:54,330 INFO sqlalchemy.engine.base.Engine Thread-186 : BEGIN (implicit)
2020-05-20 15:58:54,332 INFO sqlalchemy.engine.base.Engine Thread-184 : BEGIN (implicit)
2020-05-20 15:58:54,334 INFO sqlalchemy.engine.base.Engine Thread-185 : BEGIN (implicit)
2020-05-20 15:58:54,336 INFO sqlalchemy.engine.base.Engine Thread-183 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:58:54,337 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:58:54,338 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:58:54,339 INFO sqlalchemy.engine.base.Engine Thread-185 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:58:54,339 INFO sqlalchemy.engine.base.Engine Thread-183 : (1, 1)
2020-05-20 15:58:54,339 INFO sqlalchemy.engine.base.Engine Thread-186 : (1, 1)
2020-05-20 15:58:54,340 INFO sqlalchemy.engine.base.Engine Thread-184 : (1, 1)
2020-05-20 15:58:54,340 INFO sqlalchemy.engine.base.Engine Thread-185 : (1, 1)
2020-05-20 15:58:54,341 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:54,342 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:54,342 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:54,341 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:54,344 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:54,344 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:54,346 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:54,347 INFO sqlalchemy.engine.base.Engine Thread-185 : ROLLBACK
2020-05-20 15:58:54,345 INFO sqlalchemy.engine.base.Engine Thread-184 : ROLLBACK
2020-05-20 15:58:54,343 INFO sqlalchemy.engine.base.Engine Thread-183 : ROLLBACK
2020-05-20 15:58:54,344 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:54,349 INFO sqlalchemy.engine.base.Engine Thread-186 : ROLLBACK
2020-05-20 15:58:54,375 INFO sqlalchemy.engine.base.Engine Thread-187 : BEGIN (implicit)
2020-05-20 15:58:54,377 INFO sqlalchemy.engine.base.Engine Thread-187 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:58:54,377 INFO sqlalchemy.engine.base.Engine Thread-187 : (1, 1)
2020-05-20 15:58:54,377 DEBUG sqlalchemy.engine.base.Engine Thread-187 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:54,378 DEBUG sqlalchemy.engine.base.Engine Thread-187 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:54,379 INFO sqlalchemy.engine.base.Engine Thread-187 : ROLLBACK
2020-05-20 15:58:57,161 INFO sqlalchemy.engine.base.Engine Thread-188 : BEGIN (implicit)
2020-05-20 15:58:57,162 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:58:57,162 INFO sqlalchemy.engine.base.Engine Thread-188 : (1, 1)
2020-05-20 15:58:57,163 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:57,163 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:57,166 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:58:57,166 INFO sqlalchemy.engine.base.Engine Thread-188 : ('philip', 1, 1)
2020-05-20 15:58:57,166 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:57,167 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:57,169 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:58:57,169 INFO sqlalchemy.engine.base.Engine Thread-188 : (116,)
2020-05-20 15:58:57,170 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:58:57,170 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 15:58:57,170 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 15:58:57,170 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 15:58:57,171 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-05-20 15:58:57,171 INFO sqlalchemy.engine.base.Engine Thread-188 : ('OPERATIONS_EMAILS', 1)
2020-05-20 15:58:57,172 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:58:57,172 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 15:58:57,173 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-05-20 15:58:57,173 INFO sqlalchemy.engine.base.Engine Thread-188 : ('117', 1)
2020-05-20 15:58:57,174 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:58:57,174 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 15:58:57,178 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:58:57,178 INFO sqlalchemy.engine.base.Engine Thread-188 : ('philip', 1, 1)
2020-05-20 15:58:57,179 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:57,180 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:57,182 INFO sqlalchemy.engine.base.Engine Thread-188 : ROLLBACK
2020-05-20 15:58:57,488 INFO sqlalchemy.engine.base.Engine Thread-197 : BEGIN (implicit)
2020-05-20 15:58:57,489 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:58:57,489 INFO sqlalchemy.engine.base.Engine Thread-197 : (1, 1)
2020-05-20 15:58:57,491 INFO sqlalchemy.engine.base.Engine Thread-198 : BEGIN (implicit)
2020-05-20 15:58:57,492 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:58:57,492 INFO sqlalchemy.engine.base.Engine Thread-198 : (1, 1)
2020-05-20 15:58:57,493 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:57,496 INFO sqlalchemy.engine.base.Engine Thread-199 : BEGIN (implicit)
2020-05-20 15:58:57,496 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:57,496 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:57,499 INFO sqlalchemy.engine.base.Engine Thread-200 : BEGIN (implicit)
2020-05-20 15:58:57,500 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:58:57,501 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:57,502 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:58:57,504 INFO sqlalchemy.engine.base.Engine Thread-200 : (1, 1)
2020-05-20 15:58:57,503 INFO sqlalchemy.engine.base.Engine Thread-199 : (1, 1)
2020-05-20 15:58:57,504 INFO sqlalchemy.engine.base.Engine Thread-198 : ROLLBACK
2020-05-20 15:58:57,505 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:57,505 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:57,506 INFO sqlalchemy.engine.base.Engine Thread-199 : ROLLBACK
2020-05-20 15:58:57,503 INFO sqlalchemy.engine.base.Engine Thread-197 : ROLLBACK
2020-05-20 15:58:57,508 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:57,509 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:57,510 INFO sqlalchemy.engine.base.Engine Thread-200 : ROLLBACK
2020-05-20 15:58:57,517 INFO sqlalchemy.engine.base.Engine Thread-201 : BEGIN (implicit)
2020-05-20 15:58:57,518 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:58:57,518 INFO sqlalchemy.engine.base.Engine Thread-201 : (1, 1)
2020-05-20 15:58:57,518 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:58:57,519 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:58:57,520 INFO sqlalchemy.engine.base.Engine Thread-201 : ROLLBACK
2020-05-20 15:59:11,425 INFO sqlalchemy.engine.base.Engine Thread-202 : BEGIN (implicit)
2020-05-20 15:59:11,426 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:59:11,426 INFO sqlalchemy.engine.base.Engine Thread-202 : (1, 1)
2020-05-20 15:59:11,427 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:11,428 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:11,430 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:59:11,430 INFO sqlalchemy.engine.base.Engine Thread-202 : ('philip', 1, 1)
2020-05-20 15:59:11,431 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:11,431 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:11,433 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:59:11,433 INFO sqlalchemy.engine.base.Engine Thread-202 : (116,)
2020-05-20 15:59:11,434 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:59:11,434 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 15:59:11,434 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 15:59:11,434 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 15:59:11,436 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-05-20 15:59:11,436 INFO sqlalchemy.engine.base.Engine Thread-202 : ('OPERATIONS_EMAILS', 1)
2020-05-20 15:59:11,436 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:59:11,436 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 15:59:11,437 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-05-20 15:59:11,437 INFO sqlalchemy.engine.base.Engine Thread-202 : ('117', 1)
2020-05-20 15:59:11,439 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:59:11,439 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 15:59:11,443 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:59:11,443 INFO sqlalchemy.engine.base.Engine Thread-202 : ('philip', 1, 1)
2020-05-20 15:59:11,444 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:11,445 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:11,447 INFO sqlalchemy.engine.base.Engine Thread-202 : ROLLBACK
2020-05-20 15:59:11,719 INFO sqlalchemy.engine.base.Engine Thread-211 : BEGIN (implicit)
2020-05-20 15:59:11,722 INFO sqlalchemy.engine.base.Engine Thread-212 : BEGIN (implicit)
2020-05-20 15:59:11,723 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:59:11,725 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:59:11,730 INFO sqlalchemy.engine.base.Engine Thread-212 : (1, 1)
2020-05-20 15:59:11,727 INFO sqlalchemy.engine.base.Engine Thread-213 : BEGIN (implicit)
2020-05-20 15:59:11,730 INFO sqlalchemy.engine.base.Engine Thread-211 : (1, 1)
2020-05-20 15:59:11,732 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:11,731 INFO sqlalchemy.engine.base.Engine Thread-213 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:59:11,732 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:11,730 INFO sqlalchemy.engine.base.Engine Thread-214 : BEGIN (implicit)
2020-05-20 15:59:11,733 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:11,733 INFO sqlalchemy.engine.base.Engine Thread-213 : (1, 1)
2020-05-20 15:59:11,733 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:11,734 INFO sqlalchemy.engine.base.Engine Thread-214 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:59:11,736 INFO sqlalchemy.engine.base.Engine Thread-214 : (1, 1)
2020-05-20 15:59:11,736 INFO sqlalchemy.engine.base.Engine Thread-212 : ROLLBACK
2020-05-20 15:59:11,737 INFO sqlalchemy.engine.base.Engine Thread-211 : ROLLBACK
2020-05-20 15:59:11,738 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:11,738 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:11,739 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:11,740 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:11,741 INFO sqlalchemy.engine.base.Engine Thread-214 : ROLLBACK
2020-05-20 15:59:11,742 INFO sqlalchemy.engine.base.Engine Thread-213 : ROLLBACK
2020-05-20 15:59:11,749 INFO sqlalchemy.engine.base.Engine Thread-215 : BEGIN (implicit)
2020-05-20 15:59:11,750 INFO sqlalchemy.engine.base.Engine Thread-215 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:59:11,750 INFO sqlalchemy.engine.base.Engine Thread-215 : (1, 1)
2020-05-20 15:59:11,750 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:11,751 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:11,752 INFO sqlalchemy.engine.base.Engine Thread-215 : ROLLBACK
2020-05-20 15:59:52,382 INFO sqlalchemy.engine.base.Engine Thread-216 : BEGIN (implicit)
2020-05-20 15:59:52,383 INFO sqlalchemy.engine.base.Engine Thread-216 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:59:52,383 INFO sqlalchemy.engine.base.Engine Thread-216 : (1, 1)
2020-05-20 15:59:52,384 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:52,384 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:52,386 INFO sqlalchemy.engine.base.Engine Thread-216 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:59:52,386 INFO sqlalchemy.engine.base.Engine Thread-216 : ('philip', 1, 1)
2020-05-20 15:59:52,387 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:52,387 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:52,389 INFO sqlalchemy.engine.base.Engine Thread-216 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:59:52,389 INFO sqlalchemy.engine.base.Engine Thread-216 : (0,)
2020-05-20 15:59:52,390 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:59:52,390 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:59:52,390 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 15:59:52,390 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 15:59:52,390 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 15:59:52,390 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 15:59:52,391 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 15:59:52,391 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:59:52,391 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 15:59:52,391 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 15:59:52,391 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 15:59:52,391 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 15:59:52,391 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 15:59:52,391 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 15:59:52,391 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 15:59:52,391 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 15:59:52,391 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 15:59:52,391 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 15:59:52,392 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 15:59:52,392 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 15:59:52,392 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 15:59:52,392 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 15:59:52,392 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 15:59:52,394 INFO sqlalchemy.engine.base.Engine Thread-216 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-05-20 15:59:52,394 INFO sqlalchemy.engine.base.Engine Thread-216 : (0, 1)
2020-05-20 15:59:52,394 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:59:52,394 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:59:52,396 INFO sqlalchemy.engine.base.Engine Thread-216 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-20 15:59:52,396 INFO sqlalchemy.engine.base.Engine Thread-216 : (66,)
2020-05-20 15:59:52,396 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:59:52,396 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 15:59:52,396 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 15:59:52,401 INFO sqlalchemy.engine.base.Engine Thread-216 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:59:52,401 INFO sqlalchemy.engine.base.Engine Thread-216 : ('philip', 1, 1)
2020-05-20 15:59:52,401 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:52,402 DEBUG sqlalchemy.engine.base.Engine Thread-216 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:52,405 INFO sqlalchemy.engine.base.Engine Thread-216 : ROLLBACK
2020-05-20 15:59:57,980 INFO sqlalchemy.engine.base.Engine Thread-225 : BEGIN (implicit)
2020-05-20 15:59:57,981 INFO sqlalchemy.engine.base.Engine Thread-225 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:59:57,981 INFO sqlalchemy.engine.base.Engine Thread-225 : (1, 1)
2020-05-20 15:59:57,982 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:57,982 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:57,985 INFO sqlalchemy.engine.base.Engine Thread-225 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:59:57,985 INFO sqlalchemy.engine.base.Engine Thread-225 : ('philip', 1, 1)
2020-05-20 15:59:57,985 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:57,986 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:57,988 INFO sqlalchemy.engine.base.Engine Thread-225 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:59:57,988 INFO sqlalchemy.engine.base.Engine Thread-225 : (0,)
2020-05-20 15:59:57,989 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:59:57,989 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:59:57,989 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 15:59:57,989 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 15:59:57,989 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 15:59:57,989 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 15:59:57,989 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 15:59:57,989 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:59:57,989 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 15:59:57,990 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 15:59:57,990 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 15:59:57,990 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 15:59:57,990 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 15:59:57,990 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 15:59:57,990 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 15:59:57,990 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 15:59:57,990 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 15:59:57,990 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 15:59:57,990 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 15:59:57,990 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 15:59:57,991 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 15:59:57,991 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 15:59:57,991 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 15:59:57,993 INFO sqlalchemy.engine.base.Engine Thread-225 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-20 15:59:57,993 INFO sqlalchemy.engine.base.Engine Thread-225 : ('116',)
2020-05-20 15:59:57,993 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:59:57,993 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 15:59:57,993 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 15:59:57,994 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 15:59:57,998 INFO sqlalchemy.engine.base.Engine Thread-225 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:59:57,998 INFO sqlalchemy.engine.base.Engine Thread-225 : ('philip', 1, 1)
2020-05-20 15:59:57,999 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:57,999 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:58,003 INFO sqlalchemy.engine.base.Engine Thread-225 : ROLLBACK
2020-05-20 15:59:59,846 INFO sqlalchemy.engine.base.Engine Thread-234 : BEGIN (implicit)
2020-05-20 15:59:59,847 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 15:59:59,847 INFO sqlalchemy.engine.base.Engine Thread-234 : (1, 1)
2020-05-20 15:59:59,848 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:59,848 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:59,851 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:59:59,851 INFO sqlalchemy.engine.base.Engine Thread-234 : ('philip', 1, 1)
2020-05-20 15:59:59,852 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:59,852 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:59,853 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 15:59:59,854 INFO sqlalchemy.engine.base.Engine Thread-234 : ('117', 1)
2020-05-20 15:59:59,854 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:59:59,854 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 15:59:59,857 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 15:59:59,857 INFO sqlalchemy.engine.base.Engine Thread-234 : (0,)
2020-05-20 15:59:59,858 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:59:59,858 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 15:59:59,858 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 15:59:59,858 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 15:59:59,858 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 15:59:59,858 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 15:59:59,859 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 15:59:59,859 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 15:59:59,859 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 15:59:59,859 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 15:59:59,859 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 15:59:59,859 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 15:59:59,859 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 15:59:59,859 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 15:59:59,859 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 15:59:59,859 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 15:59:59,859 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 15:59:59,860 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 15:59:59,860 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 15:59:59,860 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 15:59:59,860 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 15:59:59,860 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 15:59:59,860 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 15:59:59,862 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-20 15:59:59,862 INFO sqlalchemy.engine.base.Engine Thread-234 : (0,)
2020-05-20 15:59:59,863 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 15:59:59,863 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-20 15:59:59,863 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-20 15:59:59,863 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 15:59:59,863 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-20 15:59:59,863 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 15:59:59,863 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 15:59:59,864 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 15:59:59,864 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-20 15:59:59,864 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 15:59:59,864 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-20 15:59:59,864 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-20 15:59:59,864 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-20 15:59:59,864 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 15:59:59,864 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-20 15:59:59,864 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 15:59:59,864 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 15:59:59,864 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 15:59:59,865 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-20 15:59:59,865 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-20 15:59:59,865 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 15:59:59,865 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-20 15:59:59,865 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-20 15:59:59,865 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-20 15:59:59,865 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-20 15:59:59,865 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-20 15:59:59,865 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-20 15:59:59,865 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-20 15:59:59,865 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-20 15:59:59,865 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-20 15:59:59,866 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-20 15:59:59,866 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-20 15:59:59,866 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-20 15:59:59,866 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-20 15:59:59,866 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-20 15:59:59,866 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-20 15:59:59,866 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-20 15:59:59,866 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-20 15:59:59,866 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-20 15:59:59,866 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-20 15:59:59,866 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-20 15:59:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-20 15:59:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-20 15:59:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-20 15:59:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-20 15:59:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 15:59:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 15:59:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-20 15:59:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 15:59:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 15:59:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-20 15:59:59,867 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 15:59:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-20 15:59:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-20 15:59:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-20 15:59:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-20 15:59:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-20 15:59:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-20 15:59:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 15:59:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 15:59:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 15:59:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 15:59:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-20 15:59:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-20 15:59:59,869 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-20 15:59:59,869 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-20 15:59:59,869 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-20 15:59:59,869 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-20 15:59:59,869 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-20 15:59:59,869 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-20 15:59:59,869 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-20 15:59:59,869 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 15:59:59,869 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-20 15:59:59,869 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-20 15:59:59,869 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-20 15:59:59,870 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 15:59:59,876 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 15:59:59,876 INFO sqlalchemy.engine.base.Engine Thread-234 : ('philip', 1, 1)
2020-05-20 15:59:59,876 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 15:59:59,877 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 15:59:59,880 INFO sqlalchemy.engine.base.Engine Thread-234 : ROLLBACK
2020-05-20 16:00:10,638 INFO sqlalchemy.engine.base.Engine Thread-243 : BEGIN (implicit)
2020-05-20 16:00:10,639 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:00:10,639 INFO sqlalchemy.engine.base.Engine Thread-243 : (1, 1)
2020-05-20 16:00:10,641 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:10,641 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:10,644 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:10,644 INFO sqlalchemy.engine.base.Engine Thread-243 : ('philip', 1, 1)
2020-05-20 16:00:10,645 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:10,645 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:10,647 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 16:00:10,647 INFO sqlalchemy.engine.base.Engine Thread-243 : ('117', 1)
2020-05-20 16:00:10,647 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:10,647 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 16:00:10,650 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 16:00:10,650 INFO sqlalchemy.engine.base.Engine Thread-243 : (0,)
2020-05-20 16:00:10,651 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:10,651 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 16:00:10,651 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 16:00:10,651 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 16:00:10,651 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 16:00:10,651 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:10,652 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 16:00:10,652 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 16:00:10,652 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 16:00:10,652 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 16:00:10,652 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 16:00:10,652 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 16:00:10,652 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 16:00:10,652 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 16:00:10,652 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 16:00:10,652 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 16:00:10,652 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 16:00:10,653 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 16:00:10,653 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 16:00:10,653 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 16:00:10,653 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 16:00:10,653 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 16:00:10,653 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 16:00:10,655 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-20 16:00:10,655 INFO sqlalchemy.engine.base.Engine Thread-243 : (0,)
2020-05-20 16:00:10,656 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:10,657 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-20 16:00:10,657 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-20 16:00:10,657 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 16:00:10,657 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:10,657 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 16:00:10,657 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 0)
2020-05-20 16:00:10,657 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 16:00:10,657 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-20 16:00:10,657 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 16:00:10,657 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:10,658 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-20 16:00:10,658 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-20 16:00:10,658 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 16:00:10,658 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-20 16:00:10,658 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 16:00:10,658 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 16:00:10,658 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 16:00:10,658 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-20 16:00:10,658 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-20 16:00:10,658 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 16:00:10,658 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-20 16:00:10,659 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-20 16:00:10,659 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-20 16:00:10,659 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-20 16:00:10,659 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-20 16:00:10,659 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-20 16:00:10,659 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-20 16:00:10,659 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-20 16:00:10,659 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-20 16:00:10,659 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-20 16:00:10,659 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-20 16:00:10,659 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-20 16:00:10,659 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-20 16:00:10,660 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-20 16:00:10,660 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-20 16:00:10,660 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-20 16:00:10,660 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-20 16:00:10,660 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-20 16:00:10,660 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-20 16:00:10,660 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-20 16:00:10,660 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-20 16:00:10,660 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-20 16:00:10,660 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-20 16:00:10,660 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-20 16:00:10,660 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 16:00:10,661 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 16:00:10,661 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-20 16:00:10,661 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 16:00:10,661 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 16:00:10,661 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-20 16:00:10,661 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 16:00:10,661 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-20 16:00:10,661 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-20 16:00:10,661 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-20 16:00:10,661 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-20 16:00:10,661 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-20 16:00:10,661 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-20 16:00:10,661 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 16:00:10,662 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 16:00:10,662 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 16:00:10,662 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 16:00:10,662 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-20 16:00:10,662 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-20 16:00:10,662 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-20 16:00:10,662 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-20 16:00:10,662 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-20 16:00:10,662 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-20 16:00:10,662 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-20 16:00:10,662 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-20 16:00:10,662 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-20 16:00:10,663 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 16:00:10,663 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-20 16:00:10,663 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-20 16:00:10,663 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-20 16:00:10,663 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 16:00:10,666 INFO sqlalchemy.engine.base.Engine Thread-243 : UPDATE parameters SET id=%s, param_critical=%s WHERE parameters.id = %s
2020-05-20 16:00:10,666 INFO sqlalchemy.engine.base.Engine Thread-243 : ('117', 1, 117)
2020-05-20 16:00:10,667 INFO sqlalchemy.engine.base.Engine Thread-243 : COMMIT
2020-05-20 16:00:10,707 INFO sqlalchemy.engine.base.Engine Thread-244 : BEGIN (implicit)
2020-05-20 16:00:10,709 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:00:10,709 INFO sqlalchemy.engine.base.Engine Thread-244 : (1, 1)
2020-05-20 16:00:10,709 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:10,710 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:10,712 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:10,712 INFO sqlalchemy.engine.base.Engine Thread-244 : ('philip', 1, 1)
2020-05-20 16:00:10,713 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:10,713 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:10,715 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 16:00:10,715 INFO sqlalchemy.engine.base.Engine Thread-244 : (0,)
2020-05-20 16:00:10,716 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:10,716 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 16:00:10,716 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 16:00:10,716 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 16:00:10,716 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 16:00:10,716 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:10,716 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 16:00:10,716 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 16:00:10,716 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 16:00:10,717 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 16:00:10,717 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 16:00:10,717 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 16:00:10,717 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 16:00:10,717 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 16:00:10,717 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 16:00:10,717 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 16:00:10,717 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 16:00:10,717 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 16:00:10,717 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 16:00:10,718 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 16:00:10,718 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 16:00:10,718 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 16:00:10,718 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 16:00:10,720 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 16:00:10,720 INFO sqlalchemy.engine.base.Engine Thread-244 : (116, 1)
2020-05-20 16:00:10,720 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:10,721 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:10,722 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-20 16:00:10,722 INFO sqlalchemy.engine.base.Engine Thread-244 : (116,)
2020-05-20 16:00:10,722 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:10,723 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-20 16:00:10,723 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 16:00:10,723 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 16:00:10,727 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:10,728 INFO sqlalchemy.engine.base.Engine Thread-244 : ('philip', 1, 1)
2020-05-20 16:00:10,728 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:10,729 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:10,732 INFO sqlalchemy.engine.base.Engine Thread-244 : ROLLBACK
2020-05-20 16:00:13,118 INFO sqlalchemy.engine.base.Engine Thread-253 : BEGIN (implicit)
2020-05-20 16:00:13,119 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:00:13,119 INFO sqlalchemy.engine.base.Engine Thread-253 : (1, 1)
2020-05-20 16:00:13,120 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:13,121 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:13,123 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:13,123 INFO sqlalchemy.engine.base.Engine Thread-253 : ('philip', 1, 1)
2020-05-20 16:00:13,124 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:13,124 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:13,125 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 16:00:13,125 INFO sqlalchemy.engine.base.Engine Thread-253 : ('118', 1)
2020-05-20 16:00:13,126 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:13,126 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 16:00:13,128 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 16:00:13,128 INFO sqlalchemy.engine.base.Engine Thread-253 : (0,)
2020-05-20 16:00:13,129 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:13,129 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 16:00:13,129 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 16:00:13,130 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 16:00:13,130 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 16:00:13,130 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:13,130 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 16:00:13,130 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 16:00:13,130 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 16:00:13,130 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 16:00:13,130 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 16:00:13,130 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 16:00:13,130 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 16:00:13,130 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 16:00:13,131 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 16:00:13,131 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 16:00:13,131 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 16:00:13,131 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 16:00:13,131 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 16:00:13,131 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 16:00:13,131 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 16:00:13,131 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 16:00:13,131 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 16:00:13,133 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-20 16:00:13,133 INFO sqlalchemy.engine.base.Engine Thread-253 : (0,)
2020-05-20 16:00:13,134 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:13,134 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-20 16:00:13,134 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-20 16:00:13,134 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 16:00:13,135 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:13,135 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 16:00:13,135 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-20 16:00:13,135 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 16:00:13,135 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-20 16:00:13,135 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 16:00:13,135 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:13,135 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-20 16:00:13,135 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-20 16:00:13,135 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 16:00:13,135 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-20 16:00:13,136 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 16:00:13,136 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 16:00:13,136 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 16:00:13,136 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-20 16:00:13,136 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-20 16:00:13,136 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 16:00:13,136 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-20 16:00:13,136 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-20 16:00:13,136 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-20 16:00:13,136 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-20 16:00:13,136 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-20 16:00:13,136 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-20 16:00:13,137 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-20 16:00:13,137 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-20 16:00:13,137 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-20 16:00:13,137 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-20 16:00:13,137 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-20 16:00:13,137 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-20 16:00:13,137 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-20 16:00:13,137 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-20 16:00:13,137 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-20 16:00:13,137 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-20 16:00:13,137 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-20 16:00:13,138 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-20 16:00:13,138 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-20 16:00:13,138 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-20 16:00:13,138 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-20 16:00:13,138 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-20 16:00:13,138 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-20 16:00:13,138 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-20 16:00:13,138 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 16:00:13,138 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 16:00:13,138 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-20 16:00:13,138 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 16:00:13,139 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 16:00:13,139 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-20 16:00:13,139 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 16:00:13,139 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-20 16:00:13,139 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-20 16:00:13,139 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-20 16:00:13,139 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-20 16:00:13,139 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-20 16:00:13,139 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-20 16:00:13,139 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 16:00:13,139 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 16:00:13,139 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 16:00:13,140 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 16:00:13,140 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-20 16:00:13,140 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-20 16:00:13,140 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-20 16:00:13,140 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-20 16:00:13,140 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-20 16:00:13,140 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-20 16:00:13,140 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-20 16:00:13,140 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-20 16:00:13,140 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-20 16:00:13,140 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 16:00:13,141 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-20 16:00:13,141 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-20 16:00:13,141 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-20 16:00:13,141 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 16:00:13,147 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:13,147 INFO sqlalchemy.engine.base.Engine Thread-253 : ('philip', 1, 1)
2020-05-20 16:00:13,147 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:13,147 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:13,151 INFO sqlalchemy.engine.base.Engine Thread-253 : ROLLBACK
2020-05-20 16:00:16,226 INFO sqlalchemy.engine.base.Engine Thread-262 : BEGIN (implicit)
2020-05-20 16:00:16,227 INFO sqlalchemy.engine.base.Engine Thread-262 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:00:16,227 INFO sqlalchemy.engine.base.Engine Thread-262 : (1, 1)
2020-05-20 16:00:16,228 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:16,228 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:16,231 INFO sqlalchemy.engine.base.Engine Thread-262 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:16,231 INFO sqlalchemy.engine.base.Engine Thread-262 : ('philip', 1, 1)
2020-05-20 16:00:16,232 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:16,232 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:16,233 INFO sqlalchemy.engine.base.Engine Thread-262 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 16:00:16,233 INFO sqlalchemy.engine.base.Engine Thread-262 : ('118', 1)
2020-05-20 16:00:16,234 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:16,234 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 16:00:16,237 INFO sqlalchemy.engine.base.Engine Thread-262 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 16:00:16,237 INFO sqlalchemy.engine.base.Engine Thread-262 : (0,)
2020-05-20 16:00:16,238 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:16,238 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 16:00:16,238 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 16:00:16,238 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 16:00:16,238 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 16:00:16,238 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:16,238 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 16:00:16,238 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 16:00:16,238 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 16:00:16,239 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 16:00:16,239 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 16:00:16,239 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 16:00:16,239 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 16:00:16,239 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 16:00:16,239 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 16:00:16,239 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 16:00:16,239 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 16:00:16,239 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 16:00:16,239 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 16:00:16,239 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 16:00:16,240 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 16:00:16,240 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 16:00:16,240 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 16:00:16,242 INFO sqlalchemy.engine.base.Engine Thread-262 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-20 16:00:16,242 INFO sqlalchemy.engine.base.Engine Thread-262 : (0,)
2020-05-20 16:00:16,243 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:16,243 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-20 16:00:16,243 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-20 16:00:16,244 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 16:00:16,244 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:16,244 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 16:00:16,244 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-20 16:00:16,244 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 16:00:16,244 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-20 16:00:16,244 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 16:00:16,244 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:16,244 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-20 16:00:16,244 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-20 16:00:16,244 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 0)
2020-05-20 16:00:16,245 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-20 16:00:16,245 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 16:00:16,245 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 16:00:16,245 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 16:00:16,245 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-20 16:00:16,245 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-20 16:00:16,245 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 16:00:16,245 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-20 16:00:16,245 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-20 16:00:16,245 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-20 16:00:16,245 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-20 16:00:16,246 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-20 16:00:16,246 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-20 16:00:16,246 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-20 16:00:16,246 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-20 16:00:16,246 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-20 16:00:16,246 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-20 16:00:16,246 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-20 16:00:16,246 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-20 16:00:16,246 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-20 16:00:16,246 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-20 16:00:16,246 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-20 16:00:16,247 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-20 16:00:16,247 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-20 16:00:16,247 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-20 16:00:16,247 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-20 16:00:16,247 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-20 16:00:16,247 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-20 16:00:16,247 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-20 16:00:16,247 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-20 16:00:16,247 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-20 16:00:16,247 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 16:00:16,247 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 16:00:16,248 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-20 16:00:16,248 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 16:00:16,248 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 16:00:16,248 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-20 16:00:16,248 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 16:00:16,248 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-20 16:00:16,248 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-20 16:00:16,248 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-20 16:00:16,248 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-20 16:00:16,248 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-20 16:00:16,248 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-20 16:00:16,249 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 16:00:16,249 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 16:00:16,249 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 16:00:16,249 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 16:00:16,249 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-20 16:00:16,249 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-20 16:00:16,249 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-20 16:00:16,249 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-20 16:00:16,249 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-20 16:00:16,249 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-20 16:00:16,249 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-20 16:00:16,250 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-20 16:00:16,250 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-20 16:00:16,250 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 16:00:16,250 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-20 16:00:16,250 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-20 16:00:16,250 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-20 16:00:16,250 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 16:00:16,253 INFO sqlalchemy.engine.base.Engine Thread-262 : UPDATE parameters SET id=%s, param_critical=%s WHERE parameters.id = %s
2020-05-20 16:00:16,253 INFO sqlalchemy.engine.base.Engine Thread-262 : ('118', 1, 118)
2020-05-20 16:00:16,254 INFO sqlalchemy.engine.base.Engine Thread-262 : COMMIT
2020-05-20 16:00:16,289 INFO sqlalchemy.engine.base.Engine Thread-263 : BEGIN (implicit)
2020-05-20 16:00:16,290 INFO sqlalchemy.engine.base.Engine Thread-263 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:00:16,290 INFO sqlalchemy.engine.base.Engine Thread-263 : (1, 1)
2020-05-20 16:00:16,290 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:16,291 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:16,293 INFO sqlalchemy.engine.base.Engine Thread-263 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:16,293 INFO sqlalchemy.engine.base.Engine Thread-263 : ('philip', 1, 1)
2020-05-20 16:00:16,294 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:16,294 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:16,296 INFO sqlalchemy.engine.base.Engine Thread-263 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 16:00:16,296 INFO sqlalchemy.engine.base.Engine Thread-263 : (0,)
2020-05-20 16:00:16,297 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:16,297 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 16:00:16,297 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 16:00:16,297 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 16:00:16,297 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 16:00:16,297 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:16,297 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 16:00:16,298 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 16:00:16,298 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 16:00:16,298 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 16:00:16,298 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 16:00:16,298 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 16:00:16,298 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 16:00:16,298 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 16:00:16,298 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 16:00:16,298 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 16:00:16,298 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 16:00:16,298 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 16:00:16,299 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 16:00:16,299 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 16:00:16,299 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 16:00:16,299 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 16:00:16,299 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 16:00:16,301 INFO sqlalchemy.engine.base.Engine Thread-263 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 16:00:16,301 INFO sqlalchemy.engine.base.Engine Thread-263 : (116, 1)
2020-05-20 16:00:16,302 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:16,302 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:16,303 INFO sqlalchemy.engine.base.Engine Thread-263 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-20 16:00:16,303 INFO sqlalchemy.engine.base.Engine Thread-263 : (116,)
2020-05-20 16:00:16,304 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:16,304 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-20 16:00:16,304 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-20 16:00:16,304 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 16:00:16,309 INFO sqlalchemy.engine.base.Engine Thread-263 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:16,309 INFO sqlalchemy.engine.base.Engine Thread-263 : ('philip', 1, 1)
2020-05-20 16:00:16,309 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:16,310 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:16,313 INFO sqlalchemy.engine.base.Engine Thread-263 : ROLLBACK
2020-05-20 16:00:17,658 INFO sqlalchemy.engine.base.Engine Thread-272 : BEGIN (implicit)
2020-05-20 16:00:17,659 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:00:17,659 INFO sqlalchemy.engine.base.Engine Thread-272 : (1, 1)
2020-05-20 16:00:17,660 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:17,660 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:17,663 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:17,663 INFO sqlalchemy.engine.base.Engine Thread-272 : ('philip', 1, 1)
2020-05-20 16:00:17,664 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:17,664 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:17,666 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 16:00:17,666 INFO sqlalchemy.engine.base.Engine Thread-272 : ('119', 1)
2020-05-20 16:00:17,667 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:17,667 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 16:00:17,669 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 16:00:17,669 INFO sqlalchemy.engine.base.Engine Thread-272 : (0,)
2020-05-20 16:00:17,670 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:17,670 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 16:00:17,670 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 16:00:17,670 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 16:00:17,670 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 16:00:17,671 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:17,671 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 16:00:17,671 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 16:00:17,671 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 16:00:17,671 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 16:00:17,671 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 16:00:17,671 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 16:00:17,671 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 16:00:17,671 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 16:00:17,672 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 16:00:17,672 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 16:00:17,672 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 16:00:17,672 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 16:00:17,672 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 16:00:17,672 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 16:00:17,672 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 16:00:17,672 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 16:00:17,672 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 16:00:17,674 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-20 16:00:17,674 INFO sqlalchemy.engine.base.Engine Thread-272 : (0,)
2020-05-20 16:00:17,675 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:17,675 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-20 16:00:17,675 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-20 16:00:17,676 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 16:00:17,676 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:17,676 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 16:00:17,676 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-20 16:00:17,676 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 16:00:17,676 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-20 16:00:17,676 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 16:00:17,676 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:17,677 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-20 16:00:17,677 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-20 16:00:17,677 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-20 16:00:17,677 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-20 16:00:17,677 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 16:00:17,677 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 16:00:17,677 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 16:00:17,677 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-20 16:00:17,677 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-20 16:00:17,678 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 16:00:17,678 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-20 16:00:17,678 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-20 16:00:17,678 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-20 16:00:17,678 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-20 16:00:17,678 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-20 16:00:17,678 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-20 16:00:17,678 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-20 16:00:17,678 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-20 16:00:17,678 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-20 16:00:17,678 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-20 16:00:17,679 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-20 16:00:17,679 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-20 16:00:17,679 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-20 16:00:17,679 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-20 16:00:17,679 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-20 16:00:17,679 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-20 16:00:17,679 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-20 16:00:17,679 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-20 16:00:17,679 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-20 16:00:17,680 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-20 16:00:17,680 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-20 16:00:17,680 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-20 16:00:17,680 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-20 16:00:17,680 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-20 16:00:17,680 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 16:00:17,680 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 16:00:17,680 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-20 16:00:17,680 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 16:00:17,680 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 16:00:17,681 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-20 16:00:17,681 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 16:00:17,681 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-20 16:00:17,681 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-20 16:00:17,681 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-20 16:00:17,681 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-20 16:00:17,681 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-20 16:00:17,681 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-20 16:00:17,681 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 16:00:17,682 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 16:00:17,682 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 16:00:17,682 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 16:00:17,682 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-20 16:00:17,682 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-20 16:00:17,682 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-20 16:00:17,682 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-20 16:00:17,682 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-20 16:00:17,682 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-20 16:00:17,682 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-20 16:00:17,683 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-20 16:00:17,683 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-20 16:00:17,683 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 16:00:17,683 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-20 16:00:17,683 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-20 16:00:17,683 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-20 16:00:17,683 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 16:00:17,691 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:17,691 INFO sqlalchemy.engine.base.Engine Thread-272 : ('philip', 1, 1)
2020-05-20 16:00:17,691 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:17,692 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:17,695 INFO sqlalchemy.engine.base.Engine Thread-272 : ROLLBACK
2020-05-20 16:00:19,891 INFO sqlalchemy.engine.base.Engine Thread-281 : BEGIN (implicit)
2020-05-20 16:00:19,892 INFO sqlalchemy.engine.base.Engine Thread-281 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:00:19,892 INFO sqlalchemy.engine.base.Engine Thread-281 : (1, 1)
2020-05-20 16:00:19,893 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:19,893 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:19,895 INFO sqlalchemy.engine.base.Engine Thread-281 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:19,896 INFO sqlalchemy.engine.base.Engine Thread-281 : ('philip', 1, 1)
2020-05-20 16:00:19,896 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:19,896 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:19,898 INFO sqlalchemy.engine.base.Engine Thread-281 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 16:00:19,898 INFO sqlalchemy.engine.base.Engine Thread-281 : ('119', 1)
2020-05-20 16:00:19,898 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:19,898 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 16:00:19,901 INFO sqlalchemy.engine.base.Engine Thread-281 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 16:00:19,901 INFO sqlalchemy.engine.base.Engine Thread-281 : (0,)
2020-05-20 16:00:19,902 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:19,902 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 16:00:19,902 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 16:00:19,902 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 16:00:19,902 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 16:00:19,903 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:19,903 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 16:00:19,903 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 16:00:19,903 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 16:00:19,903 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 16:00:19,903 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 16:00:19,903 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 16:00:19,903 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 16:00:19,903 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 16:00:19,903 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 16:00:19,903 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 16:00:19,904 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 16:00:19,904 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 16:00:19,904 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 16:00:19,904 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 16:00:19,904 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 16:00:19,904 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 16:00:19,904 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 16:00:19,906 INFO sqlalchemy.engine.base.Engine Thread-281 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-20 16:00:19,906 INFO sqlalchemy.engine.base.Engine Thread-281 : (0,)
2020-05-20 16:00:19,907 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:19,907 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-20 16:00:19,908 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-20 16:00:19,908 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 16:00:19,908 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:19,908 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 16:00:19,908 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-20 16:00:19,908 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 16:00:19,908 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-20 16:00:19,908 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 16:00:19,908 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:19,908 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-20 16:00:19,909 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-20 16:00:19,909 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-20 16:00:19,909 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-20 16:00:19,909 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 0)
2020-05-20 16:00:19,909 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 16:00:19,909 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 16:00:19,909 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-20 16:00:19,909 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-20 16:00:19,909 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 16:00:19,909 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-20 16:00:19,909 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-20 16:00:19,910 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-20 16:00:19,910 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-20 16:00:19,910 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-20 16:00:19,910 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-20 16:00:19,910 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-20 16:00:19,910 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-20 16:00:19,910 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-20 16:00:19,910 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-20 16:00:19,910 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-20 16:00:19,910 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-20 16:00:19,910 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-20 16:00:19,910 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-20 16:00:19,911 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-20 16:00:19,911 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-20 16:00:19,911 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-20 16:00:19,911 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-20 16:00:19,911 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-20 16:00:19,911 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-20 16:00:19,911 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-20 16:00:19,911 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-20 16:00:19,911 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-20 16:00:19,911 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-20 16:00:19,911 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 16:00:19,912 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 16:00:19,912 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-20 16:00:19,912 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 16:00:19,912 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 16:00:19,912 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-20 16:00:19,912 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 16:00:19,912 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-20 16:00:19,912 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-20 16:00:19,912 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-20 16:00:19,912 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-20 16:00:19,913 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-20 16:00:19,913 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-20 16:00:19,913 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 16:00:19,913 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 16:00:19,913 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 16:00:19,913 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 16:00:19,913 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-20 16:00:19,913 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-20 16:00:19,913 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-20 16:00:19,913 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-20 16:00:19,913 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-20 16:00:19,913 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-20 16:00:19,914 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-20 16:00:19,914 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-20 16:00:19,914 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-20 16:00:19,914 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 16:00:19,914 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-20 16:00:19,914 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-20 16:00:19,914 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-20 16:00:19,914 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 16:00:19,917 INFO sqlalchemy.engine.base.Engine Thread-281 : UPDATE parameters SET id=%s, param_critical=%s WHERE parameters.id = %s
2020-05-20 16:00:19,917 INFO sqlalchemy.engine.base.Engine Thread-281 : ('119', 1, 119)
2020-05-20 16:00:19,918 INFO sqlalchemy.engine.base.Engine Thread-281 : COMMIT
2020-05-20 16:00:19,962 INFO sqlalchemy.engine.base.Engine Thread-282 : BEGIN (implicit)
2020-05-20 16:00:19,963 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:00:19,963 INFO sqlalchemy.engine.base.Engine Thread-282 : (1, 1)
2020-05-20 16:00:19,964 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:19,964 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:19,966 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:19,967 INFO sqlalchemy.engine.base.Engine Thread-282 : ('philip', 1, 1)
2020-05-20 16:00:19,967 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:19,967 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:19,969 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 16:00:19,969 INFO sqlalchemy.engine.base.Engine Thread-282 : (0,)
2020-05-20 16:00:19,970 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:19,970 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 16:00:19,970 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 16:00:19,970 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 16:00:19,970 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 16:00:19,970 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 16:00:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 16:00:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 16:00:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 16:00:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 16:00:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 16:00:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 16:00:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 16:00:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 16:00:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 16:00:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 16:00:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 16:00:19,972 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 16:00:19,972 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 16:00:19,972 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 16:00:19,972 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 16:00:19,972 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 16:00:19,974 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 16:00:19,974 INFO sqlalchemy.engine.base.Engine Thread-282 : (116, 1)
2020-05-20 16:00:19,974 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:19,975 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:19,976 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-20 16:00:19,976 INFO sqlalchemy.engine.base.Engine Thread-282 : (116,)
2020-05-20 16:00:19,976 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:19,976 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-20 16:00:19,977 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-20 16:00:19,977 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-20 16:00:19,981 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:19,981 INFO sqlalchemy.engine.base.Engine Thread-282 : ('philip', 1, 1)
2020-05-20 16:00:19,981 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:19,982 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:19,985 INFO sqlalchemy.engine.base.Engine Thread-282 : ROLLBACK
2020-05-20 16:00:21,220 INFO sqlalchemy.engine.base.Engine Thread-291 : BEGIN (implicit)
2020-05-20 16:00:21,221 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:00:21,221 INFO sqlalchemy.engine.base.Engine Thread-291 : (1, 1)
2020-05-20 16:00:21,221 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:21,222 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:21,224 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:21,224 INFO sqlalchemy.engine.base.Engine Thread-291 : ('philip', 1, 1)
2020-05-20 16:00:21,225 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:21,226 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:21,227 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 16:00:21,227 INFO sqlalchemy.engine.base.Engine Thread-291 : ('117', 1)
2020-05-20 16:00:21,228 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:21,228 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-20 16:00:21,230 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 16:00:21,230 INFO sqlalchemy.engine.base.Engine Thread-291 : (0,)
2020-05-20 16:00:21,231 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:21,231 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 16:00:21,232 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 16:00:21,232 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 16:00:21,232 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 16:00:21,232 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:21,232 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 16:00:21,232 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 16:00:21,232 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 16:00:21,232 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 16:00:21,232 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 16:00:21,232 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 16:00:21,232 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 16:00:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 16:00:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 16:00:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 16:00:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 16:00:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 16:00:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 16:00:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 16:00:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 16:00:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 16:00:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 16:00:21,235 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-20 16:00:21,235 INFO sqlalchemy.engine.base.Engine Thread-291 : (0,)
2020-05-20 16:00:21,236 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:21,236 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-20 16:00:21,236 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-20 16:00:21,236 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 16:00:21,236 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:21,236 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 16:00:21,236 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-20 16:00:21,237 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 16:00:21,237 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-20 16:00:21,237 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 16:00:21,237 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:21,237 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-20 16:00:21,237 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-20 16:00:21,237 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-20 16:00:21,237 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-20 16:00:21,237 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-20 16:00:21,237 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 16:00:21,237 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 16:00:21,238 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-20 16:00:21,238 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-20 16:00:21,238 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 16:00:21,238 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-20 16:00:21,238 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-20 16:00:21,238 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-20 16:00:21,238 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-20 16:00:21,238 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-20 16:00:21,238 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-20 16:00:21,239 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-20 16:00:21,239 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-20 16:00:21,239 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-20 16:00:21,239 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-20 16:00:21,239 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-20 16:00:21,239 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-20 16:00:21,239 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-20 16:00:21,239 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-20 16:00:21,239 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-20 16:00:21,239 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-20 16:00:21,239 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-20 16:00:21,240 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-20 16:00:21,240 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-20 16:00:21,240 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-20 16:00:21,240 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-20 16:00:21,240 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-20 16:00:21,240 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-20 16:00:21,240 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-20 16:00:21,240 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 16:00:21,240 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 16:00:21,240 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-20 16:00:21,241 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 16:00:21,241 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 16:00:21,241 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-20 16:00:21,241 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 16:00:21,241 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-20 16:00:21,241 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-20 16:00:21,241 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-20 16:00:21,241 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-20 16:00:21,241 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-20 16:00:21,241 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-20 16:00:21,242 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 16:00:21,242 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 16:00:21,242 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 16:00:21,242 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 16:00:21,242 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-20 16:00:21,242 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-20 16:00:21,242 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-20 16:00:21,242 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-20 16:00:21,242 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-20 16:00:21,242 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-20 16:00:21,243 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-20 16:00:21,243 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-20 16:00:21,243 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-20 16:00:21,243 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 16:00:21,243 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-20 16:00:21,243 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-20 16:00:21,243 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-20 16:00:21,243 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 16:00:21,250 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:21,250 INFO sqlalchemy.engine.base.Engine Thread-291 : ('philip', 1, 1)
2020-05-20 16:00:21,251 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:21,251 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:21,255 INFO sqlalchemy.engine.base.Engine Thread-291 : ROLLBACK
2020-05-20 16:00:32,733 INFO sqlalchemy.engine.base.Engine Thread-300 : BEGIN (implicit)
2020-05-20 16:00:32,734 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:00:32,734 INFO sqlalchemy.engine.base.Engine Thread-300 : (1, 1)
2020-05-20 16:00:32,735 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:32,735 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:32,737 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:32,737 INFO sqlalchemy.engine.base.Engine Thread-300 : ('philip', 1, 1)
2020-05-20 16:00:32,738 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:32,738 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:32,740 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 16:00:32,740 INFO sqlalchemy.engine.base.Engine Thread-300 : (0,)
2020-05-20 16:00:32,740 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:32,740 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 16:00:32,741 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 16:00:32,741 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 16:00:32,741 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 16:00:32,741 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:32,741 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 16:00:32,741 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 16:00:32,741 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 16:00:32,741 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 16:00:32,741 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 16:00:32,741 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 16:00:32,741 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 16:00:32,742 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 16:00:32,742 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 16:00:32,742 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 16:00:32,742 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 16:00:32,742 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 16:00:32,742 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 16:00:32,742 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 16:00:32,742 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 16:00:32,742 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 16:00:32,742 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 16:00:32,744 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 16:00:32,745 INFO sqlalchemy.engine.base.Engine Thread-300 : (116, 1)
2020-05-20 16:00:32,745 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:32,745 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:32,746 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-20 16:00:32,746 INFO sqlalchemy.engine.base.Engine Thread-300 : (116,)
2020-05-20 16:00:32,747 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:32,747 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-20 16:00:32,747 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-20 16:00:32,747 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-20 16:00:32,751 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:32,752 INFO sqlalchemy.engine.base.Engine Thread-300 : ('philip', 1, 1)
2020-05-20 16:00:32,752 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:32,753 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:32,756 INFO sqlalchemy.engine.base.Engine Thread-300 : ROLLBACK
2020-05-20 16:00:36,740 INFO sqlalchemy.engine.base.Engine Thread-309 : BEGIN (implicit)
2020-05-20 16:00:36,741 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:00:36,741 INFO sqlalchemy.engine.base.Engine Thread-309 : (1, 1)
2020-05-20 16:00:36,742 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:36,742 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:36,744 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:36,744 INFO sqlalchemy.engine.base.Engine Thread-309 : ('philip', 1, 1)
2020-05-20 16:00:36,745 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:36,745 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:36,747 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 16:00:36,747 INFO sqlalchemy.engine.base.Engine Thread-309 : (0,)
2020-05-20 16:00:36,748 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:36,748 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 16:00:36,748 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 16:00:36,748 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 16:00:36,748 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 16:00:36,748 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:36,748 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 16:00:36,749 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 16:00:36,749 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 16:00:36,749 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 16:00:36,749 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 16:00:36,749 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 16:00:36,749 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 16:00:36,749 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 16:00:36,749 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 16:00:36,749 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 16:00:36,749 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 16:00:36,750 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 16:00:36,750 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 16:00:36,750 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 16:00:36,750 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 16:00:36,750 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 16:00:36,750 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 16:00:36,752 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-20 16:00:36,752 INFO sqlalchemy.engine.base.Engine Thread-309 : ('122',)
2020-05-20 16:00:36,753 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:36,753 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 16:00:36,758 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:36,758 INFO sqlalchemy.engine.base.Engine Thread-309 : ('philip', 1, 1)
2020-05-20 16:00:36,759 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:36,759 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:36,762 INFO sqlalchemy.engine.base.Engine Thread-309 : ROLLBACK
2020-05-20 16:00:39,264 INFO sqlalchemy.engine.base.Engine Thread-318 : BEGIN (implicit)
2020-05-20 16:00:39,265 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:00:39,265 INFO sqlalchemy.engine.base.Engine Thread-318 : (1, 1)
2020-05-20 16:00:39,266 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:39,266 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:39,269 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:39,269 INFO sqlalchemy.engine.base.Engine Thread-318 : ('philip', 1, 1)
2020-05-20 16:00:39,270 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:39,270 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:39,272 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-20 16:00:39,272 INFO sqlalchemy.engine.base.Engine Thread-318 : ('123', 1)
2020-05-20 16:00:39,272 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:39,272 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 16:00:39,275 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 16:00:39,275 INFO sqlalchemy.engine.base.Engine Thread-318 : (0,)
2020-05-20 16:00:39,276 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:39,276 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-20 16:00:39,276 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-20 16:00:39,276 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-20 16:00:39,276 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-20 16:00:39,276 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-20 16:00:39,276 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-20 16:00:39,276 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-20 16:00:39,276 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-20 16:00:39,277 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-20 16:00:39,277 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-20 16:00:39,277 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-20 16:00:39,277 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-20 16:00:39,277 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-20 16:00:39,277 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-20 16:00:39,277 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-20 16:00:39,277 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-20 16:00:39,277 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-20 16:00:39,277 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-20 16:00:39,277 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-20 16:00:39,278 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-20 16:00:39,278 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-20 16:00:39,278 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-20 16:00:39,279 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-20 16:00:39,280 INFO sqlalchemy.engine.base.Engine Thread-318 : (0,)
2020-05-20 16:00:39,280 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:00:39,281 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-20 16:00:39,281 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-20 16:00:39,281 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-20 16:00:39,281 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:39,281 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 16:00:39,281 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-20 16:00:39,281 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-20 16:00:39,281 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-20 16:00:39,281 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-20 16:00:39,281 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-20 16:00:39,281 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-20 16:00:39,281 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-20 16:00:39,282 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-20 16:00:39,283 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-20 16:00:39,283 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-20 16:00:39,283 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-20 16:00:39,283 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-20 16:00:39,283 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-20 16:00:39,283 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-20 16:00:39,283 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-20 16:00:39,283 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-20 16:00:39,283 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-20 16:00:39,283 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-20 16:00:39,283 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-20 16:00:39,283 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-20 16:00:39,283 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-20 16:00:39,284 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-20 16:00:39,284 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-20 16:00:39,284 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-20 16:00:39,284 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-20 16:00:39,284 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-20 16:00:39,284 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 16:00:39,284 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-20 16:00:39,284 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-20 16:00:39,284 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-20 16:00:39,284 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 16:00:39,284 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-20 16:00:39,284 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 16:00:39,285 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-20 16:00:39,285 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-20 16:00:39,285 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-20 16:00:39,285 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-20 16:00:39,285 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-20 16:00:39,285 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-20 16:00:39,285 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 16:00:39,285 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-20 16:00:39,285 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 16:00:39,285 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-20 16:00:39,285 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-20 16:00:39,286 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-20 16:00:39,286 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-20 16:00:39,286 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-20 16:00:39,286 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-20 16:00:39,286 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-20 16:00:39,286 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-20 16:00:39,286 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-20 16:00:39,286 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-20 16:00:39,286 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 16:00:39,286 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-20 16:00:39,286 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-20 16:00:39,286 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-20 16:00:39,287 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 16:00:39,292 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:00:39,293 INFO sqlalchemy.engine.base.Engine Thread-318 : ('philip', 1, 1)
2020-05-20 16:00:39,293 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:00:39,294 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:00:39,297 INFO sqlalchemy.engine.base.Engine Thread-318 : ROLLBACK
2020-05-20 16:01:51,508 INFO sqlalchemy.engine.base.Engine Thread-327 : BEGIN (implicit)
2020-05-20 16:01:51,509 INFO sqlalchemy.engine.base.Engine Thread-327 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:01:51,509 INFO sqlalchemy.engine.base.Engine Thread-327 : (1, 1)
2020-05-20 16:01:51,511 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:01:51,511 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:01:51,513 INFO sqlalchemy.engine.base.Engine Thread-327 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:01:51,513 INFO sqlalchemy.engine.base.Engine Thread-327 : ('philip', 1, 1)
2020-05-20 16:01:51,514 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:01:51,514 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:01:51,517 INFO sqlalchemy.engine.base.Engine Thread-327 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 16:01:51,517 INFO sqlalchemy.engine.base.Engine Thread-327 : (116,)
2020-05-20 16:01:51,517 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:01:51,518 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-20 16:01:51,518 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-20 16:01:51,518 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-20 16:01:51,519 INFO sqlalchemy.engine.base.Engine Thread-327 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_name LIKE %s 
 LIMIT %s
2020-05-20 16:01:51,519 INFO sqlalchemy.engine.base.Engine Thread-327 : ('OPERATIONS_EMAILS', 1)
2020-05-20 16:01:51,519 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:01:51,520 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-20 16:01:51,521 INFO sqlalchemy.engine.base.Engine Thread-327 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_parent = %s 
 LIMIT %s
2020-05-20 16:01:51,521 INFO sqlalchemy.engine.base.Engine Thread-327 : ('117', 1)
2020-05-20 16:01:51,521 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 16:01:51,521 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-20 16:01:51,525 INFO sqlalchemy.engine.base.Engine Thread-327 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 16:01:51,525 INFO sqlalchemy.engine.base.Engine Thread-327 : ('philip', 1, 1)
2020-05-20 16:01:51,526 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:01:51,527 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:01:51,528 INFO sqlalchemy.engine.base.Engine Thread-327 : ROLLBACK
2020-05-20 16:01:52,191 INFO sqlalchemy.engine.base.Engine Thread-338 : BEGIN (implicit)
2020-05-20 16:01:52,194 INFO sqlalchemy.engine.base.Engine Thread-336 : BEGIN (implicit)
2020-05-20 16:01:52,195 INFO sqlalchemy.engine.base.Engine Thread-338 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:01:52,202 INFO sqlalchemy.engine.base.Engine Thread-338 : (1, 1)
2020-05-20 16:01:52,200 INFO sqlalchemy.engine.base.Engine Thread-336 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:01:52,203 INFO sqlalchemy.engine.base.Engine Thread-336 : (1, 1)
2020-05-20 16:01:52,197 INFO sqlalchemy.engine.base.Engine Thread-337 : BEGIN (implicit)
2020-05-20 16:01:52,202 INFO sqlalchemy.engine.base.Engine Thread-339 : BEGIN (implicit)
2020-05-20 16:01:52,204 INFO sqlalchemy.engine.base.Engine Thread-337 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:01:52,204 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:01:52,206 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:01:52,205 DEBUG sqlalchemy.engine.base.Engine Thread-338 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:01:52,208 DEBUG sqlalchemy.engine.base.Engine Thread-338 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:01:52,209 INFO sqlalchemy.engine.base.Engine Thread-338 : ROLLBACK
2020-05-20 16:01:52,207 INFO sqlalchemy.engine.base.Engine Thread-336 : ROLLBACK
2020-05-20 16:01:52,206 INFO sqlalchemy.engine.base.Engine Thread-337 : (1, 1)
2020-05-20 16:01:52,206 INFO sqlalchemy.engine.base.Engine Thread-339 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:01:52,210 DEBUG sqlalchemy.engine.base.Engine Thread-337 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:01:52,211 INFO sqlalchemy.engine.base.Engine Thread-339 : (1, 1)
2020-05-20 16:01:52,212 DEBUG sqlalchemy.engine.base.Engine Thread-337 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:01:52,213 INFO sqlalchemy.engine.base.Engine Thread-337 : ROLLBACK
2020-05-20 16:01:52,214 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:01:52,214 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:01:52,215 INFO sqlalchemy.engine.base.Engine Thread-339 : ROLLBACK
2020-05-20 16:01:52,241 INFO sqlalchemy.engine.base.Engine Thread-340 : BEGIN (implicit)
2020-05-20 16:01:52,242 INFO sqlalchemy.engine.base.Engine Thread-340 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 16:01:52,242 INFO sqlalchemy.engine.base.Engine Thread-340 : (1, 1)
2020-05-20 16:01:52,243 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 16:01:52,243 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 16:01:52,244 INFO sqlalchemy.engine.base.Engine Thread-340 : ROLLBACK
2020-05-20 19:00:49,742 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-20 19:00:49,742 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 19:00:49,743 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-05-20 19:00:49,744 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-05-20 19:00:49,745 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-20 19:00:49,745 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 19:00:49,745 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-05-20 19:00:49,745 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-05-20 19:00:49,746 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-05-20 19:00:49,746 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 19:00:49,746 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-05-20 19:00:49,746 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-05-20 19:00:49,747 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-20 19:00:49,747 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 19:00:49,748 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-20 19:00:49,748 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-20 19:00:49,749 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-20 19:00:49,749 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 19:00:49,749 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-20 19:00:49,749 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 19:00:49,750 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-20 19:00:49,750 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 19:00:49,751 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-05-20 19:00:49,754 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:00:49,754 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-05-20 19:00:49,755 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:49,755 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:49,758 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 19:00:49,759 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-05-20 19:00:49,759 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:49,760 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:49,770 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-20 19:00:49,770 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-20 19:00:49,771 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-20 19:00:49,772 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (18, 'Test Feb', 'GBR,IND', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'High', 'Yes', 'Yes')
2020-05-20 19:00:49,772 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-20 19:00:49,772 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-20 19:00:49,772 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-20 19:00:49,772 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-20 19:00:49,772 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-20 19:00:49,772 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-20 19:00:49,773 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-20 19:00:49,773 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-05-20 19:00:49,773 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-20 19:00:49,846 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 19:00:49,846 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-05-20 19:00:49,847 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:49,847 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:49,849 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-05-20 19:00:50,123 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-05-20 19:00:50,125 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:00:50,131 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-05-20 19:00:50,135 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:50,135 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:50,136 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-05-20 19:00:50,137 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-05-20 19:00:50,137 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-05-20 19:00:50,137 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-05-20 19:00:50,138 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:00:50,140 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:00:50,146 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-05-20 19:00:50,144 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-05-20 19:00:50,147 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:50,148 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:50,142 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:00:50,149 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:50,149 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-05-20 19:00:50,150 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-05-20 19:00:50,151 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:50,151 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:50,153 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-05-20 19:00:50,154 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:50,156 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-05-20 19:00:50,168 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-05-20 19:00:50,169 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:00:50,169 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-05-20 19:00:50,170 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:50,170 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:50,172 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-05-20 19:00:54,158 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-05-20 19:00:54,159 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:00:54,159 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-05-20 19:00:54,160 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:54,160 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:54,162 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 19:00:54,162 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-05-20 19:00:54,163 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:54,163 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:54,165 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-20 19:00:54,166 INFO sqlalchemy.engine.base.Engine Thread-17 : ('0', 1)
2020-05-20 19:00:54,166 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-05-20 19:00:54,169 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 19:00:54,170 INFO sqlalchemy.engine.base.Engine Thread-17 : (82,)
2020-05-20 19:00:54,170 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 19:00:54,170 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 19:00:54,170 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 19:00:54,170 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 19:00:54,172 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-20 19:00:54,172 INFO sqlalchemy.engine.base.Engine Thread-17 : (1,)
2020-05-20 19:00:54,172 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 19:00:54,172 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 19:00:54,173 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 19:00:54,174 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 19:00:54,174 INFO sqlalchemy.engine.base.Engine Thread-17 : (105,)
2020-05-20 19:00:54,174 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 19:00:54,174 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 19:00:54,174 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 19:00:54,176 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 19:00:54,176 INFO sqlalchemy.engine.base.Engine Thread-17 : (105,)
2020-05-20 19:00:54,176 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 19:00:54,176 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 19:00:54,177 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 19:00:54,208 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 19:00:54,209 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-05-20 19:00:54,209 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:54,210 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:54,212 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-05-20 19:00:54,456 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-05-20 19:00:54,457 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:00:54,457 INFO sqlalchemy.engine.base.Engine Thread-26 : (1, 1)
2020-05-20 19:00:54,458 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:54,459 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:54,461 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-05-20 19:00:54,462 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:00:54,462 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-05-20 19:00:54,463 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-05-20 19:00:54,465 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:54,465 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:54,466 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-05-20 19:00:54,469 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-05-20 19:00:54,471 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:00:54,471 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-05-20 19:00:54,472 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:54,474 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-05-20 19:00:54,474 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:54,475 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:00:54,476 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-05-20 19:00:54,477 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-05-20 19:00:54,478 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:54,478 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:54,479 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-05-20 19:00:54,491 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-05-20 19:00:54,492 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:00:54,492 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-05-20 19:00:54,493 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:00:54,493 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:00:54,494 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-05-20 19:01:47,076 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-05-20 19:01:47,077 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:01:47,077 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-05-20 19:01:47,079 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:01:47,080 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:01:47,082 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 19:01:47,082 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-05-20 19:01:47,083 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:01:47,083 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:01:47,084 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-20 19:01:47,085 INFO sqlalchemy.engine.base.Engine Thread-31 : ('0', 1)
2020-05-20 19:01:47,085 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-05-20 19:01:47,087 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 19:01:47,088 INFO sqlalchemy.engine.base.Engine Thread-31 : (82,)
2020-05-20 19:01:47,088 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 19:01:47,088 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-20 19:01:47,088 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-20 19:01:47,088 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-20 19:01:47,090 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-20 19:01:47,090 INFO sqlalchemy.engine.base.Engine Thread-31 : (1,)
2020-05-20 19:01:47,090 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 19:01:47,091 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-20 19:01:47,091 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-20 19:01:47,092 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 19:01:47,092 INFO sqlalchemy.engine.base.Engine Thread-31 : (105,)
2020-05-20 19:01:47,093 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 19:01:47,093 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 19:01:47,093 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 19:01:47,094 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-20 19:01:47,094 INFO sqlalchemy.engine.base.Engine Thread-31 : (105,)
2020-05-20 19:01:47,095 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-20 19:01:47,095 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-20 19:01:47,095 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-20 19:01:47,129 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-20 19:01:47,129 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-05-20 19:01:47,130 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:01:47,130 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:01:47,132 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-05-20 19:01:47,415 INFO sqlalchemy.engine.base.Engine Thread-40 : BEGIN (implicit)
2020-05-20 19:01:47,416 INFO sqlalchemy.engine.base.Engine Thread-41 : BEGIN (implicit)
2020-05-20 19:01:47,417 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:01:47,419 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:01:47,422 INFO sqlalchemy.engine.base.Engine Thread-41 : (1, 1)
2020-05-20 19:01:47,419 INFO sqlalchemy.engine.base.Engine Thread-40 : (1, 1)
2020-05-20 19:01:47,421 INFO sqlalchemy.engine.base.Engine Thread-42 : BEGIN (implicit)
2020-05-20 19:01:47,423 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:01:47,423 INFO sqlalchemy.engine.base.Engine Thread-42 : (1, 1)
2020-05-20 19:01:47,426 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-05-20 19:01:47,427 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:01:47,427 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:01:47,429 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:01:47,428 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:01:47,430 INFO sqlalchemy.engine.base.Engine Thread-43 : (1, 1)
2020-05-20 19:01:47,429 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:01:47,430 INFO sqlalchemy.engine.base.Engine Thread-41 : ROLLBACK
2020-05-20 19:01:47,431 INFO sqlalchemy.engine.base.Engine Thread-40 : ROLLBACK
2020-05-20 19:01:47,427 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:01:47,432 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:01:47,432 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:01:47,433 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:01:47,435 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-05-20 19:01:47,436 INFO sqlalchemy.engine.base.Engine Thread-42 : ROLLBACK
2020-05-20 19:01:47,450 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-05-20 19:01:47,451 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-20 19:01:47,451 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-05-20 19:01:47,452 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-20 19:01:47,452 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-20 19:01:47,453 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
