2020-05-27 08:54:03,934 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-05-27 08:54:03,936 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 08:54:03,936 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-05-27 08:54:03,937 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 08:54:03,938 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 08:54:03,940 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 08:54:03,940 INFO sqlalchemy.engine.base.Engine Thread-74 : ('philip', 1, 1)
2020-05-27 08:54:03,941 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 08:54:03,941 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 08:54:03,950 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 08:54:03,950 INFO sqlalchemy.engine.base.Engine Thread-74 : ()
2020-05-27 08:54:03,951 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 08:54:03,951 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 08:54:03,951 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 08:54:03,951 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 08:54:03,951 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 08:54:03,952 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 08:54:03,952 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'No')
2020-05-27 08:54:03,952 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 08:54:03,952 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 08:54:03,952 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 08:54:03,952 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 08:54:03,956 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 08:54:03,956 INFO sqlalchemy.engine.base.Engine Thread-74 : ('philip', 1, 1)
2020-05-27 08:54:03,957 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 08:54:03,957 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 08:54:03,960 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-05-27 09:14:05,402 INFO sqlalchemy.engine.base.Engine Thread-100 : BEGIN (implicit)
2020-05-27 09:14:05,404 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 09:14:05,404 INFO sqlalchemy.engine.base.Engine Thread-100 : (1, 1)
2020-05-27 09:14:05,406 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 09:14:05,406 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 09:14:05,409 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 09:14:05,409 INFO sqlalchemy.engine.base.Engine Thread-100 : ('philip', 1, 1)
2020-05-27 09:14:05,410 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 09:14:05,411 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 09:14:05,412 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 09:14:05,412 INFO sqlalchemy.engine.base.Engine Thread-100 : ('12', 1)
2020-05-27 09:14:05,413 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 09:14:05,413 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 130, '1', 106)
2020-05-27 09:14:05,417 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 09:14:05,417 INFO sqlalchemy.engine.base.Engine Thread-100 : (82,)
2020-05-27 09:14:05,417 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 09:14:05,418 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 09:14:05,418 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 09:14:05,418 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 09:14:05,420 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 09:14:05,420 INFO sqlalchemy.engine.base.Engine Thread-100 : (1,)
2020-05-27 09:14:05,421 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 09:14:05,421 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 09:14:05,421 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 09:14:05,423 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 09:14:05,423 INFO sqlalchemy.engine.base.Engine Thread-100 : ()
2020-05-27 09:14:05,423 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 09:14:05,424 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 09:14:05,424 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 09:14:05,425 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 09:14:05,426 INFO sqlalchemy.engine.base.Engine Thread-100 : (127,)
2020-05-27 09:14:05,426 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 09:14:05,426 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 09:14:05,426 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 09:14:05,426 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 09:14:05,427 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 09:14:05,428 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 09:14:05,428 INFO sqlalchemy.engine.base.Engine Thread-100 : (105,)
2020-05-27 09:14:05,428 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 09:14:05,428 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 09:14:05,429 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 09:14:05,433 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 09:14:05,433 INFO sqlalchemy.engine.base.Engine Thread-100 : ('philip', 1, 1)
2020-05-27 09:14:05,434 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 09:14:05,434 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 09:14:05,437 INFO sqlalchemy.engine.base.Engine Thread-100 : ROLLBACK
2020-05-27 09:14:11,434 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-05-27 09:14:11,440 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 09:14:11,440 INFO sqlalchemy.engine.base.Engine Thread-110 : ()
2020-05-27 09:14:11,441 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 09:14:11,442 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 09:14:11,442 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 09:14:11,443 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 09:14:11,443 INFO sqlalchemy.engine.base.Engine Thread-110 : (100,)
2020-05-27 09:14:11,444 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 09:14:11,444 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 09:14:11,444 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 09:14:11,445 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 09:14:11,445 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 09:14:11,445 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 09:14:11,446 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 09:14:11,447 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-05-27 09:14:11,447 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 09:14:11,447 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 09:14:11,461 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 09:14:11,461 INFO sqlalchemy.engine.base.Engine Thread-110 : ('philip', 1, 1)
2020-05-27 09:14:11,462 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 09:14:11,462 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 09:14:11,464 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-05-27 09:38:47,867 INFO sqlalchemy.engine.base.Engine Thread-125 : BEGIN (implicit)
2020-05-27 09:38:47,869 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 09:38:47,869 INFO sqlalchemy.engine.base.Engine Thread-125 : ('philip', 1, 1)
2020-05-27 09:38:47,872 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 09:38:47,873 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 09:38:47,874 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 09:38:47,874 INFO sqlalchemy.engine.base.Engine Thread-125 : ('0',)
2020-05-27 09:38:47,875 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value')
2020-05-27 09:38:47,875 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'Locations', 'Locations')
2020-05-27 09:38:47,875 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (2, 'Firewall Managers', 'Firewall Managers')
2020-05-27 09:38:47,875 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (3, 'Hours', 'Hours')
2020-05-27 09:38:47,875 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (4, 'Minutes', 'Minutes')
2020-05-27 09:38:47,876 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (63, 'Vendors', 'Vendors')
2020-05-27 09:38:47,876 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (66, 'Active Options', 'Active Options')
2020-05-27 09:38:47,876 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (71, 'Search Categories', 'Search Categories')
2020-05-27 09:38:47,876 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (75, 'Log File Options', 'Log File Options')
2020-05-27 09:38:47,876 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (78, 'Log Entries', 'Log Entries')
2020-05-27 09:38:47,876 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (82, 'Priority', 'Priority')
2020-05-27 09:38:47,876 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (89, 'Firewall Type', 'Firewall Type')
2020-05-27 09:38:47,876 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (92, 'Environments', 'Environments')
2020-05-27 09:38:47,876 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (97, 'Cluster Type', 'Cluster Type')
2020-05-27 09:38:47,876 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (100, 'Complex Type', 'Complex Type/Vendor')
2020-05-27 09:38:47,876 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list')
2020-05-27 09:38:47,877 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ')
2020-05-27 09:38:47,877 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (113, 'Help Content', 'Covers the usage of the system')
2020-05-27 09:38:47,877 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (116, 'Communication Parameters', 'Communication Parameters')
2020-05-27 09:38:47,877 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (120, 'Email Groups', 'Email Groups')
2020-05-27 09:38:47,877 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (122, 'Communication Email Content', 'Communication Email Content')
2020-05-27 09:38:47,877 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change')
2020-05-27 09:38:47,877 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$')
2020-05-27 09:38:47,877 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (127, 'Event Types', 'Event Types')
2020-05-27 09:38:47,879 INFO sqlalchemy.engine.base.Engine Thread-125 : ROLLBACK
2020-05-27 09:39:06,118 INFO sqlalchemy.engine.base.Engine Thread-126 : BEGIN (implicit)
2020-05-27 09:39:06,120 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 09:39:06,120 INFO sqlalchemy.engine.base.Engine Thread-126 : ('philip', 1, 1)
2020-05-27 09:39:06,121 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 09:39:06,121 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 09:39:06,122 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 09:39:06,122 INFO sqlalchemy.engine.base.Engine Thread-126 : (127,)
2020-05-27 09:39:06,123 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value')
2020-05-27 09:39:06,123 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (128, 'Informational', 'Informational')
2020-05-27 09:39:06,123 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)')
2020-05-27 09:39:06,123 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (130, 'No Changes Allowed', 'No Changes Allowed')
2020-05-27 09:39:06,123 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change')
2020-05-27 09:39:06,124 INFO sqlalchemy.engine.base.Engine Thread-126 : ROLLBACK
2020-05-27 09:42:55,032 INFO sqlalchemy.engine.base.Engine Thread-127 : BEGIN (implicit)
2020-05-27 09:42:55,034 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 09:42:55,034 INFO sqlalchemy.engine.base.Engine Thread-127 : (1, 1)
2020-05-27 09:42:55,036 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 09:42:55,037 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 09:42:55,058 INFO sqlalchemy.engine.base.Engine Thread-127 : ROLLBACK
2020-05-27 09:43:09,654 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-05-27 09:43:09,655 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 09:43:09,655 INFO sqlalchemy.engine.base.Engine Thread-133 : ('philip', 1, 1)
2020-05-27 09:43:09,656 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 09:43:09,657 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 09:43:09,658 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest
2020-05-27 09:43:09,658 INFO sqlalchemy.engine.base.Engine Thread-133 : ()
2020-05-27 09:43:09,659 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 09:43:09,659 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical) that is very important', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, None, 106)
2020-05-27 09:43:09,659 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, None, 106)
2020-05-27 09:43:09,659 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, None, 106)
2020-05-27 09:43:09,659 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, None, 106)
2020-05-27 09:43:09,659 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, None, 106)
2020-05-27 09:43:09,660 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 130, '1', 106)
2020-05-27 09:43:09,660 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, '1,2', 106)
2020-05-27 09:43:09,660 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 107, None, 106)
2020-05-27 09:43:09,660 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'GBR,IND', 107, '1,2', 107)
2020-05-27 09:43:09,660 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (19, 'Change Freeze RED', 83, '', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'GBR,IND', 106, None, 106)
2020-05-27 09:43:09,662 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-05-27 09:44:00,406 INFO sqlalchemy.engine.base.Engine Thread-135 : BEGIN (implicit)
2020-05-27 09:44:00,407 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 09:44:00,407 INFO sqlalchemy.engine.base.Engine Thread-135 : (1, 1)
2020-05-27 09:44:00,408 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 09:44:00,408 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 09:44:00,420 INFO sqlalchemy.engine.base.Engine Thread-135 : ROLLBACK
2020-05-27 14:36:36,608 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 14:36:36,608 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:36:36,609 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 14:36:36,610 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-27 14:36:36,610 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 14:36:36,610 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:36:36,611 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 14:36:36,611 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-27 14:36:36,612 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-27 14:36:36,612 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:36:36,612 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-27 14:36:36,612 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-27 14:36:36,612 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 14:36:36,612 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:36:36,613 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 14:36:36,613 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 14:36:36,614 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 14:36:36,614 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:36:36,615 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 14:36:36,615 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:36:36,615 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 14:36:36,616 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:36:36,616 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-27 14:36:36,619 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:36:36,619 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-05-27 14:36:36,620 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:36:36,620 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:36:36,647 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-27 14:36:58,713 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-05-27 14:36:58,714 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:36:58,714 INFO sqlalchemy.engine.base.Engine Thread-5 : ('philip', 1, 1)
2020-05-27 14:36:58,715 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:36:58,715 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:36:58,718 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-05-27 14:36:58,718 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-05-27 14:36:58,719 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-05-27 14:36:58,719 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@test.com', 'Administrator User Access', 'Main-Organisation')
2020-05-27 14:36:58,719 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@test.co.uk', 'Standard User Access', 'Vendor-name1')
2020-05-27 14:36:58,720 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Administrator User Access', 'Vendor-name2')
2020-05-27 14:36:58,720 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (4, 'Evan', 'Troon', 'Account for Evan Troon', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-05-27 14:36:58,720 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST12399', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-05-27 14:36:58,720 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (8, 'Philip', 'Troon', 'Test account', 'philiptroon@test.com', 'New User (No Login)', 'Vendor-name2')
2020-05-27 14:36:58,720 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (10, 'Frank', 'Black', 'me', 'frank@somewhere.com', 'New User (No Login)', 'Main-Organisation')
2020-05-27 14:36:58,720 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (12, 'abc', 'def', 'test', 'philiptroon@test.com', 'Standard User Access', 'Main-Organisation')
2020-05-27 14:36:58,721 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-05-27 14:37:16,382 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-05-27 14:37:16,383 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:37:16,384 INFO sqlalchemy.engine.base.Engine Thread-6 : ('philip', 1, 1)
2020-05-27 14:37:16,384 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:37:16,385 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:37:16,388 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-05-27 14:37:16,388 INFO sqlalchemy.engine.base.Engine Thread-6 : (12,)
2020-05-27 14:37:16,389 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by')
2020-05-27 14:37:16,389 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (12, 'abc', 'abc', 'def', 'test', 'philiptroon@test.com', 'Standard User Access', 'Main-Organisation', 1, datetime.datetime(2020, 2, 19, 21, 18, 10), None, datetime.datetime(2020, 2, 19, 21, 18, 10), 'philip')
2020-05-27 14:37:16,390 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-05-27 14:37:52,020 INFO sqlalchemy.engine.base.Engine Thread-7 : BEGIN (implicit)
2020-05-27 14:37:52,027 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 14:37:52,028 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-05-27 14:37:52,031 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 14:37:52,031 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:37:52,031 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 14:37:52,034 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:37:52,034 INFO sqlalchemy.engine.base.Engine Thread-7 : (100,)
2020-05-27 14:37:52,035 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:37:52,035 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 14:37:52,035 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 14:37:52,036 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 14:37:52,036 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 14:37:52,036 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 14:37:52,038 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:37:52,038 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-05-27 14:37:52,039 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:37:52,039 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:37:52,112 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:37:52,112 INFO sqlalchemy.engine.base.Engine Thread-7 : ('philip', 1, 1)
2020-05-27 14:37:52,113 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:37:52,113 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:37:52,115 INFO sqlalchemy.engine.base.Engine Thread-7 : ROLLBACK
2020-05-27 14:38:51,924 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-05-27 14:38:51,925 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:38:51,926 INFO sqlalchemy.engine.base.Engine Thread-20 : (1, 1)
2020-05-27 14:38:51,927 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:38:51,927 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:38:51,939 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-05-27 14:39:02,768 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-05-27 14:39:02,769 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:39:02,770 INFO sqlalchemy.engine.base.Engine Thread-22 : (1, 1)
2020-05-27 14:39:02,770 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:39:02,771 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:39:02,772 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-05-27 14:39:26,602 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-05-27 14:39:26,603 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:39:26,603 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-05-27 14:39:26,604 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:39:26,604 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:39:26,606 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-05-27 14:39:40,032 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-05-27 14:39:40,034 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:39:40,034 INFO sqlalchemy.engine.base.Engine Thread-26 : (1, 1)
2020-05-27 14:39:40,035 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:39:40,035 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:39:40,036 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-05-27 14:39:57,911 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-05-27 14:39:57,912 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:39:57,912 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-05-27 14:39:57,913 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:39:57,913 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:39:57,914 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-05-27 14:40:18,455 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-05-27 14:40:18,456 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:40:18,456 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-05-27 14:40:18,457 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:40:18,458 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:40:18,459 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-05-27 14:40:37,913 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-05-27 14:40:37,914 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:40:37,914 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-05-27 14:40:37,915 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:40:37,915 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:40:37,916 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-05-27 14:40:49,589 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-05-27 14:40:49,590 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:40:49,591 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-05-27 14:40:49,591 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:40:49,591 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:40:49,593 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-05-27 14:41:21,964 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 14:41:21,965 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:41:21,966 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 14:41:21,967 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-27 14:41:21,967 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 14:41:21,967 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:41:21,968 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 14:41:21,968 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-27 14:41:21,969 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-27 14:41:21,969 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:41:21,969 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-27 14:41:21,969 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-27 14:41:21,969 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 14:41:21,969 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:41:21,970 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 14:41:21,970 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 14:41:21,971 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 14:41:21,971 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:41:21,972 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 14:41:21,972 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:41:21,973 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 14:41:21,973 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 14:41:21,973 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-27 14:41:21,976 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 14:41:21,976 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'YES')
2020-05-27 14:41:21,977 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:41:21,978 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 14:41:21,978 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 14:41:21,978 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 14:41:21,978 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 14:41:21,981 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 14:41:21,982 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 14:41:21,982 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:41:21,983 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 14:41:21,983 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 14:41:21,983 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 14:41:21,983 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 14:41:21,983 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 14:41:21,988 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 14:41:21,988 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 14:41:21,989 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:41:21,990 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 14:41:21,990 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 14:41:21,990 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 14:41:21,990 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 14:41:21,990 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 14:41:21,990 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 14:41:21,990 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 14:41:21,994 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 14:41:21,994 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 14:41:21,995 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:41:21,995 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 14:41:21,995 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 14:41:21,995 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 14:41:21,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 14:41:21,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 14:41:21,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 14:41:21,998 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-27 14:41:22,074 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-05-27 14:41:22,079 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:41:22,079 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-05-27 14:41:22,079 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:41:22,080 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:41:22,097 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-05-27 14:41:28,752 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-05-27 14:41:28,758 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 14:41:28,758 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-05-27 14:41:28,760 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 14:41:28,760 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:41:28,760 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 14:41:28,763 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:41:28,763 INFO sqlalchemy.engine.base.Engine Thread-4 : (100,)
2020-05-27 14:41:28,763 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:41:28,764 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 14:41:28,764 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 14:41:28,764 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 14:41:28,764 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 14:41:28,764 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 14:41:28,766 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:41:28,766 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-05-27 14:41:28,767 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:41:28,767 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:41:28,839 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:41:28,839 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-05-27 14:41:28,839 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:41:28,840 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:41:28,841 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-05-27 14:41:29,134 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-05-27 14:41:29,136 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 14:41:29,136 INFO sqlalchemy.engine.base.Engine Thread-14 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-27 14:41:29,137 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:41:29,137 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 14:41:29,137 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 14:41:29,140 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 14:41:29,140 INFO sqlalchemy.engine.base.Engine Thread-14 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 14:41:29,141 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:41:29,141 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 14:41:29,145 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 14:41:29,145 INFO sqlalchemy.engine.base.Engine Thread-14 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 14:41:29,146 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:41:29,150 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 14:41:29,150 INFO sqlalchemy.engine.base.Engine Thread-14 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 14:41:29,151 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:41:29,151 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 14:41:29,152 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-05-27 14:41:29,176 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-05-27 14:41:29,180 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 14:41:29,180 INFO sqlalchemy.engine.base.Engine Thread-15 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-27 14:41:29,181 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:41:29,182 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 14:41:29,182 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 14:41:29,185 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 14:41:29,185 INFO sqlalchemy.engine.base.Engine Thread-15 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 14:41:29,186 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:41:29,187 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 14:41:29,191 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 14:41:29,192 INFO sqlalchemy.engine.base.Engine Thread-15 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 14:41:29,193 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:41:29,199 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 14:41:29,199 INFO sqlalchemy.engine.base.Engine Thread-15 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 14:41:29,199 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:41:29,200 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 14:41:29,200 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-05-27 14:41:52,399 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-05-27 14:41:52,401 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:41:52,401 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-05-27 14:41:52,402 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:41:52,402 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:41:52,411 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-27 14:41:52,412 INFO sqlalchemy.engine.base.Engine Thread-17 : (108,)
2020-05-27 14:41:52,412 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-27 14:41:52,413 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-27 14:41:52,413 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-05-27 14:41:55,196 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-05-27 14:41:55,197 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:41:55,197 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-05-27 14:41:55,198 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:41:55,198 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:41:55,207 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-27 14:41:55,207 INFO sqlalchemy.engine.base.Engine Thread-18 : (101,)
2020-05-27 14:41:55,208 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-27 14:41:55,208 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-27 14:41:55,209 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-05-27 14:41:57,096 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-05-27 14:41:57,098 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:41:57,098 INFO sqlalchemy.engine.base.Engine Thread-19 : ('philip', 1, 1)
2020-05-27 14:41:57,099 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:41:57,099 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:41:57,108 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id 
WHERE parameters_2.id = %s
2020-05-27 14:41:57,108 INFO sqlalchemy.engine.base.Engine Thread-19 : (104,)
2020-05-27 14:41:57,109 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-27 14:41:57,109 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-05-27 14:41:58,542 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-05-27 14:41:58,544 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:41:58,544 INFO sqlalchemy.engine.base.Engine Thread-20 : ('philip', 1, 1)
2020-05-27 14:41:58,545 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:41:58,545 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:41:58,554 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS vendor, parameters_2.id AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-05-27 14:41:58,554 INFO sqlalchemy.engine.base.Engine Thread-20 : ()
2020-05-27 14:41:58,555 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'vendor', 'complex_type', 'complex_country', 'complex_active')
2020-05-27 14:41:58,555 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'Made Up CheckPoint', 'YYYYYYY', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 108, 'IND', 'Active')
2020-05-27 14:41:58,555 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (2, 'Made Up Fortigate', 'YYYYYYY', '02:00', '04:00', 'Fortigate FortiManager', 'Fortigate', 101, 'GBR', 'Active')
2020-05-27 14:41:58,556 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-05-27 14:44:14,075 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-05-27 14:44:14,077 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:44:14,077 INFO sqlalchemy.engine.base.Engine Thread-21 : (1, 1)
2020-05-27 14:44:14,078 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:14,079 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:14,081 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:44:14,081 INFO sqlalchemy.engine.base.Engine Thread-21 : ('philip', 1, 1)
2020-05-27 14:44:14,082 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:14,082 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:14,089 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM complexgroups, parameters AS parameters_1, parameters AS parameters_2 
WHERE complexgroups.bau_only = parameters_1.id AND complexgroups.group_active = parameters_2.id
2020-05-27 14:44:14,089 INFO sqlalchemy.engine.base.Engine Thread-21 : ()
2020-05-27 14:44:14,090 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-05-27 14:44:14,091 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67, 106, 'Yes', '1', 105, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 14:44:14,091 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67, 106, 'Yes', '1', 105, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 14:44:14,107 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:44:14,107 INFO sqlalchemy.engine.base.Engine Thread-21 : ('philip', 1, 1)
2020-05-27 14:44:14,108 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:14,108 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:14,110 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-05-27 14:44:15,706 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-05-27 14:44:15,708 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:44:15,708 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-05-27 14:44:15,709 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:15,709 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:15,711 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:44:15,711 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-05-27 14:44:15,712 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:15,712 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:15,714 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups 
WHERE complexgroups.id = %s 
 LIMIT %s
2020-05-27 14:44:15,714 INFO sqlalchemy.engine.base.Engine Thread-31 : ('2', 1)
2020-05-27 14:44:15,715 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 14:44:15,715 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 14:44:15,719 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name ASC
2020-05-27 14:44:15,719 INFO sqlalchemy.engine.base.Engine Thread-31 : ()
2020-05-27 14:44:15,720 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 14:44:15,721 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:44:15,721 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 14:44:15,722 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 14:44:15,722 INFO sqlalchemy.engine.base.Engine Thread-31 : (66,)
2020-05-27 14:44:15,723 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:44:15,723 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 14:44:15,723 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 14:44:15,725 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:44:15,725 INFO sqlalchemy.engine.base.Engine Thread-31 : (105,)
2020-05-27 14:44:15,725 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:44:15,726 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 14:44:15,726 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 14:44:15,752 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:44:15,752 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-05-27 14:44:15,753 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:15,753 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:15,756 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-05-27 14:44:20,527 INFO sqlalchemy.engine.base.Engine Thread-41 : BEGIN (implicit)
2020-05-27 14:44:20,529 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:44:20,529 INFO sqlalchemy.engine.base.Engine Thread-41 : (1, 1)
2020-05-27 14:44:20,529 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:20,530 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:20,532 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:44:20,532 INFO sqlalchemy.engine.base.Engine Thread-41 : ('philip', 1, 1)
2020-05-27 14:44:20,533 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:20,533 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:20,538 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM complexgroups, parameters AS parameters_1, parameters AS parameters_2 
WHERE complexgroups.bau_only = parameters_1.id AND complexgroups.group_active = parameters_2.id
2020-05-27 14:44:20,538 INFO sqlalchemy.engine.base.Engine Thread-41 : ()
2020-05-27 14:44:20,539 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-05-27 14:44:20,539 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67, 106, 'Yes', '1', 105, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 14:44:20,539 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67, 106, 'Yes', '1', 105, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 14:44:20,543 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:44:20,543 INFO sqlalchemy.engine.base.Engine Thread-41 : ('philip', 1, 1)
2020-05-27 14:44:20,544 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:20,544 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:20,546 INFO sqlalchemy.engine.base.Engine Thread-41 : ROLLBACK
2020-05-27 14:44:22,243 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-05-27 14:44:22,244 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:44:22,244 INFO sqlalchemy.engine.base.Engine Thread-51 : (1, 1)
2020-05-27 14:44:22,245 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:22,245 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:22,248 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:44:22,248 INFO sqlalchemy.engine.base.Engine Thread-51 : ('philip', 1, 1)
2020-05-27 14:44:22,249 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:22,250 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:22,251 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups 
WHERE complexgroups.id = %s 
 LIMIT %s
2020-05-27 14:44:22,251 INFO sqlalchemy.engine.base.Engine Thread-51 : ('2', 1)
2020-05-27 14:44:22,251 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 14:44:22,252 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 14:44:22,256 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name ASC
2020-05-27 14:44:22,256 INFO sqlalchemy.engine.base.Engine Thread-51 : ()
2020-05-27 14:44:22,257 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 14:44:22,257 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:44:22,257 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 14:44:22,258 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 14:44:22,259 INFO sqlalchemy.engine.base.Engine Thread-51 : (66,)
2020-05-27 14:44:22,259 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:44:22,259 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 14:44:22,259 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 14:44:22,261 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:44:22,261 INFO sqlalchemy.engine.base.Engine Thread-51 : (105,)
2020-05-27 14:44:22,261 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:44:22,261 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 14:44:22,262 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 14:44:22,266 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:44:22,266 INFO sqlalchemy.engine.base.Engine Thread-51 : ('philip', 1, 1)
2020-05-27 14:44:22,266 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:22,267 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:22,269 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-05-27 14:44:42,682 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-05-27 14:44:42,684 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:44:42,684 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-05-27 14:44:42,685 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:42,685 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:42,688 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:44:42,688 INFO sqlalchemy.engine.base.Engine Thread-61 : ('philip', 1, 1)
2020-05-27 14:44:42,689 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:42,689 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:42,694 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical 
FROM complexgroups, parameters AS parameters_1, parameters AS parameters_2 
WHERE complexgroups.bau_only = parameters_1.id AND complexgroups.group_active = parameters_2.id
2020-05-27 14:44:42,694 INFO sqlalchemy.engine.base.Engine Thread-61 : ()
2020-05-27 14:44:42,695 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical')
2020-05-27 14:44:42,696 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67, 106, 'Yes', '1', 105, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 14:44:42,696 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67, 106, 'Yes', '1', 105, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 14:44:42,700 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:44:42,700 INFO sqlalchemy.engine.base.Engine Thread-61 : ('philip', 1, 1)
2020-05-27 14:44:42,700 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:44:42,701 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:44:42,702 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-05-27 14:45:16,822 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-05-27 14:45:16,823 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:45:16,823 INFO sqlalchemy.engine.base.Engine Thread-71 : (1, 1)
2020-05-27 14:45:16,824 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:45:16,825 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:45:16,827 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:45:16,827 INFO sqlalchemy.engine.base.Engine Thread-71 : ('philip', 1, 1)
2020-05-27 14:45:16,828 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:45:16,828 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:45:16,830 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:45:16,830 INFO sqlalchemy.engine.base.Engine Thread-71 : (0,)
2020-05-27 14:45:16,831 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:45:16,831 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 14:45:16,831 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 14:45:16,831 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 14:45:16,831 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 14:45:16,831 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 14:45:16,831 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 14:45:16,831 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 14:45:16,832 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 14:45:16,832 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 14:45:16,832 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 14:45:16,832 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 14:45:16,832 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 14:45:16,832 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 14:45:16,832 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 14:45:16,832 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 14:45:16,832 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 14:45:16,832 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 14:45:16,832 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 14:45:16,832 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 14:45:16,832 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 14:45:16,833 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 14:45:16,833 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 14:45:16,833 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 14:45:16,837 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-05-27 14:45:16,837 INFO sqlalchemy.engine.base.Engine Thread-71 : (0, 1)
2020-05-27 14:45:16,837 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:45:16,838 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 14:45:16,839 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 14:45:16,839 INFO sqlalchemy.engine.base.Engine Thread-71 : (66,)
2020-05-27 14:45:16,839 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:45:16,840 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 14:45:16,840 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 14:45:16,858 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:45:16,859 INFO sqlalchemy.engine.base.Engine Thread-71 : ('philip', 1, 1)
2020-05-27 14:45:16,859 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:45:16,860 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:45:16,863 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-05-27 14:45:28,505 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-05-27 14:45:28,506 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:45:28,506 INFO sqlalchemy.engine.base.Engine Thread-81 : (1, 1)
2020-05-27 14:45:28,507 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:45:28,507 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:45:28,510 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:45:28,510 INFO sqlalchemy.engine.base.Engine Thread-81 : ('philip', 1, 1)
2020-05-27 14:45:28,511 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:45:28,511 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:45:28,546 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:45:28,546 INFO sqlalchemy.engine.base.Engine Thread-81 : ('philip', 1, 1)
2020-05-27 14:45:28,547 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:45:28,547 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:45:28,550 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.id ASC
2020-05-27 14:45:28,550 INFO sqlalchemy.engine.base.Engine Thread-81 : ()
2020-05-27 14:45:28,551 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-05-27 14:45:28,551 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-05-27 14:45:28,551 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-05-27 14:45:28,551 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (6, 'New User (No Login)', 0, '', datetime.datetime(2020, 2, 4, 12, 44, 31), 1)
2020-05-27 14:45:28,552 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-05-27 14:45:30,365 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-05-27 14:45:30,366 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:45:30,366 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-05-27 14:45:30,367 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:45:30,367 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:45:30,370 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:45:30,370 INFO sqlalchemy.engine.base.Engine Thread-91 : ('philip', 1, 1)
2020-05-27 14:45:30,371 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:45:30,371 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:45:30,382 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 14:45:30,382 INFO sqlalchemy.engine.base.Engine Thread-91 : ()
2020-05-27 14:45:30,383 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 14:45:30,384 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:45:30,384 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:45:30,384 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:45:30,384 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:45:30,384 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:45:30,384 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'No')
2020-05-27 14:45:30,384 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:45:30,384 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:45:30,384 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 14:45:30,384 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:45:30,403 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:45:30,403 INFO sqlalchemy.engine.base.Engine Thread-91 : ('philip', 1, 1)
2020-05-27 14:45:30,404 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:45:30,404 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:45:30,407 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-05-27 14:45:32,487 INFO sqlalchemy.engine.base.Engine Thread-101 : BEGIN (implicit)
2020-05-27 14:45:32,488 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:45:32,488 INFO sqlalchemy.engine.base.Engine Thread-101 : (1, 1)
2020-05-27 14:45:32,489 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:45:32,490 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:45:32,492 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:45:32,492 INFO sqlalchemy.engine.base.Engine Thread-101 : ('philip', 1, 1)
2020-05-27 14:45:32,493 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:45:32,493 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:45:32,496 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 14:45:32,496 INFO sqlalchemy.engine.base.Engine Thread-101 : ('12', 1)
2020-05-27 14:45:32,497 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 14:45:32,497 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 130, '1', 106)
2020-05-27 14:45:32,500 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:45:32,500 INFO sqlalchemy.engine.base.Engine Thread-101 : (82,)
2020-05-27 14:45:32,500 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:45:32,501 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 14:45:32,501 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 14:45:32,501 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 14:45:32,503 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 14:45:32,503 INFO sqlalchemy.engine.base.Engine Thread-101 : (1,)
2020-05-27 14:45:32,503 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:45:32,504 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 14:45:32,504 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 14:45:32,505 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 14:45:32,505 INFO sqlalchemy.engine.base.Engine Thread-101 : ()
2020-05-27 14:45:32,505 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 14:45:32,506 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 14:45:32,506 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 14:45:32,507 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:45:32,507 INFO sqlalchemy.engine.base.Engine Thread-101 : (127,)
2020-05-27 14:45:32,507 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:45:32,507 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 14:45:32,508 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 14:45:32,508 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 14:45:32,508 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 14:45:32,509 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:45:32,509 INFO sqlalchemy.engine.base.Engine Thread-101 : (105,)
2020-05-27 14:45:32,510 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:45:32,510 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 14:45:32,510 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 14:45:32,546 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:45:32,546 INFO sqlalchemy.engine.base.Engine Thread-101 : ('philip', 1, 1)
2020-05-27 14:45:32,547 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:45:32,547 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:45:32,550 INFO sqlalchemy.engine.base.Engine Thread-101 : ROLLBACK
2020-05-27 14:51:23,672 INFO sqlalchemy.engine.base.Engine Thread-111 : BEGIN (implicit)
2020-05-27 14:51:23,673 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:51:23,674 INFO sqlalchemy.engine.base.Engine Thread-111 : (1, 1)
2020-05-27 14:51:23,675 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:23,676 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:23,678 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:23,678 INFO sqlalchemy.engine.base.Engine Thread-111 : ('philip', 1, 1)
2020-05-27 14:51:23,679 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:23,679 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:23,689 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 14:51:23,689 INFO sqlalchemy.engine.base.Engine Thread-111 : ()
2020-05-27 14:51:23,690 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 14:51:23,690 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:23,690 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:23,690 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:23,690 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:23,690 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:23,690 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'No')
2020-05-27 14:51:23,691 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:23,691 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:23,691 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 14:51:23,691 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:23,696 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:23,696 INFO sqlalchemy.engine.base.Engine Thread-111 : ('philip', 1, 1)
2020-05-27 14:51:23,696 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:23,697 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:23,699 INFO sqlalchemy.engine.base.Engine Thread-111 : ROLLBACK
2020-05-27 14:51:25,271 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-05-27 14:51:25,272 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:51:25,272 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-05-27 14:51:25,273 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:25,273 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:25,276 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:25,276 INFO sqlalchemy.engine.base.Engine Thread-121 : ('philip', 1, 1)
2020-05-27 14:51:25,277 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:25,277 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:25,278 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 14:51:25,278 INFO sqlalchemy.engine.base.Engine Thread-121 : ('8', 1)
2020-05-27 14:51:25,279 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 14:51:25,279 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, None, 106)
2020-05-27 14:51:25,282 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:51:25,282 INFO sqlalchemy.engine.base.Engine Thread-121 : (82,)
2020-05-27 14:51:25,283 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:25,283 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 14:51:25,283 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 14:51:25,283 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 14:51:25,284 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 14:51:25,285 INFO sqlalchemy.engine.base.Engine Thread-121 : (1,)
2020-05-27 14:51:25,285 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:25,285 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 14:51:25,286 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 14:51:25,287 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 14:51:25,287 INFO sqlalchemy.engine.base.Engine Thread-121 : ()
2020-05-27 14:51:25,288 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 14:51:25,288 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 14:51:25,288 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 14:51:25,290 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:51:25,290 INFO sqlalchemy.engine.base.Engine Thread-121 : (127,)
2020-05-27 14:51:25,290 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:25,291 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 14:51:25,291 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 14:51:25,291 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 14:51:25,291 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 14:51:25,292 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:51:25,293 INFO sqlalchemy.engine.base.Engine Thread-121 : (105,)
2020-05-27 14:51:25,293 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:25,293 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 14:51:25,293 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 14:51:25,298 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:25,298 INFO sqlalchemy.engine.base.Engine Thread-121 : ('philip', 1, 1)
2020-05-27 14:51:25,299 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:25,299 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:25,302 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-05-27 14:51:28,454 INFO sqlalchemy.engine.base.Engine Thread-131 : BEGIN (implicit)
2020-05-27 14:51:28,455 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:51:28,456 INFO sqlalchemy.engine.base.Engine Thread-131 : (1, 1)
2020-05-27 14:51:28,456 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:28,457 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:28,459 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:28,459 INFO sqlalchemy.engine.base.Engine Thread-131 : ('philip', 1, 1)
2020-05-27 14:51:28,460 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:28,460 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:28,469 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 14:51:28,469 INFO sqlalchemy.engine.base.Engine Thread-131 : ()
2020-05-27 14:51:28,470 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 14:51:28,471 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:28,471 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:28,471 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:28,471 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:28,471 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:28,471 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'No')
2020-05-27 14:51:28,471 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:28,471 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:28,472 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 14:51:28,472 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:28,476 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:28,476 INFO sqlalchemy.engine.base.Engine Thread-131 : ('philip', 1, 1)
2020-05-27 14:51:28,477 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:28,477 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:28,480 INFO sqlalchemy.engine.base.Engine Thread-131 : ROLLBACK
2020-05-27 14:51:30,215 INFO sqlalchemy.engine.base.Engine Thread-141 : BEGIN (implicit)
2020-05-27 14:51:30,216 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:51:30,216 INFO sqlalchemy.engine.base.Engine Thread-141 : (1, 1)
2020-05-27 14:51:30,217 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:30,218 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:30,220 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:30,220 INFO sqlalchemy.engine.base.Engine Thread-141 : ('philip', 1, 1)
2020-05-27 14:51:30,221 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:30,221 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:30,223 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 14:51:30,223 INFO sqlalchemy.engine.base.Engine Thread-141 : ('10', 1)
2020-05-27 14:51:30,223 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 14:51:30,224 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, None, 106)
2020-05-27 14:51:30,226 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:51:30,226 INFO sqlalchemy.engine.base.Engine Thread-141 : (82,)
2020-05-27 14:51:30,227 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:30,227 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 14:51:30,227 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 14:51:30,227 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 14:51:30,228 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 14:51:30,228 INFO sqlalchemy.engine.base.Engine Thread-141 : (1,)
2020-05-27 14:51:30,229 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:30,229 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 14:51:30,229 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 14:51:30,230 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 14:51:30,230 INFO sqlalchemy.engine.base.Engine Thread-141 : ()
2020-05-27 14:51:30,231 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 14:51:30,231 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 14:51:30,231 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 14:51:30,233 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:51:30,233 INFO sqlalchemy.engine.base.Engine Thread-141 : (127,)
2020-05-27 14:51:30,233 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:30,233 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 14:51:30,233 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 14:51:30,234 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 14:51:30,234 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 14:51:30,235 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:51:30,235 INFO sqlalchemy.engine.base.Engine Thread-141 : (105,)
2020-05-27 14:51:30,235 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:30,236 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 14:51:30,236 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 14:51:30,240 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:30,240 INFO sqlalchemy.engine.base.Engine Thread-141 : ('philip', 1, 1)
2020-05-27 14:51:30,241 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:30,241 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:30,244 INFO sqlalchemy.engine.base.Engine Thread-141 : ROLLBACK
2020-05-27 14:51:44,427 INFO sqlalchemy.engine.base.Engine Thread-152 : BEGIN (implicit)
2020-05-27 14:51:44,428 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:51:44,429 INFO sqlalchemy.engine.base.Engine Thread-152 : (1, 1)
2020-05-27 14:51:44,429 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:44,430 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:44,432 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:44,432 INFO sqlalchemy.engine.base.Engine Thread-152 : ('philip', 1, 1)
2020-05-27 14:51:44,433 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:44,433 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:44,442 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 14:51:44,442 INFO sqlalchemy.engine.base.Engine Thread-152 : ()
2020-05-27 14:51:44,443 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 14:51:44,443 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:44,443 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:44,443 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:44,443 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:44,444 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:44,444 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'No')
2020-05-27 14:51:44,444 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:44,444 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:44,444 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 14:51:44,444 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:44,448 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:44,448 INFO sqlalchemy.engine.base.Engine Thread-152 : ('philip', 1, 1)
2020-05-27 14:51:44,449 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:44,449 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:44,452 INFO sqlalchemy.engine.base.Engine Thread-152 : ROLLBACK
2020-05-27 14:51:46,649 INFO sqlalchemy.engine.base.Engine Thread-162 : BEGIN (implicit)
2020-05-27 14:51:46,650 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:51:46,651 INFO sqlalchemy.engine.base.Engine Thread-162 : (1, 1)
2020-05-27 14:51:46,652 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:46,652 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:46,655 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:46,655 INFO sqlalchemy.engine.base.Engine Thread-162 : ('philip', 1, 1)
2020-05-27 14:51:46,656 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:46,656 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:46,658 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 14:51:46,658 INFO sqlalchemy.engine.base.Engine Thread-162 : ('12', 1)
2020-05-27 14:51:46,659 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 14:51:46,659 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 130, '1', 106)
2020-05-27 14:51:46,662 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:51:46,662 INFO sqlalchemy.engine.base.Engine Thread-162 : (82,)
2020-05-27 14:51:46,662 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:46,665 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 14:51:46,665 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 14:51:46,665 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 14:51:46,667 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 14:51:46,667 INFO sqlalchemy.engine.base.Engine Thread-162 : (1,)
2020-05-27 14:51:46,668 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:46,668 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 14:51:46,668 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 14:51:46,669 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 14:51:46,669 INFO sqlalchemy.engine.base.Engine Thread-162 : ()
2020-05-27 14:51:46,670 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 14:51:46,670 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 14:51:46,670 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 14:51:46,671 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:51:46,671 INFO sqlalchemy.engine.base.Engine Thread-162 : (127,)
2020-05-27 14:51:46,672 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:46,672 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 14:51:46,672 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 14:51:46,673 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 14:51:46,673 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 14:51:46,674 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:51:46,674 INFO sqlalchemy.engine.base.Engine Thread-162 : (105,)
2020-05-27 14:51:46,675 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:46,675 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 14:51:46,675 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 14:51:46,680 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:46,680 INFO sqlalchemy.engine.base.Engine Thread-162 : ('philip', 1, 1)
2020-05-27 14:51:46,680 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:46,681 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:46,684 INFO sqlalchemy.engine.base.Engine Thread-162 : ROLLBACK
2020-05-27 14:51:51,698 INFO sqlalchemy.engine.base.Engine Thread-172 : BEGIN (implicit)
2020-05-27 14:51:51,699 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:51:51,699 INFO sqlalchemy.engine.base.Engine Thread-172 : (1, 1)
2020-05-27 14:51:51,700 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:51,700 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:51,703 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:51,703 INFO sqlalchemy.engine.base.Engine Thread-172 : ('philip', 1, 1)
2020-05-27 14:51:51,703 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:51,704 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:51,712 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 14:51:51,712 INFO sqlalchemy.engine.base.Engine Thread-172 : ()
2020-05-27 14:51:51,713 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 14:51:51,713 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:51,713 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:51,713 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:51,714 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:51,714 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:51,714 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'No')
2020-05-27 14:51:51,714 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:51,714 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:51,714 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 14:51:51,714 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:51,719 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:51,719 INFO sqlalchemy.engine.base.Engine Thread-172 : ('philip', 1, 1)
2020-05-27 14:51:51,719 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:51,720 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:51,722 INFO sqlalchemy.engine.base.Engine Thread-172 : ROLLBACK
2020-05-27 14:51:55,030 INFO sqlalchemy.engine.base.Engine Thread-182 : BEGIN (implicit)
2020-05-27 14:51:55,031 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:51:55,032 INFO sqlalchemy.engine.base.Engine Thread-182 : (1, 1)
2020-05-27 14:51:55,032 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:55,033 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:55,036 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:55,036 INFO sqlalchemy.engine.base.Engine Thread-182 : ('philip', 1, 1)
2020-05-27 14:51:55,037 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:55,037 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:55,039 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 14:51:55,039 INFO sqlalchemy.engine.base.Engine Thread-182 : ('19', 1)
2020-05-27 14:51:55,039 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 14:51:55,039 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (19, 'Change Freeze RED', 83, '', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'GBR,IND', 106, None, 106)
2020-05-27 14:51:55,042 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:51:55,042 INFO sqlalchemy.engine.base.Engine Thread-182 : (82,)
2020-05-27 14:51:55,042 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:55,042 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 14:51:55,042 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 14:51:55,042 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 14:51:55,044 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 14:51:55,044 INFO sqlalchemy.engine.base.Engine Thread-182 : (1,)
2020-05-27 14:51:55,044 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:55,044 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 14:51:55,045 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 14:51:55,046 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 14:51:55,046 INFO sqlalchemy.engine.base.Engine Thread-182 : ()
2020-05-27 14:51:55,046 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 14:51:55,047 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 14:51:55,047 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 14:51:55,048 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:51:55,048 INFO sqlalchemy.engine.base.Engine Thread-182 : (127,)
2020-05-27 14:51:55,049 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:55,049 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 14:51:55,049 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 14:51:55,049 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 14:51:55,049 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 14:51:55,050 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:51:55,050 INFO sqlalchemy.engine.base.Engine Thread-182 : (105,)
2020-05-27 14:51:55,051 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:51:55,051 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 14:51:55,051 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 14:51:55,055 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:55,055 INFO sqlalchemy.engine.base.Engine Thread-182 : ('philip', 1, 1)
2020-05-27 14:51:55,056 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:55,056 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:55,059 INFO sqlalchemy.engine.base.Engine Thread-182 : ROLLBACK
2020-05-27 14:51:59,128 INFO sqlalchemy.engine.base.Engine Thread-192 : BEGIN (implicit)
2020-05-27 14:51:59,129 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:51:59,130 INFO sqlalchemy.engine.base.Engine Thread-192 : (1, 1)
2020-05-27 14:51:59,130 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:59,130 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:59,133 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:59,133 INFO sqlalchemy.engine.base.Engine Thread-192 : ('philip', 1, 1)
2020-05-27 14:51:59,134 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:59,134 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:59,143 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 14:51:59,143 INFO sqlalchemy.engine.base.Engine Thread-192 : ()
2020-05-27 14:51:59,144 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 14:51:59,144 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:59,144 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:59,144 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:59,144 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:59,144 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:59,144 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'No')
2020-05-27 14:51:59,144 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:59,144 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:51:59,145 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 14:51:59,145 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:51:59,149 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:51:59,149 INFO sqlalchemy.engine.base.Engine Thread-192 : ('philip', 1, 1)
2020-05-27 14:51:59,150 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:51:59,150 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:51:59,152 INFO sqlalchemy.engine.base.Engine Thread-192 : ROLLBACK
2020-05-27 14:52:00,663 INFO sqlalchemy.engine.base.Engine Thread-202 : BEGIN (implicit)
2020-05-27 14:52:00,664 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:52:00,664 INFO sqlalchemy.engine.base.Engine Thread-202 : (1, 1)
2020-05-27 14:52:00,664 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:00,665 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:00,671 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged, complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM bookings, complexes 
WHERE bookings.complex = complexes.id
2020-05-27 14:52:00,672 INFO sqlalchemy.engine.base.Engine Thread-202 : ()
2020-05-27 14:52:00,673 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged', 'complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 14:52:00,674 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (7, 0, 'Test Booking', datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), '123456', 'Me', '100000', 'Testing project', 'testing', 'Philip Troon', 1, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234567', '', datetime.datetime(2020, 2, 6, 12, 6, 30), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:52:00,674 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (8, 0, 'Test Booking 2', datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), '123456', 'Me', '9999999', 'Testing project 2', 'testing 2', 'Philip Troon', 1, 98, 1, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 14, 41), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:52:00,674 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (9, 0, 'Test Booking 3', datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), '123456', 'Me', '100000', 'Testing project 3', 'testing', 'Philip Troon', 2, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 6, 12, 50, 2), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 14:52:00,674 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (11, 0, 'Test Booking 6', datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), '123456', 'Me', '9999999', 'Testing project 6', 'test', 'Philip Troon', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 13), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 6, 20, 19, 11), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:52:00,675 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (12, 0, 'Test Booking zz', datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), '123456', 'Me', '100000', 'Testing project zz', 'zzz', 'Philip Troon', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 12, 16), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 0, 39, 41), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:52:00,675 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (13, 0, "Bob's test booking", datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), '123456', 'troopaq', '987654321', "Bob's test project", 'project doing something', 'bob', 1, 98, 1, datetime.datetime(2020, 2, 21, 0, 30, 5), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 8, 21, 33, 23), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:52:00,675 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (21, 0, 'TestA', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestA', 'TestA', 'philip', 1, 98, 0, datetime.datetime(2020, 2, 21, 0, 13, 22), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 9, 44), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:52:00,675 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (22, 0, 'TestB', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestB', 'test b', 'philip', 1, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 10, 17), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:52:00,675 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (23, 0, 'Booking1', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules', 'Booking for testing rules against complex 1', 'philip', 1, 98, 0, datetime.datetime(2020, 2, 20, 23, 58, 3), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 23, 58, 3), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:52:00,675 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (25, 0, 'Booking2', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 2', 'Booking for testing rules #2 on Fortigate', 'philip', 2, 98, 0, datetime.datetime(2020, 2, 21, 0, 3, 10), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 3, 10), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 14:52:00,676 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (26, 0, 'Booking3', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 3', 'Testing booking #3', 'philip', 2, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 5, 36), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 14:52:00,676 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (28, 0, 'Booking4', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 4', 'Booking test #4 on Fortigate', 'philip', 2, 98, 0, None, None, 'Booking pending, too many bookings per day/complex)', 'SCR1234567', '', datetime.datetime(2020, 2, 21, 0, 11, 51), 2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 14:52:00,676 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (29, 0, 'A better title for this change', datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'werwer', 'werwer', '2234234243234', 'werwer', 'werwer', 'bob', 1, 98, 0, datetime.datetime(2020, 2, 21, 1, 50, 30), 'philip', 'Approved by philip', 'SCR1234566', '', datetime.datetime(2020, 2, 21, 0, 35, 18), 1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:52:00,679 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.approval_reason AS bookings_approval_reason, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE lower(bookings.owner_id) LIKE lower(%s)
2020-05-27 14:52:00,679 INFO sqlalchemy.engine.base.Engine Thread-202 : ('philip',)
2020-05-27 14:52:00,680 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_approval_reason', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-05-27 14:52:00,680 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (21, 0, 'TestA', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestA', 'TestA', 'philip', 1, 98, 0, datetime.datetime(2020, 2, 21, 0, 13, 22), 'philip', 'Approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 9, 44))
2020-05-27 14:52:00,680 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (22, 0, 'TestB', datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), '123456', 'troopaq', '100000', 'TestB', 'test b', 'philip', 1, 98, 0, None, None, None, 'SCR1234568', '', datetime.datetime(2020, 2, 20, 15, 10, 17))
2020-05-27 14:52:00,681 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (23, 0, 'Booking1', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules', 'Booking for testing rules against complex 1', 'philip', 1, 98, 0, datetime.datetime(2020, 2, 20, 23, 58, 3), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 20, 23, 58, 3))
2020-05-27 14:52:00,681 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (25, 0, 'Booking2', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 2', 'Booking for testing rules #2 on Fortigate', 'philip', 2, 98, 0, datetime.datetime(2020, 2, 21, 0, 3, 10), 'Automatic Approval', 'Automatic Approval', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 3, 10))
2020-05-27 14:52:00,681 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (26, 0, 'Booking3', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 3', 'Testing booking #3', 'philip', 2, 98, 0, None, None, 'Manually set to not approved by philip', 'SCR1234568', '', datetime.datetime(2020, 2, 21, 0, 5, 36))
2020-05-27 14:52:00,681 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (28, 0, 'Booking4', datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), '123456', 'troopaq', '100000', 'Booking for testing rules 4', 'Booking test #4 on Fortigate', 'philip', 2, 98, 0, None, None, 'Booking pending, too many bookings per day/complex)', 'SCR1234567', '', datetime.datetime(2020, 2, 21, 0, 11, 51))
2020-05-27 14:52:00,707 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:52:00,707 INFO sqlalchemy.engine.base.Engine Thread-202 : ('philip', 1, 1)
2020-05-27 14:52:00,708 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:00,708 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:00,711 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:52:00,711 INFO sqlalchemy.engine.base.Engine Thread-202 : ('philip', 1, 1)
2020-05-27 14:52:00,712 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:00,712 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:00,716 INFO sqlalchemy.engine.base.Engine Thread-202 : ROLLBACK
2020-05-27 14:52:01,455 INFO sqlalchemy.engine.base.Engine Thread-212 : BEGIN (implicit)
2020-05-27 14:52:01,457 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 14:52:01,457 INFO sqlalchemy.engine.base.Engine Thread-212 : ()
2020-05-27 14:52:01,459 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 14:52:01,459 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 14:52:01,459 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 14:52:01,461 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:52:01,461 INFO sqlalchemy.engine.base.Engine Thread-212 : (100,)
2020-05-27 14:52:01,461 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:52:01,462 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 14:52:01,462 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 14:52:01,462 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 14:52:01,462 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 14:52:01,462 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 14:52:01,464 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:52:01,464 INFO sqlalchemy.engine.base.Engine Thread-212 : (1, 1)
2020-05-27 14:52:01,465 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:01,465 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:01,469 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:52:01,469 INFO sqlalchemy.engine.base.Engine Thread-212 : ('philip', 1, 1)
2020-05-27 14:52:01,470 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:01,470 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:01,472 INFO sqlalchemy.engine.base.Engine Thread-212 : ROLLBACK
2020-05-27 14:52:01,747 INFO sqlalchemy.engine.base.Engine Thread-222 : BEGIN (implicit)
2020-05-27 14:52:01,749 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 14:52:01,749 INFO sqlalchemy.engine.base.Engine Thread-222 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-27 14:52:01,749 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:52:01,750 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 14:52:01,750 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 14:52:01,753 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 14:52:01,753 INFO sqlalchemy.engine.base.Engine Thread-222 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 14:52:01,754 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:52:01,754 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 14:52:01,758 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 14:52:01,758 INFO sqlalchemy.engine.base.Engine Thread-222 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 14:52:01,759 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:52:01,763 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 14:52:01,763 INFO sqlalchemy.engine.base.Engine Thread-222 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 14:52:01,764 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:52:01,764 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 14:52:01,765 INFO sqlalchemy.engine.base.Engine Thread-222 : ROLLBACK
2020-05-27 14:52:01,790 INFO sqlalchemy.engine.base.Engine Thread-223 : BEGIN (implicit)
2020-05-27 14:52:01,794 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 14:52:01,794 INFO sqlalchemy.engine.base.Engine Thread-223 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-27 14:52:01,795 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:52:01,795 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 14:52:01,795 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 14:52:01,798 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 14:52:01,798 INFO sqlalchemy.engine.base.Engine Thread-223 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 14:52:01,799 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:52:01,799 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 14:52:01,803 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 14:52:01,803 INFO sqlalchemy.engine.base.Engine Thread-223 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 14:52:01,804 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:52:01,808 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 14:52:01,808 INFO sqlalchemy.engine.base.Engine Thread-223 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 14:52:01,809 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 14:52:01,809 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 14:52:01,810 INFO sqlalchemy.engine.base.Engine Thread-223 : ROLLBACK
2020-05-27 14:52:22,885 INFO sqlalchemy.engine.base.Engine Thread-224 : BEGIN (implicit)
2020-05-27 14:52:22,887 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:52:22,887 INFO sqlalchemy.engine.base.Engine Thread-224 : (1, 1)
2020-05-27 14:52:22,888 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:22,889 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:22,892 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:52:22,892 INFO sqlalchemy.engine.base.Engine Thread-224 : ('philip', 1, 1)
2020-05-27 14:52:22,893 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:22,893 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:22,895 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:52:22,895 INFO sqlalchemy.engine.base.Engine Thread-224 : (0,)
2020-05-27 14:52:22,896 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:52:22,897 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 14:52:22,897 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 14:52:22,897 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 14:52:22,897 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 14:52:22,897 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 14:52:22,897 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 14:52:22,897 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 14:52:22,897 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 14:52:22,897 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 14:52:22,897 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 14:52:22,897 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 14:52:22,897 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 14:52:22,897 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 14:52:22,898 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 14:52:22,898 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 14:52:22,898 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 14:52:22,898 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 14:52:22,898 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 14:52:22,898 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 14:52:22,898 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 14:52:22,898 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 14:52:22,898 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 14:52:22,898 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 14:52:22,900 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-05-27 14:52:22,900 INFO sqlalchemy.engine.base.Engine Thread-224 : (0, 1)
2020-05-27 14:52:22,901 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:52:22,901 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 14:52:22,902 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 14:52:22,902 INFO sqlalchemy.engine.base.Engine Thread-224 : (66,)
2020-05-27 14:52:22,903 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:52:22,903 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 14:52:22,903 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 14:52:22,908 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:52:22,908 INFO sqlalchemy.engine.base.Engine Thread-224 : ('philip', 1, 1)
2020-05-27 14:52:22,908 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:22,909 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:22,912 INFO sqlalchemy.engine.base.Engine Thread-224 : ROLLBACK
2020-05-27 14:52:25,488 INFO sqlalchemy.engine.base.Engine Thread-234 : BEGIN (implicit)
2020-05-27 14:52:25,490 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:52:25,490 INFO sqlalchemy.engine.base.Engine Thread-234 : (1, 1)
2020-05-27 14:52:25,490 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:25,491 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:25,493 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:52:25,493 INFO sqlalchemy.engine.base.Engine Thread-234 : ('philip', 1, 1)
2020-05-27 14:52:25,494 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:25,494 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:25,503 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 14:52:25,503 INFO sqlalchemy.engine.base.Engine Thread-234 : ()
2020-05-27 14:52:25,504 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 14:52:25,504 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:52:25,504 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:52:25,504 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:52:25,504 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:52:25,505 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:52:25,505 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'No')
2020-05-27 14:52:25,505 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:52:25,505 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:52:25,505 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 14:52:25,505 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:52:25,509 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:52:25,510 INFO sqlalchemy.engine.base.Engine Thread-234 : ('philip', 1, 1)
2020-05-27 14:52:25,510 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:25,510 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:25,513 INFO sqlalchemy.engine.base.Engine Thread-234 : ROLLBACK
2020-05-27 14:52:30,202 INFO sqlalchemy.engine.base.Engine Thread-244 : BEGIN (implicit)
2020-05-27 14:52:30,203 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:52:30,203 INFO sqlalchemy.engine.base.Engine Thread-244 : (1, 1)
2020-05-27 14:52:30,203 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:30,204 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:30,206 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:52:30,206 INFO sqlalchemy.engine.base.Engine Thread-244 : ('philip', 1, 1)
2020-05-27 14:52:30,206 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:30,207 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:30,208 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 14:52:30,208 INFO sqlalchemy.engine.base.Engine Thread-244 : ('9', 1)
2020-05-27 14:52:30,209 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 14:52:30,209 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, None, 106)
2020-05-27 14:52:30,211 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:52:30,211 INFO sqlalchemy.engine.base.Engine Thread-244 : (82,)
2020-05-27 14:52:30,211 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:52:30,212 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 14:52:30,212 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 14:52:30,212 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 14:52:30,213 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 14:52:30,213 INFO sqlalchemy.engine.base.Engine Thread-244 : (1,)
2020-05-27 14:52:30,214 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:52:30,214 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 14:52:30,214 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 14:52:30,215 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 14:52:30,215 INFO sqlalchemy.engine.base.Engine Thread-244 : ()
2020-05-27 14:52:30,215 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 14:52:30,216 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 14:52:30,216 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 14:52:30,217 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:52:30,217 INFO sqlalchemy.engine.base.Engine Thread-244 : (127,)
2020-05-27 14:52:30,218 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:52:30,218 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 14:52:30,218 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 14:52:30,218 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 14:52:30,218 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 14:52:30,219 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:52:30,219 INFO sqlalchemy.engine.base.Engine Thread-244 : (105,)
2020-05-27 14:52:30,220 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:52:30,220 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 14:52:30,220 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 14:52:30,225 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:52:30,225 INFO sqlalchemy.engine.base.Engine Thread-244 : ('philip', 1, 1)
2020-05-27 14:52:30,226 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:52:30,226 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:52:30,229 INFO sqlalchemy.engine.base.Engine Thread-244 : ROLLBACK
2020-05-27 14:53:04,301 INFO sqlalchemy.engine.base.Engine Thread-254 : BEGIN (implicit)
2020-05-27 14:53:04,302 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:53:04,302 INFO sqlalchemy.engine.base.Engine Thread-254 : (1, 1)
2020-05-27 14:53:04,303 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:04,303 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:04,305 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:53:04,305 INFO sqlalchemy.engine.base.Engine Thread-254 : ('philip', 1, 1)
2020-05-27 14:53:04,306 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:04,306 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:04,308 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 14:53:04,308 INFO sqlalchemy.engine.base.Engine Thread-254 : ('9', 1)
2020-05-27 14:53:04,309 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 14:53:04,309 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, None, 106)
2020-05-27 14:53:04,311 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:53:04,311 INFO sqlalchemy.engine.base.Engine Thread-254 : (82,)
2020-05-27 14:53:04,312 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:53:04,312 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 14:53:04,312 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 14:53:04,312 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 14:53:04,314 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 14:53:04,314 INFO sqlalchemy.engine.base.Engine Thread-254 : (1,)
2020-05-27 14:53:04,314 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:53:04,314 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 14:53:04,314 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 14:53:04,316 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 14:53:04,316 INFO sqlalchemy.engine.base.Engine Thread-254 : ()
2020-05-27 14:53:04,316 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 14:53:04,317 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 14:53:04,317 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 14:53:04,318 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:53:04,318 INFO sqlalchemy.engine.base.Engine Thread-254 : (127,)
2020-05-27 14:53:04,319 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:53:04,319 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 14:53:04,319 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 14:53:04,319 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 14:53:04,319 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 14:53:04,321 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:53:04,321 INFO sqlalchemy.engine.base.Engine Thread-254 : (105,)
2020-05-27 14:53:04,321 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:53:04,321 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 14:53:04,322 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 14:53:04,356 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:53:04,356 INFO sqlalchemy.engine.base.Engine Thread-254 : ('philip', 1, 1)
2020-05-27 14:53:04,357 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:04,357 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:04,360 INFO sqlalchemy.engine.base.Engine Thread-254 : ROLLBACK
2020-05-27 14:53:10,818 INFO sqlalchemy.engine.base.Engine Thread-265 : BEGIN (implicit)
2020-05-27 14:53:10,819 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:53:10,819 INFO sqlalchemy.engine.base.Engine Thread-265 : (1, 1)
2020-05-27 14:53:10,820 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:10,820 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:10,823 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:53:10,823 INFO sqlalchemy.engine.base.Engine Thread-265 : ('philip', 1, 1)
2020-05-27 14:53:10,824 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:10,824 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:10,833 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 14:53:10,833 INFO sqlalchemy.engine.base.Engine Thread-265 : ()
2020-05-27 14:53:10,834 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 14:53:10,834 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:53:10,834 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:53:10,834 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:53:10,834 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:53:10,834 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:53:10,834 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'No')
2020-05-27 14:53:10,834 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:53:10,834 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:53:10,835 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 14:53:10,835 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:53:10,839 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:53:10,839 INFO sqlalchemy.engine.base.Engine Thread-265 : ('philip', 1, 1)
2020-05-27 14:53:10,840 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:10,840 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:10,843 INFO sqlalchemy.engine.base.Engine Thread-265 : ROLLBACK
2020-05-27 14:53:35,063 INFO sqlalchemy.engine.base.Engine Thread-275 : BEGIN (implicit)
2020-05-27 14:53:35,065 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:53:35,065 INFO sqlalchemy.engine.base.Engine Thread-275 : (1, 1)
2020-05-27 14:53:35,066 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:35,067 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:35,069 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:53:35,069 INFO sqlalchemy.engine.base.Engine Thread-275 : ('philip', 1, 1)
2020-05-27 14:53:35,070 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:35,070 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:35,072 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 14:53:35,072 INFO sqlalchemy.engine.base.Engine Thread-275 : ('9', 1)
2020-05-27 14:53:35,072 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 14:53:35,073 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, None, 106)
2020-05-27 14:53:35,075 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:53:35,075 INFO sqlalchemy.engine.base.Engine Thread-275 : (82,)
2020-05-27 14:53:35,076 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:53:35,076 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 14:53:35,076 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 14:53:35,076 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 14:53:35,077 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 14:53:35,077 INFO sqlalchemy.engine.base.Engine Thread-275 : (1,)
2020-05-27 14:53:35,078 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:53:35,078 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 14:53:35,078 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 14:53:35,079 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 14:53:35,079 INFO sqlalchemy.engine.base.Engine Thread-275 : ()
2020-05-27 14:53:35,080 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 14:53:35,080 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 14:53:35,080 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 14:53:35,082 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:53:35,082 INFO sqlalchemy.engine.base.Engine Thread-275 : (127,)
2020-05-27 14:53:35,082 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:53:35,082 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 14:53:35,082 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 14:53:35,083 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 14:53:35,083 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 14:53:35,084 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:53:35,084 INFO sqlalchemy.engine.base.Engine Thread-275 : (105,)
2020-05-27 14:53:35,084 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:53:35,085 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 14:53:35,085 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 14:53:35,118 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:53:35,118 INFO sqlalchemy.engine.base.Engine Thread-275 : ('philip', 1, 1)
2020-05-27 14:53:35,119 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:35,119 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:35,122 INFO sqlalchemy.engine.base.Engine Thread-275 : ROLLBACK
2020-05-27 14:53:39,056 INFO sqlalchemy.engine.base.Engine Thread-285 : BEGIN (implicit)
2020-05-27 14:53:39,057 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:53:39,057 INFO sqlalchemy.engine.base.Engine Thread-285 : (1, 1)
2020-05-27 14:53:39,058 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:39,058 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:39,060 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:53:39,061 INFO sqlalchemy.engine.base.Engine Thread-285 : ('philip', 1, 1)
2020-05-27 14:53:39,061 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:39,062 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:39,070 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 14:53:39,070 INFO sqlalchemy.engine.base.Engine Thread-285 : ()
2020-05-27 14:53:39,071 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 14:53:39,072 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:53:39,072 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:53:39,072 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:53:39,072 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:53:39,072 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:53:39,072 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'No')
2020-05-27 14:53:39,072 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:53:39,072 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:53:39,072 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 14:53:39,072 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:53:39,077 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:53:39,077 INFO sqlalchemy.engine.base.Engine Thread-285 : ('philip', 1, 1)
2020-05-27 14:53:39,078 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:39,078 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:39,081 INFO sqlalchemy.engine.base.Engine Thread-285 : ROLLBACK
2020-05-27 14:53:40,470 INFO sqlalchemy.engine.base.Engine Thread-295 : BEGIN (implicit)
2020-05-27 14:53:40,471 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:53:40,471 INFO sqlalchemy.engine.base.Engine Thread-295 : (1, 1)
2020-05-27 14:53:40,472 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:40,473 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:40,475 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:53:40,475 INFO sqlalchemy.engine.base.Engine Thread-295 : ('philip', 1, 1)
2020-05-27 14:53:40,476 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:40,476 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:40,478 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 14:53:40,478 INFO sqlalchemy.engine.base.Engine Thread-295 : ('15', 1)
2020-05-27 14:53:40,479 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 14:53:40,479 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 107, None, 106)
2020-05-27 14:53:40,481 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:53:40,481 INFO sqlalchemy.engine.base.Engine Thread-295 : (82,)
2020-05-27 14:53:40,482 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:53:40,482 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 14:53:40,482 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 14:53:40,482 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 14:53:40,484 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 14:53:40,484 INFO sqlalchemy.engine.base.Engine Thread-295 : (1,)
2020-05-27 14:53:40,484 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:53:40,485 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 14:53:40,485 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 14:53:40,486 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 14:53:40,486 INFO sqlalchemy.engine.base.Engine Thread-295 : ()
2020-05-27 14:53:40,487 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 14:53:40,487 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 14:53:40,487 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 14:53:40,488 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:53:40,488 INFO sqlalchemy.engine.base.Engine Thread-295 : (127,)
2020-05-27 14:53:40,489 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:53:40,489 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 14:53:40,489 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 14:53:40,489 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 14:53:40,489 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 14:53:40,491 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 14:53:40,491 INFO sqlalchemy.engine.base.Engine Thread-295 : (105,)
2020-05-27 14:53:40,492 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 14:53:40,492 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 14:53:40,492 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 14:53:40,497 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:53:40,497 INFO sqlalchemy.engine.base.Engine Thread-295 : ('philip', 1, 1)
2020-05-27 14:53:40,498 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:40,498 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:40,501 INFO sqlalchemy.engine.base.Engine Thread-295 : ROLLBACK
2020-05-27 14:53:43,139 INFO sqlalchemy.engine.base.Engine Thread-305 : BEGIN (implicit)
2020-05-27 14:53:43,140 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 14:53:43,140 INFO sqlalchemy.engine.base.Engine Thread-305 : (1, 1)
2020-05-27 14:53:43,141 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:43,141 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:43,145 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:53:43,145 INFO sqlalchemy.engine.base.Engine Thread-305 : ('philip', 1, 1)
2020-05-27 14:53:43,145 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:43,146 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:43,156 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 14:53:43,156 INFO sqlalchemy.engine.base.Engine Thread-305 : ()
2020-05-27 14:53:43,157 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 14:53:43,158 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:53:43,158 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:53:43,158 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:53:43,158 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:53:43,158 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:53:43,158 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'No')
2020-05-27 14:53:43,158 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:53:43,158 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 14:53:43,159 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 14:53:43,159 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 14:53:43,163 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 14:53:43,164 INFO sqlalchemy.engine.base.Engine Thread-305 : ('philip', 1, 1)
2020-05-27 14:53:43,164 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 14:53:43,165 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 14:53:43,167 INFO sqlalchemy.engine.base.Engine Thread-305 : ROLLBACK
2020-05-27 15:00:28,230 INFO sqlalchemy.engine.base.Engine Thread-315 : BEGIN (implicit)
2020-05-27 15:00:28,232 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:00:28,232 INFO sqlalchemy.engine.base.Engine Thread-315 : (1, 1)
2020-05-27 15:00:28,234 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:28,235 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:28,238 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:00:28,238 INFO sqlalchemy.engine.base.Engine Thread-315 : ('philip', 1, 1)
2020-05-27 15:00:28,239 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:28,239 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:28,241 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 15:00:28,241 INFO sqlalchemy.engine.base.Engine Thread-315 : ('10', 1)
2020-05-27 15:00:28,241 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 15:00:28,242 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, None, 106)
2020-05-27 15:00:28,244 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:00:28,245 INFO sqlalchemy.engine.base.Engine Thread-315 : (82,)
2020-05-27 15:00:28,245 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:00:28,245 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 15:00:28,246 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 15:00:28,246 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 15:00:28,247 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 15:00:28,247 INFO sqlalchemy.engine.base.Engine Thread-315 : (1,)
2020-05-27 15:00:28,248 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:00:28,248 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 15:00:28,248 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 15:00:28,249 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 15:00:28,250 INFO sqlalchemy.engine.base.Engine Thread-315 : ()
2020-05-27 15:00:28,250 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 15:00:28,290 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 15:00:28,290 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 15:00:28,292 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:00:28,292 INFO sqlalchemy.engine.base.Engine Thread-315 : (127,)
2020-05-27 15:00:28,293 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:00:28,293 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 15:00:28,293 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 15:00:28,293 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 15:00:28,293 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 15:00:28,295 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:00:28,295 INFO sqlalchemy.engine.base.Engine Thread-315 : (105,)
2020-05-27 15:00:28,296 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:00:28,296 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 15:00:28,296 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 15:00:28,301 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:00:28,301 INFO sqlalchemy.engine.base.Engine Thread-315 : ('philip', 1, 1)
2020-05-27 15:00:28,302 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:28,302 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:28,305 INFO sqlalchemy.engine.base.Engine Thread-315 : ROLLBACK
2020-05-27 15:00:30,794 INFO sqlalchemy.engine.base.Engine Thread-325 : BEGIN (implicit)
2020-05-27 15:00:30,796 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:00:30,796 INFO sqlalchemy.engine.base.Engine Thread-325 : (1, 1)
2020-05-27 15:00:30,797 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:30,797 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:30,799 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:00:30,800 INFO sqlalchemy.engine.base.Engine Thread-325 : ('philip', 1, 1)
2020-05-27 15:00:30,800 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:30,801 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:30,809 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 15:00:30,810 INFO sqlalchemy.engine.base.Engine Thread-325 : ()
2020-05-27 15:00:30,810 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 15:00:30,811 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:00:30,811 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:00:30,811 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:00:30,811 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:00:30,811 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:00:30,811 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'No')
2020-05-27 15:00:30,811 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:00:30,812 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:00:30,812 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 15:00:30,812 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:00:30,817 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:00:30,817 INFO sqlalchemy.engine.base.Engine Thread-325 : ('philip', 1, 1)
2020-05-27 15:00:30,817 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:30,818 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:30,820 INFO sqlalchemy.engine.base.Engine Thread-325 : ROLLBACK
2020-05-27 15:00:33,606 INFO sqlalchemy.engine.base.Engine Thread-335 : BEGIN (implicit)
2020-05-27 15:00:33,608 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:00:33,608 INFO sqlalchemy.engine.base.Engine Thread-335 : (1, 1)
2020-05-27 15:00:33,609 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:33,609 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:33,611 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:00:33,612 INFO sqlalchemy.engine.base.Engine Thread-335 : ('philip', 1, 1)
2020-05-27 15:00:33,612 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:33,613 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:33,614 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 15:00:33,614 INFO sqlalchemy.engine.base.Engine Thread-335 : ('18', 1)
2020-05-27 15:00:33,615 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 15:00:33,615 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'GBR,IND', 107, '1,2', 107)
2020-05-27 15:00:33,618 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:00:33,618 INFO sqlalchemy.engine.base.Engine Thread-335 : (82,)
2020-05-27 15:00:33,618 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:00:33,619 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 15:00:33,619 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 15:00:33,619 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 15:00:33,620 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 15:00:33,620 INFO sqlalchemy.engine.base.Engine Thread-335 : (1,)
2020-05-27 15:00:33,621 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:00:33,621 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 15:00:33,621 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 15:00:33,622 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 15:00:33,622 INFO sqlalchemy.engine.base.Engine Thread-335 : ()
2020-05-27 15:00:33,623 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 15:00:33,623 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 15:00:33,623 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 15:00:33,625 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:00:33,625 INFO sqlalchemy.engine.base.Engine Thread-335 : (127,)
2020-05-27 15:00:33,626 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:00:33,626 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 15:00:33,626 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 15:00:33,626 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 15:00:33,626 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 15:00:33,628 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:00:33,628 INFO sqlalchemy.engine.base.Engine Thread-335 : (105,)
2020-05-27 15:00:33,628 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:00:33,628 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 15:00:33,628 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 15:00:33,634 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:00:33,634 INFO sqlalchemy.engine.base.Engine Thread-335 : ('philip', 1, 1)
2020-05-27 15:00:33,634 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:33,635 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:33,638 INFO sqlalchemy.engine.base.Engine Thread-335 : ROLLBACK
2020-05-27 15:00:46,034 INFO sqlalchemy.engine.base.Engine Thread-345 : BEGIN (implicit)
2020-05-27 15:00:46,035 INFO sqlalchemy.engine.base.Engine Thread-345 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:00:46,035 INFO sqlalchemy.engine.base.Engine Thread-345 : (1, 1)
2020-05-27 15:00:46,036 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:46,036 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:46,039 INFO sqlalchemy.engine.base.Engine Thread-345 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:00:46,039 INFO sqlalchemy.engine.base.Engine Thread-345 : ('philip', 1, 1)
2020-05-27 15:00:46,039 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:46,040 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:46,041 INFO sqlalchemy.engine.base.Engine Thread-345 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 15:00:46,041 INFO sqlalchemy.engine.base.Engine Thread-345 : ('18', 1)
2020-05-27 15:00:46,042 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 15:00:46,042 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'GBR,IND', 107, '1,2', 107)
2020-05-27 15:00:46,046 INFO sqlalchemy.engine.base.Engine Thread-345 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:00:46,046 INFO sqlalchemy.engine.base.Engine Thread-345 : (82,)
2020-05-27 15:00:46,048 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:00:46,048 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 15:00:46,048 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 15:00:46,048 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 15:00:46,050 INFO sqlalchemy.engine.base.Engine Thread-345 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 15:00:46,050 INFO sqlalchemy.engine.base.Engine Thread-345 : (1,)
2020-05-27 15:00:46,050 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:00:46,051 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 15:00:46,051 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 15:00:46,052 INFO sqlalchemy.engine.base.Engine Thread-345 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 15:00:46,052 INFO sqlalchemy.engine.base.Engine Thread-345 : ()
2020-05-27 15:00:46,053 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 15:00:46,053 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 15:00:46,053 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 15:00:46,054 INFO sqlalchemy.engine.base.Engine Thread-345 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:00:46,054 INFO sqlalchemy.engine.base.Engine Thread-345 : (127,)
2020-05-27 15:00:46,055 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:00:46,055 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 15:00:46,055 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 15:00:46,055 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 15:00:46,055 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 15:00:46,057 INFO sqlalchemy.engine.base.Engine Thread-345 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:00:46,057 INFO sqlalchemy.engine.base.Engine Thread-345 : (105,)
2020-05-27 15:00:46,057 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:00:46,058 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 15:00:46,058 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 15:00:46,063 INFO sqlalchemy.engine.base.Engine Thread-345 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_type=%s WHERE datesofinterest.id = %s
2020-05-27 15:00:46,063 INFO sqlalchemy.engine.base.Engine Thread-345 : ('18', datetime.datetime(2020, 5, 29, 2, 0), datetime.datetime(2020, 5, 29, 6, 0), 131, 18)
2020-05-27 15:00:46,064 INFO sqlalchemy.engine.base.Engine Thread-345 : COMMIT
2020-05-27 15:00:46,121 INFO sqlalchemy.engine.base.Engine Thread-346 : BEGIN (implicit)
2020-05-27 15:00:46,122 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:00:46,122 INFO sqlalchemy.engine.base.Engine Thread-346 : (1, 1)
2020-05-27 15:00:46,123 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:46,123 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:46,126 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:00:46,126 INFO sqlalchemy.engine.base.Engine Thread-346 : ('philip', 1, 1)
2020-05-27 15:00:46,127 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:46,127 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:46,136 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 15:00:46,136 INFO sqlalchemy.engine.base.Engine Thread-346 : ()
2020-05-27 15:00:46,137 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 15:00:46,137 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:00:46,137 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:00:46,137 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:00:46,137 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:00:46,137 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:00:46,138 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 29, 2, 0), datetime.datetime(2020, 5, 29, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 15:00:46,138 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:00:46,138 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:00:46,138 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 15:00:46,138 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:00:46,143 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:00:46,143 INFO sqlalchemy.engine.base.Engine Thread-346 : ('philip', 1, 1)
2020-05-27 15:00:46,144 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:46,144 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:46,148 INFO sqlalchemy.engine.base.Engine Thread-346 : ROLLBACK
2020-05-27 15:00:50,024 INFO sqlalchemy.engine.base.Engine Thread-356 : BEGIN (implicit)
2020-05-27 15:00:50,027 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 15:00:50,027 INFO sqlalchemy.engine.base.Engine Thread-356 : ()
2020-05-27 15:00:50,028 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 15:00:50,029 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 15:00:50,029 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 15:00:50,031 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:00:50,031 INFO sqlalchemy.engine.base.Engine Thread-356 : (100,)
2020-05-27 15:00:50,032 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:00:50,032 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 15:00:50,032 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 15:00:50,032 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 15:00:50,032 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 15:00:50,032 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 15:00:50,035 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:00:50,035 INFO sqlalchemy.engine.base.Engine Thread-356 : (1, 1)
2020-05-27 15:00:50,035 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:50,036 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:50,040 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:00:50,040 INFO sqlalchemy.engine.base.Engine Thread-356 : ('philip', 1, 1)
2020-05-27 15:00:50,041 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:50,041 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:50,043 INFO sqlalchemy.engine.base.Engine Thread-356 : ROLLBACK
2020-05-27 15:00:50,318 INFO sqlalchemy.engine.base.Engine Thread-366 : BEGIN (implicit)
2020-05-27 15:00:50,319 INFO sqlalchemy.engine.base.Engine Thread-366 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:00:50,320 INFO sqlalchemy.engine.base.Engine Thread-366 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-27 15:00:50,321 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:00:50,321 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:00:50,321 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:00:50,325 INFO sqlalchemy.engine.base.Engine Thread-366 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:00:50,325 INFO sqlalchemy.engine.base.Engine Thread-366 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 15:00:50,326 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:00:50,331 INFO sqlalchemy.engine.base.Engine Thread-366 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 15:00:50,331 INFO sqlalchemy.engine.base.Engine Thread-366 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:00:50,332 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:00:50,336 INFO sqlalchemy.engine.base.Engine Thread-366 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 15:00:50,336 INFO sqlalchemy.engine.base.Engine Thread-366 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:00:50,337 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:00:50,337 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:00:50,338 INFO sqlalchemy.engine.base.Engine Thread-366 : ROLLBACK
2020-05-27 15:00:50,365 INFO sqlalchemy.engine.base.Engine Thread-367 : BEGIN (implicit)
2020-05-27 15:00:50,366 INFO sqlalchemy.engine.base.Engine Thread-367 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:00:50,366 INFO sqlalchemy.engine.base.Engine Thread-367 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-27 15:00:50,367 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:00:50,367 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:00:50,367 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:00:50,371 INFO sqlalchemy.engine.base.Engine Thread-367 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:00:50,372 INFO sqlalchemy.engine.base.Engine Thread-367 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 15:00:50,372 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:00:50,377 INFO sqlalchemy.engine.base.Engine Thread-367 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 15:00:50,377 INFO sqlalchemy.engine.base.Engine Thread-367 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:00:50,378 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:00:50,383 INFO sqlalchemy.engine.base.Engine Thread-367 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 15:00:50,383 INFO sqlalchemy.engine.base.Engine Thread-367 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:00:50,384 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:00:50,384 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:00:50,385 INFO sqlalchemy.engine.base.Engine Thread-367 : ROLLBACK
2020-05-27 15:00:59,668 INFO sqlalchemy.engine.base.Engine Thread-368 : BEGIN (implicit)
2020-05-27 15:00:59,669 INFO sqlalchemy.engine.base.Engine Thread-368 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:00:59,670 INFO sqlalchemy.engine.base.Engine Thread-368 : (1, 1)
2020-05-27 15:00:59,670 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:59,671 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:59,673 INFO sqlalchemy.engine.base.Engine Thread-368 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:00:59,673 INFO sqlalchemy.engine.base.Engine Thread-368 : ('philip', 1, 1)
2020-05-27 15:00:59,674 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:59,674 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:59,684 INFO sqlalchemy.engine.base.Engine Thread-368 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 15:00:59,684 INFO sqlalchemy.engine.base.Engine Thread-368 : ()
2020-05-27 15:00:59,685 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 15:00:59,685 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:00:59,685 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:00:59,685 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:00:59,685 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:00:59,685 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:00:59,685 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 29, 2, 0), datetime.datetime(2020, 5, 29, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 15:00:59,685 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:00:59,686 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:00:59,686 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 15:00:59,686 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:00:59,690 INFO sqlalchemy.engine.base.Engine Thread-368 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:00:59,690 INFO sqlalchemy.engine.base.Engine Thread-368 : ('philip', 1, 1)
2020-05-27 15:00:59,691 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:00:59,691 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:00:59,693 INFO sqlalchemy.engine.base.Engine Thread-368 : ROLLBACK
2020-05-27 15:01:06,886 INFO sqlalchemy.engine.base.Engine Thread-378 : BEGIN (implicit)
2020-05-27 15:01:06,888 INFO sqlalchemy.engine.base.Engine Thread-378 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:01:06,888 INFO sqlalchemy.engine.base.Engine Thread-378 : (1, 1)
2020-05-27 15:01:06,889 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:01:06,889 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:01:06,892 INFO sqlalchemy.engine.base.Engine Thread-378 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:01:06,892 INFO sqlalchemy.engine.base.Engine Thread-378 : ('philip', 1, 1)
2020-05-27 15:01:06,893 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:01:06,893 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:01:06,894 INFO sqlalchemy.engine.base.Engine Thread-378 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 15:01:06,894 INFO sqlalchemy.engine.base.Engine Thread-378 : ('18', 1)
2020-05-27 15:01:06,895 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 15:01:06,895 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 29, 2, 0), datetime.datetime(2020, 5, 29, 6, 0), 'GBR,IND', 131, '1,2', 107)
2020-05-27 15:01:06,897 INFO sqlalchemy.engine.base.Engine Thread-378 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:01:06,898 INFO sqlalchemy.engine.base.Engine Thread-378 : (82,)
2020-05-27 15:01:06,898 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:01:06,898 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 15:01:06,899 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 15:01:06,899 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 15:01:06,900 INFO sqlalchemy.engine.base.Engine Thread-378 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 15:01:06,900 INFO sqlalchemy.engine.base.Engine Thread-378 : (1,)
2020-05-27 15:01:06,901 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:01:06,902 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 15:01:06,902 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 15:01:06,903 INFO sqlalchemy.engine.base.Engine Thread-378 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 15:01:06,903 INFO sqlalchemy.engine.base.Engine Thread-378 : ()
2020-05-27 15:01:06,904 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 15:01:06,904 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 15:01:06,904 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 15:01:06,905 INFO sqlalchemy.engine.base.Engine Thread-378 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:01:06,905 INFO sqlalchemy.engine.base.Engine Thread-378 : (127,)
2020-05-27 15:01:06,906 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:01:06,906 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 15:01:06,906 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 15:01:06,906 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 15:01:06,906 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 15:01:06,908 INFO sqlalchemy.engine.base.Engine Thread-378 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:01:06,908 INFO sqlalchemy.engine.base.Engine Thread-378 : (105,)
2020-05-27 15:01:06,909 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:01:06,909 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 15:01:06,909 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 15:01:06,914 INFO sqlalchemy.engine.base.Engine Thread-378 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:01:06,914 INFO sqlalchemy.engine.base.Engine Thread-378 : ('philip', 1, 1)
2020-05-27 15:01:06,914 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:01:06,915 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:01:06,918 INFO sqlalchemy.engine.base.Engine Thread-378 : ROLLBACK
2020-05-27 15:01:21,817 INFO sqlalchemy.engine.base.Engine Thread-388 : BEGIN (implicit)
2020-05-27 15:01:21,819 INFO sqlalchemy.engine.base.Engine Thread-388 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:01:21,819 INFO sqlalchemy.engine.base.Engine Thread-388 : (1, 1)
2020-05-27 15:01:21,820 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:01:21,820 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:01:21,823 INFO sqlalchemy.engine.base.Engine Thread-388 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:01:21,823 INFO sqlalchemy.engine.base.Engine Thread-388 : ('philip', 1, 1)
2020-05-27 15:01:21,823 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:01:21,824 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:01:21,825 INFO sqlalchemy.engine.base.Engine Thread-388 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 15:01:21,826 INFO sqlalchemy.engine.base.Engine Thread-388 : ('18', 1)
2020-05-27 15:01:21,826 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 15:01:21,826 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 29, 2, 0), datetime.datetime(2020, 5, 29, 6, 0), 'GBR,IND', 131, '1,2', 107)
2020-05-27 15:01:21,829 INFO sqlalchemy.engine.base.Engine Thread-388 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:01:21,830 INFO sqlalchemy.engine.base.Engine Thread-388 : (82,)
2020-05-27 15:01:21,830 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:01:21,830 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 15:01:21,830 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 15:01:21,831 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 15:01:21,832 INFO sqlalchemy.engine.base.Engine Thread-388 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 15:01:21,832 INFO sqlalchemy.engine.base.Engine Thread-388 : (1,)
2020-05-27 15:01:21,833 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:01:21,833 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 15:01:21,833 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 15:01:21,835 INFO sqlalchemy.engine.base.Engine Thread-388 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 15:01:21,835 INFO sqlalchemy.engine.base.Engine Thread-388 : ()
2020-05-27 15:01:21,835 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 15:01:21,836 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 15:01:21,836 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 15:01:21,837 INFO sqlalchemy.engine.base.Engine Thread-388 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:01:21,837 INFO sqlalchemy.engine.base.Engine Thread-388 : (127,)
2020-05-27 15:01:21,838 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:01:21,838 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 15:01:21,838 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 15:01:21,838 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 15:01:21,838 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 15:01:21,840 INFO sqlalchemy.engine.base.Engine Thread-388 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:01:21,840 INFO sqlalchemy.engine.base.Engine Thread-388 : (105,)
2020-05-27 15:01:21,840 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:01:21,841 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 15:01:21,841 DEBUG sqlalchemy.engine.base.Engine Thread-388 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 15:01:21,843 INFO sqlalchemy.engine.base.Engine Thread-388 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s WHERE datesofinterest.id = %s
2020-05-27 15:01:21,843 INFO sqlalchemy.engine.base.Engine Thread-388 : ('18', datetime.datetime(2020, 5, 29, 2, 0), datetime.datetime(2020, 5, 29, 6, 0), 18)
2020-05-27 15:01:21,843 INFO sqlalchemy.engine.base.Engine Thread-388 : COMMIT
2020-05-27 15:01:21,878 INFO sqlalchemy.engine.base.Engine Thread-389 : BEGIN (implicit)
2020-05-27 15:01:21,879 INFO sqlalchemy.engine.base.Engine Thread-389 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:01:21,879 INFO sqlalchemy.engine.base.Engine Thread-389 : (1, 1)
2020-05-27 15:01:21,879 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:01:21,880 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:01:21,882 INFO sqlalchemy.engine.base.Engine Thread-389 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:01:21,882 INFO sqlalchemy.engine.base.Engine Thread-389 : ('philip', 1, 1)
2020-05-27 15:01:21,883 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:01:21,883 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:01:21,892 INFO sqlalchemy.engine.base.Engine Thread-389 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 15:01:21,892 INFO sqlalchemy.engine.base.Engine Thread-389 : ()
2020-05-27 15:01:21,893 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 15:01:21,893 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:01:21,893 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:01:21,894 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:01:21,894 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:01:21,894 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:01:21,894 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 29, 2, 0), datetime.datetime(2020, 5, 29, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 15:01:21,894 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:01:21,894 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:01:21,894 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 15:01:21,894 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:01:21,899 INFO sqlalchemy.engine.base.Engine Thread-389 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:01:21,899 INFO sqlalchemy.engine.base.Engine Thread-389 : ('philip', 1, 1)
2020-05-27 15:01:21,900 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:01:21,900 DEBUG sqlalchemy.engine.base.Engine Thread-389 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:01:21,904 INFO sqlalchemy.engine.base.Engine Thread-389 : ROLLBACK
2020-05-27 15:01:32,718 INFO sqlalchemy.engine.base.Engine Thread-399 : BEGIN (implicit)
2020-05-27 15:01:32,720 INFO sqlalchemy.engine.base.Engine Thread-399 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 15:01:32,720 INFO sqlalchemy.engine.base.Engine Thread-399 : ()
2020-05-27 15:01:32,722 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 15:01:32,722 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 15:01:32,723 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 15:01:32,724 INFO sqlalchemy.engine.base.Engine Thread-399 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:01:32,724 INFO sqlalchemy.engine.base.Engine Thread-399 : (100,)
2020-05-27 15:01:32,725 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:01:32,725 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 15:01:32,725 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 15:01:32,726 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 15:01:32,726 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 15:01:32,726 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 15:01:32,728 INFO sqlalchemy.engine.base.Engine Thread-399 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:01:32,728 INFO sqlalchemy.engine.base.Engine Thread-399 : (1, 1)
2020-05-27 15:01:32,729 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:01:32,729 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:01:32,734 INFO sqlalchemy.engine.base.Engine Thread-399 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:01:32,734 INFO sqlalchemy.engine.base.Engine Thread-399 : ('philip', 1, 1)
2020-05-27 15:01:32,734 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:01:32,735 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:01:32,736 INFO sqlalchemy.engine.base.Engine Thread-399 : ROLLBACK
2020-05-27 15:01:33,051 INFO sqlalchemy.engine.base.Engine Thread-409 : BEGIN (implicit)
2020-05-27 15:01:33,053 INFO sqlalchemy.engine.base.Engine Thread-409 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:01:33,053 INFO sqlalchemy.engine.base.Engine Thread-409 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-27 15:01:33,054 DEBUG sqlalchemy.engine.base.Engine Thread-409 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:33,054 DEBUG sqlalchemy.engine.base.Engine Thread-409 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:01:33,054 DEBUG sqlalchemy.engine.base.Engine Thread-409 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:01:33,057 INFO sqlalchemy.engine.base.Engine Thread-409 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:01:33,057 INFO sqlalchemy.engine.base.Engine Thread-409 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 15:01:33,058 DEBUG sqlalchemy.engine.base.Engine Thread-409 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:33,063 INFO sqlalchemy.engine.base.Engine Thread-409 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 15:01:33,063 INFO sqlalchemy.engine.base.Engine Thread-409 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:01:33,064 DEBUG sqlalchemy.engine.base.Engine Thread-409 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:33,068 INFO sqlalchemy.engine.base.Engine Thread-409 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 15:01:33,068 INFO sqlalchemy.engine.base.Engine Thread-409 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:01:33,069 DEBUG sqlalchemy.engine.base.Engine Thread-409 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:33,069 DEBUG sqlalchemy.engine.base.Engine Thread-409 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:01:33,070 INFO sqlalchemy.engine.base.Engine Thread-409 : ROLLBACK
2020-05-27 15:01:33,098 INFO sqlalchemy.engine.base.Engine Thread-410 : BEGIN (implicit)
2020-05-27 15:01:33,099 INFO sqlalchemy.engine.base.Engine Thread-410 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:01:33,099 INFO sqlalchemy.engine.base.Engine Thread-410 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-27 15:01:33,100 DEBUG sqlalchemy.engine.base.Engine Thread-410 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:33,100 DEBUG sqlalchemy.engine.base.Engine Thread-410 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:01:33,101 DEBUG sqlalchemy.engine.base.Engine Thread-410 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:01:33,104 INFO sqlalchemy.engine.base.Engine Thread-410 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:01:33,104 INFO sqlalchemy.engine.base.Engine Thread-410 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 15:01:33,105 DEBUG sqlalchemy.engine.base.Engine Thread-410 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:33,109 INFO sqlalchemy.engine.base.Engine Thread-410 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 15:01:33,109 INFO sqlalchemy.engine.base.Engine Thread-410 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:01:33,110 DEBUG sqlalchemy.engine.base.Engine Thread-410 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:33,114 INFO sqlalchemy.engine.base.Engine Thread-410 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 15:01:33,114 INFO sqlalchemy.engine.base.Engine Thread-410 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:01:33,115 DEBUG sqlalchemy.engine.base.Engine Thread-410 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:33,115 DEBUG sqlalchemy.engine.base.Engine Thread-410 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:01:33,116 INFO sqlalchemy.engine.base.Engine Thread-410 : ROLLBACK
2020-05-27 15:01:41,635 INFO sqlalchemy.engine.base.Engine Thread-411 : BEGIN (implicit)
2020-05-27 15:01:41,637 INFO sqlalchemy.engine.base.Engine Thread-411 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:01:41,637 INFO sqlalchemy.engine.base.Engine Thread-411 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), 'YES')
2020-05-27 15:01:41,638 DEBUG sqlalchemy.engine.base.Engine Thread-411 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:41,642 INFO sqlalchemy.engine.base.Engine Thread-411 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:01:41,642 INFO sqlalchemy.engine.base.Engine Thread-411 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), 'NO')
2020-05-27 15:01:41,643 DEBUG sqlalchemy.engine.base.Engine Thread-411 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:41,647 INFO sqlalchemy.engine.base.Engine Thread-411 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 15:01:41,647 INFO sqlalchemy.engine.base.Engine Thread-411 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-05-27 15:01:41,648 DEBUG sqlalchemy.engine.base.Engine Thread-411 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:41,652 INFO sqlalchemy.engine.base.Engine Thread-411 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 15:01:41,652 INFO sqlalchemy.engine.base.Engine Thread-411 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-05-27 15:01:41,653 DEBUG sqlalchemy.engine.base.Engine Thread-411 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:41,654 INFO sqlalchemy.engine.base.Engine Thread-411 : ROLLBACK
2020-05-27 15:01:44,387 INFO sqlalchemy.engine.base.Engine Thread-412 : BEGIN (implicit)
2020-05-27 15:01:44,389 INFO sqlalchemy.engine.base.Engine Thread-412 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:01:44,389 INFO sqlalchemy.engine.base.Engine Thread-412 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-27 15:01:44,390 DEBUG sqlalchemy.engine.base.Engine Thread-412 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:44,390 DEBUG sqlalchemy.engine.base.Engine Thread-412 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:01:44,390 DEBUG sqlalchemy.engine.base.Engine Thread-412 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:01:44,393 INFO sqlalchemy.engine.base.Engine Thread-412 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:01:44,394 INFO sqlalchemy.engine.base.Engine Thread-412 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 15:01:44,394 DEBUG sqlalchemy.engine.base.Engine Thread-412 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:44,399 INFO sqlalchemy.engine.base.Engine Thread-412 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 15:01:44,399 INFO sqlalchemy.engine.base.Engine Thread-412 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:01:44,400 DEBUG sqlalchemy.engine.base.Engine Thread-412 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:44,404 INFO sqlalchemy.engine.base.Engine Thread-412 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 15:01:44,404 INFO sqlalchemy.engine.base.Engine Thread-412 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:01:44,405 DEBUG sqlalchemy.engine.base.Engine Thread-412 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:44,405 DEBUG sqlalchemy.engine.base.Engine Thread-412 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:01:44,406 INFO sqlalchemy.engine.base.Engine Thread-412 : ROLLBACK
2020-05-27 15:01:44,798 INFO sqlalchemy.engine.base.Engine Thread-413 : BEGIN (implicit)
2020-05-27 15:01:44,800 INFO sqlalchemy.engine.base.Engine Thread-413 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:01:44,800 INFO sqlalchemy.engine.base.Engine Thread-413 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'YES')
2020-05-27 15:01:44,801 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:44,801 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:01:44,801 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:01:44,805 INFO sqlalchemy.engine.base.Engine Thread-413 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:01:44,805 INFO sqlalchemy.engine.base.Engine Thread-413 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'NO')
2020-05-27 15:01:44,806 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:44,806 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 15:01:44,811 INFO sqlalchemy.engine.base.Engine Thread-413 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 15:01:44,811 INFO sqlalchemy.engine.base.Engine Thread-413 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-05-27 15:01:44,812 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:44,816 INFO sqlalchemy.engine.base.Engine Thread-413 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 15:01:44,817 INFO sqlalchemy.engine.base.Engine Thread-413 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-05-27 15:01:44,817 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:44,818 INFO sqlalchemy.engine.base.Engine Thread-413 : ROLLBACK
2020-05-27 15:01:47,265 INFO sqlalchemy.engine.base.Engine Thread-414 : BEGIN (implicit)
2020-05-27 15:01:47,267 INFO sqlalchemy.engine.base.Engine Thread-414 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:01:47,267 INFO sqlalchemy.engine.base.Engine Thread-414 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-27 15:01:47,268 DEBUG sqlalchemy.engine.base.Engine Thread-414 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:47,268 DEBUG sqlalchemy.engine.base.Engine Thread-414 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:01:47,268 DEBUG sqlalchemy.engine.base.Engine Thread-414 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:01:47,272 INFO sqlalchemy.engine.base.Engine Thread-414 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:01:47,272 INFO sqlalchemy.engine.base.Engine Thread-414 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 15:01:47,273 DEBUG sqlalchemy.engine.base.Engine Thread-414 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:47,277 INFO sqlalchemy.engine.base.Engine Thread-414 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 15:01:47,277 INFO sqlalchemy.engine.base.Engine Thread-414 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:01:47,278 DEBUG sqlalchemy.engine.base.Engine Thread-414 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:47,282 INFO sqlalchemy.engine.base.Engine Thread-414 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 15:01:47,283 INFO sqlalchemy.engine.base.Engine Thread-414 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:01:47,283 DEBUG sqlalchemy.engine.base.Engine Thread-414 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:01:47,284 DEBUG sqlalchemy.engine.base.Engine Thread-414 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:01:47,285 INFO sqlalchemy.engine.base.Engine Thread-414 : ROLLBACK
2020-05-27 15:03:04,758 INFO sqlalchemy.engine.base.Engine Thread-415 : BEGIN (implicit)
2020-05-27 15:03:04,760 INFO sqlalchemy.engine.base.Engine Thread-415 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:03:04,760 INFO sqlalchemy.engine.base.Engine Thread-415 : (1, 1)
2020-05-27 15:03:04,761 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:04,761 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:04,764 INFO sqlalchemy.engine.base.Engine Thread-415 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:03:04,764 INFO sqlalchemy.engine.base.Engine Thread-415 : ('philip', 1, 1)
2020-05-27 15:03:04,765 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:04,765 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:04,774 INFO sqlalchemy.engine.base.Engine Thread-415 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 15:03:04,775 INFO sqlalchemy.engine.base.Engine Thread-415 : ()
2020-05-27 15:03:04,776 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 15:03:04,776 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:03:04,776 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:03:04,776 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:03:04,776 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:03:04,776 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:03:04,776 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 29, 2, 0), datetime.datetime(2020, 5, 29, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 15:03:04,776 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:03:04,776 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:03:04,777 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 15:03:04,777 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:03:04,781 INFO sqlalchemy.engine.base.Engine Thread-415 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:03:04,781 INFO sqlalchemy.engine.base.Engine Thread-415 : ('philip', 1, 1)
2020-05-27 15:03:04,782 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:04,782 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:04,785 INFO sqlalchemy.engine.base.Engine Thread-415 : ROLLBACK
2020-05-27 15:03:10,326 INFO sqlalchemy.engine.base.Engine Thread-425 : BEGIN (implicit)
2020-05-27 15:03:10,327 INFO sqlalchemy.engine.base.Engine Thread-425 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:03:10,327 INFO sqlalchemy.engine.base.Engine Thread-425 : (1, 1)
2020-05-27 15:03:10,328 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:10,328 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:10,331 INFO sqlalchemy.engine.base.Engine Thread-425 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:03:10,331 INFO sqlalchemy.engine.base.Engine Thread-425 : ('philip', 1, 1)
2020-05-27 15:03:10,332 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:10,332 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:10,333 INFO sqlalchemy.engine.base.Engine Thread-425 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 15:03:10,334 INFO sqlalchemy.engine.base.Engine Thread-425 : ('18', 1)
2020-05-27 15:03:10,334 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 15:03:10,334 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 29, 2, 0), datetime.datetime(2020, 5, 29, 6, 0), 'GBR,IND', 131, '1,2', 107)
2020-05-27 15:03:10,337 INFO sqlalchemy.engine.base.Engine Thread-425 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:03:10,337 INFO sqlalchemy.engine.base.Engine Thread-425 : (82,)
2020-05-27 15:03:10,351 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:03:10,351 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 15:03:10,351 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 15:03:10,351 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 15:03:10,353 INFO sqlalchemy.engine.base.Engine Thread-425 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 15:03:10,353 INFO sqlalchemy.engine.base.Engine Thread-425 : (1,)
2020-05-27 15:03:10,358 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:03:10,358 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 15:03:10,358 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 15:03:10,360 INFO sqlalchemy.engine.base.Engine Thread-425 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 15:03:10,360 INFO sqlalchemy.engine.base.Engine Thread-425 : ()
2020-05-27 15:03:10,360 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 15:03:10,361 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 15:03:10,361 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 15:03:10,362 INFO sqlalchemy.engine.base.Engine Thread-425 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:03:10,362 INFO sqlalchemy.engine.base.Engine Thread-425 : (127,)
2020-05-27 15:03:10,363 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:03:10,363 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 15:03:10,363 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 15:03:10,363 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 15:03:10,363 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 15:03:10,364 INFO sqlalchemy.engine.base.Engine Thread-425 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:03:10,365 INFO sqlalchemy.engine.base.Engine Thread-425 : (105,)
2020-05-27 15:03:10,366 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:03:10,366 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 15:03:10,366 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 15:03:10,371 INFO sqlalchemy.engine.base.Engine Thread-425 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:03:10,371 INFO sqlalchemy.engine.base.Engine Thread-425 : ('philip', 1, 1)
2020-05-27 15:03:10,371 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:10,372 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:10,375 INFO sqlalchemy.engine.base.Engine Thread-425 : ROLLBACK
2020-05-27 15:03:20,721 INFO sqlalchemy.engine.base.Engine Thread-435 : BEGIN (implicit)
2020-05-27 15:03:20,723 INFO sqlalchemy.engine.base.Engine Thread-435 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:03:20,723 INFO sqlalchemy.engine.base.Engine Thread-435 : (1, 1)
2020-05-27 15:03:20,723 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:20,724 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:20,726 INFO sqlalchemy.engine.base.Engine Thread-435 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:03:20,726 INFO sqlalchemy.engine.base.Engine Thread-435 : ('philip', 1, 1)
2020-05-27 15:03:20,727 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:20,727 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:20,729 INFO sqlalchemy.engine.base.Engine Thread-435 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 15:03:20,729 INFO sqlalchemy.engine.base.Engine Thread-435 : ('18', 1)
2020-05-27 15:03:20,730 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 15:03:20,730 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (18, 'Zone 2 BAU', 83, 'Zone 2 BAU', datetime.datetime(2020, 5, 29, 2, 0), datetime.datetime(2020, 5, 29, 6, 0), 'GBR,IND', 131, '1,2', 107)
2020-05-27 15:03:20,733 INFO sqlalchemy.engine.base.Engine Thread-435 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:03:20,733 INFO sqlalchemy.engine.base.Engine Thread-435 : (82,)
2020-05-27 15:03:20,734 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:03:20,734 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 15:03:20,734 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 15:03:20,735 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 15:03:20,736 INFO sqlalchemy.engine.base.Engine Thread-435 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 15:03:20,736 INFO sqlalchemy.engine.base.Engine Thread-435 : (1,)
2020-05-27 15:03:20,737 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:03:20,737 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 15:03:20,737 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 15:03:20,738 INFO sqlalchemy.engine.base.Engine Thread-435 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 15:03:20,738 INFO sqlalchemy.engine.base.Engine Thread-435 : ()
2020-05-27 15:03:20,739 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 15:03:20,739 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 15:03:20,739 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 15:03:20,741 INFO sqlalchemy.engine.base.Engine Thread-435 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:03:20,741 INFO sqlalchemy.engine.base.Engine Thread-435 : (127,)
2020-05-27 15:03:20,741 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:03:20,741 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 15:03:20,742 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 15:03:20,742 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 15:03:20,742 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 15:03:20,743 INFO sqlalchemy.engine.base.Engine Thread-435 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:03:20,743 INFO sqlalchemy.engine.base.Engine Thread-435 : (105,)
2020-05-27 15:03:20,744 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:03:20,744 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 15:03:20,744 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 15:03:20,745 INFO sqlalchemy.engine.base.Engine Thread-435 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s WHERE datesofinterest.id = %s
2020-05-27 15:03:20,746 INFO sqlalchemy.engine.base.Engine Thread-435 : ('18', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 18)
2020-05-27 15:03:20,746 INFO sqlalchemy.engine.base.Engine Thread-435 : COMMIT
2020-05-27 15:03:20,785 INFO sqlalchemy.engine.base.Engine Thread-436 : BEGIN (implicit)
2020-05-27 15:03:20,786 INFO sqlalchemy.engine.base.Engine Thread-436 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:03:20,786 INFO sqlalchemy.engine.base.Engine Thread-436 : (1, 1)
2020-05-27 15:03:20,787 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:20,788 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:20,790 INFO sqlalchemy.engine.base.Engine Thread-436 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:03:20,790 INFO sqlalchemy.engine.base.Engine Thread-436 : ('philip', 1, 1)
2020-05-27 15:03:20,791 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:20,791 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:20,800 INFO sqlalchemy.engine.base.Engine Thread-436 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 15:03:20,800 INFO sqlalchemy.engine.base.Engine Thread-436 : ()
2020-05-27 15:03:20,801 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 15:03:20,801 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:03:20,801 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:03:20,802 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:03:20,802 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:03:20,802 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:03:20,802 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 15:03:20,802 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:03:20,802 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 15:03:20,802 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 15:03:20,802 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 15:03:20,807 INFO sqlalchemy.engine.base.Engine Thread-436 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:03:20,807 INFO sqlalchemy.engine.base.Engine Thread-436 : ('philip', 1, 1)
2020-05-27 15:03:20,808 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:20,808 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:20,812 INFO sqlalchemy.engine.base.Engine Thread-436 : ROLLBACK
2020-05-27 15:03:22,464 INFO sqlalchemy.engine.base.Engine Thread-446 : BEGIN (implicit)
2020-05-27 15:03:22,466 INFO sqlalchemy.engine.base.Engine Thread-446 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 15:03:22,466 INFO sqlalchemy.engine.base.Engine Thread-446 : ()
2020-05-27 15:03:22,468 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 15:03:22,468 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 15:03:22,468 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 15:03:22,470 INFO sqlalchemy.engine.base.Engine Thread-446 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 15:03:22,470 INFO sqlalchemy.engine.base.Engine Thread-446 : (100,)
2020-05-27 15:03:22,470 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 15:03:22,471 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 15:03:22,471 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 15:03:22,471 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 15:03:22,471 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 15:03:22,471 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 15:03:22,473 INFO sqlalchemy.engine.base.Engine Thread-446 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:03:22,473 INFO sqlalchemy.engine.base.Engine Thread-446 : (1, 1)
2020-05-27 15:03:22,474 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:22,474 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:22,479 INFO sqlalchemy.engine.base.Engine Thread-446 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 15:03:22,479 INFO sqlalchemy.engine.base.Engine Thread-446 : ('philip', 1, 1)
2020-05-27 15:03:22,479 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:22,480 DEBUG sqlalchemy.engine.base.Engine Thread-446 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:22,481 INFO sqlalchemy.engine.base.Engine Thread-446 : ROLLBACK
2020-05-27 15:03:22,743 INFO sqlalchemy.engine.base.Engine Thread-456 : BEGIN (implicit)
2020-05-27 15:03:22,745 INFO sqlalchemy.engine.base.Engine Thread-456 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:03:22,745 INFO sqlalchemy.engine.base.Engine Thread-456 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-27 15:03:22,746 DEBUG sqlalchemy.engine.base.Engine Thread-456 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:03:22,746 DEBUG sqlalchemy.engine.base.Engine Thread-456 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:03:22,746 DEBUG sqlalchemy.engine.base.Engine Thread-456 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:03:22,750 INFO sqlalchemy.engine.base.Engine Thread-456 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:03:22,750 INFO sqlalchemy.engine.base.Engine Thread-456 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 15:03:22,751 DEBUG sqlalchemy.engine.base.Engine Thread-456 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:03:22,755 INFO sqlalchemy.engine.base.Engine Thread-456 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 15:03:22,755 INFO sqlalchemy.engine.base.Engine Thread-456 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:03:22,756 DEBUG sqlalchemy.engine.base.Engine Thread-456 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:03:22,760 INFO sqlalchemy.engine.base.Engine Thread-456 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 15:03:22,761 INFO sqlalchemy.engine.base.Engine Thread-456 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:03:22,761 DEBUG sqlalchemy.engine.base.Engine Thread-456 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:03:22,762 DEBUG sqlalchemy.engine.base.Engine Thread-456 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:03:22,763 INFO sqlalchemy.engine.base.Engine Thread-456 : ROLLBACK
2020-05-27 15:03:22,788 INFO sqlalchemy.engine.base.Engine Thread-457 : BEGIN (implicit)
2020-05-27 15:03:22,790 INFO sqlalchemy.engine.base.Engine Thread-457 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:03:22,790 INFO sqlalchemy.engine.base.Engine Thread-457 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-05-27 15:03:22,791 DEBUG sqlalchemy.engine.base.Engine Thread-457 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:03:22,791 DEBUG sqlalchemy.engine.base.Engine Thread-457 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:03:22,791 DEBUG sqlalchemy.engine.base.Engine Thread-457 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:03:22,795 INFO sqlalchemy.engine.base.Engine Thread-457 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:03:22,795 INFO sqlalchemy.engine.base.Engine Thread-457 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 15:03:22,796 DEBUG sqlalchemy.engine.base.Engine Thread-457 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:03:22,800 INFO sqlalchemy.engine.base.Engine Thread-457 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 15:03:22,800 INFO sqlalchemy.engine.base.Engine Thread-457 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:03:22,801 DEBUG sqlalchemy.engine.base.Engine Thread-457 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:03:22,805 INFO sqlalchemy.engine.base.Engine Thread-457 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 15:03:22,805 INFO sqlalchemy.engine.base.Engine Thread-457 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 15:03:22,806 DEBUG sqlalchemy.engine.base.Engine Thread-457 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:03:22,806 DEBUG sqlalchemy.engine.base.Engine Thread-457 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:03:22,807 INFO sqlalchemy.engine.base.Engine Thread-457 : ROLLBACK
2020-05-27 15:03:50,431 INFO sqlalchemy.engine.base.Engine Thread-458 : BEGIN (implicit)
2020-05-27 15:03:50,432 INFO sqlalchemy.engine.base.Engine Thread-458 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:03:50,432 INFO sqlalchemy.engine.base.Engine Thread-458 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'YES')
2020-05-27 15:03:50,433 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:03:50,433 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:03:50,433 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:03:50,434 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:03:50,434 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:03:50,437 INFO sqlalchemy.engine.base.Engine Thread-458 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-05-27 15:03:50,437 INFO sqlalchemy.engine.base.Engine Thread-458 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 15:03:50,438 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:03:50,439 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 15:03:50,439 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 15:03:50,439 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 15:03:50,439 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 15:03:50,444 INFO sqlalchemy.engine.base.Engine Thread-458 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 15:03:50,444 INFO sqlalchemy.engine.base.Engine Thread-458 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 15:03:50,445 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:03:50,445 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:03:50,445 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:03:50,445 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:03:50,445 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:03:50,445 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:03:50,446 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:03:50,446 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:03:50,450 INFO sqlalchemy.engine.base.Engine Thread-458 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 15:03:50,450 INFO sqlalchemy.engine.base.Engine Thread-458 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 15:03:50,451 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:03:50,451 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:03:50,451 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:03:50,452 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:03:50,452 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:03:50,452 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:03:50,452 DEBUG sqlalchemy.engine.base.Engine Thread-458 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:03:50,454 INFO sqlalchemy.engine.base.Engine Thread-458 : ROLLBACK
2020-05-27 15:03:50,522 INFO sqlalchemy.engine.base.Engine Thread-459 : BEGIN (implicit)
2020-05-27 15:03:50,523 INFO sqlalchemy.engine.base.Engine Thread-459 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:03:50,523 INFO sqlalchemy.engine.base.Engine Thread-459 : (1, 1)
2020-05-27 15:03:50,524 DEBUG sqlalchemy.engine.base.Engine Thread-459 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:03:50,524 DEBUG sqlalchemy.engine.base.Engine Thread-459 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:03:50,525 INFO sqlalchemy.engine.base.Engine Thread-459 : ROLLBACK
2020-05-27 15:11:44,377 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 15:11:44,377 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 15:11:44,379 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-05-27 15:11:44,379 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-05-27 15:11:44,380 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 15:11:44,380 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 15:11:44,381 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-05-27 15:11:44,381 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-05-27 15:11:44,381 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-05-27 15:11:44,381 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 15:11:44,382 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-05-27 15:11:44,382 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-05-27 15:11:44,382 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 15:11:44,382 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 15:11:44,383 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 15:11:44,383 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 15:11:44,384 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 15:11:44,384 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 15:11:44,385 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 15:11:44,385 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 15:11:44,385 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 15:11:44,385 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 15:11:44,386 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-05-27 15:11:44,388 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:11:44,388 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-05-27 15:11:44,389 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:11:44,390 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:11:44,408 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-05-27 15:12:00,810 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 15:12:00,811 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 15:12:00,812 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 15:12:00,813 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-27 15:12:00,813 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 15:12:00,813 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 15:12:00,814 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 15:12:00,814 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-27 15:12:00,815 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-27 15:12:00,815 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 15:12:00,815 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-27 15:12:00,815 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-27 15:12:00,816 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 15:12:00,816 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 15:12:00,817 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 15:12:00,817 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 15:12:00,818 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 15:12:00,818 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 15:12:00,819 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 15:12:00,819 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 15:12:00,820 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 15:12:00,820 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 15:12:00,821 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-27 15:12:00,823 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 15:12:00,823 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'YES')
2020-05-27 15:12:00,825 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:12:00,825 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:12:00,825 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:12:00,825 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:12:00,825 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:12:00,830 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 15:12:00,830 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightblue', 'Darkblue', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 15:12:00,831 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:12:00,832 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 15:12:00,832 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 15:12:00,832 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 15:12:00,832 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 15:12:00,837 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 15:12:00,837 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 15:12:00,839 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:12:00,839 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:12:00,839 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:12:00,840 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:12:00,840 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:12:00,840 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:12:00,840 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:12:00,840 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 15:12:00,844 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 15:12:00,844 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 15:12:00,846 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:12:00,846 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:12:00,846 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:12:00,846 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:12:00,846 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:12:00,846 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:12:00,847 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 15:12:00,849 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-27 15:12:00,947 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-05-27 15:12:00,951 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 15:12:00,951 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-05-27 15:12:00,952 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 15:12:00,953 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 15:12:00,971 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-05-27 15:27:04,160 INFO sqlalchemy.engine.base.Engine MainThread : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 15:27:04,160 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-05-27 15:27:04,162 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('Variable_name', 'Value')
2020-05-27 15:27:04,163 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('sql_mode', '')
2020-05-27 15:27:04,163 INFO sqlalchemy.engine.base.Engine MainThread : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 15:27:04,163 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-05-27 15:27:04,164 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('Variable_name', 'Value')
2020-05-27 15:27:04,164 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('lower_case_table_names', '0')
2020-05-27 15:27:04,165 INFO sqlalchemy.engine.base.Engine MainThread : SELECT DATABASE()
2020-05-27 15:27:04,165 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-05-27 15:27:04,165 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('DATABASE()',)
2020-05-27 15:27:04,165 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('fmapp',)
2020-05-27 15:27:04,165 INFO sqlalchemy.engine.base.Engine MainThread : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 15:27:04,165 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-05-27 15:27:04,166 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 15:27:04,166 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 15:27:04,167 INFO sqlalchemy.engine.base.Engine MainThread : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 15:27:04,167 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-05-27 15:27:04,168 INFO sqlalchemy.engine.base.Engine MainThread : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 15:27:04,168 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-05-27 15:27:04,169 INFO sqlalchemy.engine.base.Engine MainThread : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 15:27:04,169 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-05-27 15:27:04,169 INFO sqlalchemy.engine.base.Engine MainThread : BEGIN (implicit)
2020-05-27 15:35:55,312 INFO sqlalchemy.engine.base.Engine MainThread : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 15:35:55,313 INFO sqlalchemy.engine.base.Engine MainThread : ('Mistyrose', 'Firebrick', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 23, 59), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 23, 59), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 23, 59), 'YES')
2020-05-27 15:35:55,316 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 15:35:55,317 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:35:55,317 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:35:55,317 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:35:55,317 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Yes', 'Mistyrose', 'Firebrick', 'Date Event')
2020-05-27 15:57:00,418 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-05-27 15:57:00,418 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 23, 59), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 23, 59), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 23, 59))
2020-05-27 15:57:00,423 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('start', 'end', 'title', 'description', 'type')
2020-05-27 15:57:00,423 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'No')
2020-05-27 15:57:00,423 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No')
2020-05-27 15:57:00,423 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes')
2020-05-27 15:57:00,423 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes')
2020-05-27 15:57:00,424 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'No')
2020-05-27 15:57:00,424 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed')
2020-05-27 15:57:00,424 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Yes')
2020-05-27 15:57:00,424 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No')
2020-05-27 15:57:00,424 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change')
2020-05-27 15:57:00,424 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Yes')
2020-05-27 16:03:14,728 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-05-27 16:03:14,730 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:03:14,730 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-05-27 16:03:14,732 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:03:14,732 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:03:14,735 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:03:14,735 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-05-27 16:03:14,736 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:03:14,737 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:03:14,740 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:03:14,740 INFO sqlalchemy.engine.base.Engine Thread-4 : (0,)
2020-05-27 16:03:14,741 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:03:14,741 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:03:14,741 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:03:14,741 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:03:14,741 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:03:14,741 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:03:14,741 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:03:14,741 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:03:14,741 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:03:14,742 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:03:14,742 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:03:14,742 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:03:14,742 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:03:14,742 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:03:14,742 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:03:14,742 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:03:14,742 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:03:14,742 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:03:14,742 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:03:14,742 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:03:14,742 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:03:14,743 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:03:14,743 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:03:14,743 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:03:14,745 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-05-27 16:03:14,745 INFO sqlalchemy.engine.base.Engine Thread-4 : (0, 1)
2020-05-27 16:03:14,745 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:03:14,746 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:03:14,747 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 16:03:14,747 INFO sqlalchemy.engine.base.Engine Thread-4 : (66,)
2020-05-27 16:03:14,748 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:03:14,748 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:03:14,748 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:03:14,824 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:03:14,824 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-05-27 16:03:14,825 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:03:14,826 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:03:14,829 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-05-27 16:03:19,120 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-05-27 16:03:19,121 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:03:19,121 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-05-27 16:03:19,121 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:03:19,122 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:03:19,124 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:03:19,124 INFO sqlalchemy.engine.base.Engine Thread-14 : ('philip', 1, 1)
2020-05-27 16:03:19,125 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:03:19,125 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:03:19,128 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:03:19,128 INFO sqlalchemy.engine.base.Engine Thread-14 : (0,)
2020-05-27 16:03:19,129 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:03:19,129 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:03:19,129 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:03:19,129 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:03:19,129 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:03:19,129 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:03:19,129 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:03:19,130 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:03:19,130 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:03:19,130 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:03:19,130 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:03:19,130 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:03:19,130 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:03:19,130 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:03:19,130 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:03:19,130 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:03:19,130 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:03:19,130 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:03:19,130 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:03:19,131 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:03:19,131 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:03:19,131 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:03:19,131 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:03:19,131 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:03:19,133 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 16:03:19,133 INFO sqlalchemy.engine.base.Engine Thread-14 : ('127',)
2020-05-27 16:03:19,133 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:03:19,134 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 16:03:19,134 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:03:19,134 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 16:03:19,134 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 16:03:19,138 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:03:19,138 INFO sqlalchemy.engine.base.Engine Thread-14 : ('philip', 1, 1)
2020-05-27 16:03:19,138 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:03:19,139 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:03:19,142 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-05-27 16:03:22,002 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-05-27 16:03:22,003 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:03:22,003 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-05-27 16:03:22,004 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:03:22,004 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:03:22,006 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:03:22,007 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-05-27 16:03:22,008 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:03:22,008 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:03:22,009 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:03:22,009 INFO sqlalchemy.engine.base.Engine Thread-24 : ('130', 1)
2020-05-27 16:03:22,010 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:03:22,010 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 16:03:22,012 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:03:22,012 INFO sqlalchemy.engine.base.Engine Thread-24 : (0,)
2020-05-27 16:03:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:03:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:03:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:03:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:03:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:03:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:03:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:03:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:03:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:03:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:03:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:03:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:03:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:03:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:03:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:03:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:03:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:03:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:03:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:03:22,015 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:03:22,015 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:03:22,015 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:03:22,015 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:03:22,015 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:03:22,017 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:03:22,017 INFO sqlalchemy.engine.base.Engine Thread-24 : (0,)
2020-05-27 16:03:22,018 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:03:22,018 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:03:22,018 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:03:22,018 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:03:22,018 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:03:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 16:03:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:03:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:03:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:03:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:03:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:03:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:03:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:03:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:03:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:03:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:03:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:03:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:03:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:03:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:03:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:03:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:03:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:03:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:03:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:03:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:03:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:03:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:03:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:03:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:03:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:03:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:03:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:03:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:03:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:03:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:03:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:03:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:03:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:03:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:03:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:03:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:03:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:03:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:03:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:03:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:03:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:03:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:03:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 16:03:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:03:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:03:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:03:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:03:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:03:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:03:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:03:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:03:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:03:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:03:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:03:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:03:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:03:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 16:03:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:03:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:03:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:03:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:03:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:03:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:03:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:03:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:03:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:03:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:03:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:03:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:03:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:03:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:03:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:03:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:03:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:03:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:03:22,057 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:03:22,057 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-05-27 16:03:22,058 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:03:22,058 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:03:22,062 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-05-27 16:04:44,877 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-05-27 16:04:44,879 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:04:44,879 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-05-27 16:04:44,880 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:04:44,881 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:04:44,883 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:04:44,883 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-05-27 16:04:44,884 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:04:44,884 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:04:44,885 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:04:44,886 INFO sqlalchemy.engine.base.Engine Thread-34 : ('130', 1)
2020-05-27 16:04:44,886 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:04:44,886 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 16:04:44,890 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:04:44,890 INFO sqlalchemy.engine.base.Engine Thread-34 : (0,)
2020-05-27 16:04:44,891 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:04:44,891 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:04:44,892 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:04:44,892 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:04:44,892 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:04:44,892 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:04:44,892 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:04:44,892 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:04:44,892 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:04:44,892 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:04:44,892 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:04:44,892 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:04:44,893 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:04:44,893 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:04:44,893 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:04:44,893 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:04:44,893 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:04:44,893 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:04:44,893 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:04:44,893 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:04:44,893 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:04:44,893 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:04:44,894 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:04:44,894 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:04:44,895 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:04:44,896 INFO sqlalchemy.engine.base.Engine Thread-34 : (0,)
2020-05-27 16:04:44,897 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:04:44,897 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:04:44,897 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:04:44,897 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:04:44,897 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:04:44,897 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 16:04:44,897 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:04:44,897 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:04:44,898 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:04:44,898 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:04:44,898 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:04:44,898 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:04:44,898 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:04:44,898 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:04:44,898 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:04:44,898 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:04:44,898 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:04:44,898 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:04:44,899 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:04:44,899 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:04:44,899 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:04:44,899 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:04:44,899 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:04:44,899 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:04:44,899 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:04:44,899 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:04:44,899 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:04:44,899 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:04:44,900 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:04:44,900 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:04:44,900 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:04:44,900 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:04:44,900 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:04:44,900 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:04:44,900 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:04:44,900 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:04:44,900 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:04:44,900 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:04:44,901 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:04:44,901 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:04:44,901 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:04:44,901 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:04:44,901 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:04:44,901 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:04:44,901 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:04:44,901 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:04:44,901 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:04:44,901 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:04:44,901 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 16:04:44,902 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:04:44,902 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:04:44,902 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:04:44,902 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:04:44,902 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:04:44,902 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:04:44,902 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:04:44,902 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:04:44,902 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:04:44,903 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:04:44,903 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:04:44,903 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:04:44,903 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:04:44,903 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (130, 'No Changes Allowed', 'No Changes Allowed', 127, 0, 0, 1)
2020-05-27 16:04:44,903 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:04:44,903 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:04:44,903 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:04:44,903 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:04:44,903 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:04:44,903 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:04:44,904 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:04:44,904 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:04:44,904 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:04:44,904 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:04:44,904 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:04:44,904 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:04:44,904 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:04:44,904 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:04:44,904 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:04:44,904 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:04:44,905 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:04:44,905 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:04:44,909 INFO sqlalchemy.engine.base.Engine Thread-34 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 16:04:44,909 INFO sqlalchemy.engine.base.Engine Thread-34 : ('130', '#FFE4E1', 130)
2020-05-27 16:04:44,910 INFO sqlalchemy.engine.base.Engine Thread-34 : COMMIT
2020-05-27 16:04:44,949 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-05-27 16:04:44,950 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:04:44,950 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-05-27 16:04:44,951 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:04:44,951 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:04:44,954 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:04:44,954 INFO sqlalchemy.engine.base.Engine Thread-35 : ('philip', 1, 1)
2020-05-27 16:04:44,954 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:04:44,955 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:04:44,957 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:04:44,957 INFO sqlalchemy.engine.base.Engine Thread-35 : (0,)
2020-05-27 16:04:44,957 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:04:44,958 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:04:44,958 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:04:44,958 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:04:44,958 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:04:44,958 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:04:44,958 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:04:44,958 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:04:44,958 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:04:44,958 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:04:44,959 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:04:44,959 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:04:44,959 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:04:44,959 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:04:44,959 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:04:44,959 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:04:44,959 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:04:44,959 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:04:44,959 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:04:44,959 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:04:44,959 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:04:44,959 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:04:44,960 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:04:44,960 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:04:44,962 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:04:44,962 INFO sqlalchemy.engine.base.Engine Thread-35 : (127, 1)
2020-05-27 16:04:44,962 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:04:44,963 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:04:44,964 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 16:04:44,964 INFO sqlalchemy.engine.base.Engine Thread-35 : (127,)
2020-05-27 16:04:44,964 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:04:44,965 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 16:04:44,965 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:04:44,965 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:04:44,965 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 16:04:44,970 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:04:44,970 INFO sqlalchemy.engine.base.Engine Thread-35 : ('philip', 1, 1)
2020-05-27 16:04:44,970 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:04:44,971 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:04:44,974 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-05-27 16:04:47,474 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-05-27 16:04:47,475 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:04:47,475 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-05-27 16:04:47,476 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:04:47,476 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:04:47,478 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:04:47,479 INFO sqlalchemy.engine.base.Engine Thread-45 : ('philip', 1, 1)
2020-05-27 16:04:47,479 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:04:47,479 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:04:47,481 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:04:47,481 INFO sqlalchemy.engine.base.Engine Thread-45 : ('128', 1)
2020-05-27 16:04:47,481 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:04:47,482 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 16:04:47,484 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:04:47,484 INFO sqlalchemy.engine.base.Engine Thread-45 : (0,)
2020-05-27 16:04:47,484 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:04:47,485 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:04:47,485 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:04:47,485 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:04:47,485 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:04:47,485 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:04:47,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:04:47,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:04:47,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:04:47,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:04:47,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:04:47,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:04:47,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:04:47,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:04:47,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:04:47,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:04:47,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:04:47,486 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:04:47,487 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:04:47,487 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:04:47,487 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:04:47,487 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:04:47,487 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:04:47,487 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:04:47,489 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:04:47,489 INFO sqlalchemy.engine.base.Engine Thread-45 : (0,)
2020-05-27 16:04:47,490 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:04:47,490 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:04:47,491 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:04:47,491 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:04:47,491 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:04:47,491 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 16:04:47,491 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:04:47,491 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:04:47,491 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:04:47,491 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:04:47,491 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:04:47,491 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:04:47,492 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:04:47,492 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:04:47,492 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:04:47,492 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:04:47,492 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:04:47,492 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:04:47,492 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:04:47,492 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:04:47,492 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:04:47,492 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:04:47,492 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:04:47,493 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:04:47,493 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:04:47,493 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:04:47,493 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:04:47,493 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:04:47,493 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:04:47,493 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:04:47,493 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:04:47,493 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:04:47,493 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:04:47,493 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:04:47,494 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:04:47,494 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:04:47,494 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:04:47,494 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:04:47,494 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:04:47,494 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:04:47,494 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:04:47,494 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:04:47,495 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:04:47,495 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:04:47,495 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:04:47,495 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:04:47,495 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:04:47,495 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:04:47,495 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 16:04:47,495 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:04:47,495 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:04:47,495 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:04:47,496 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:04:47,496 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:04:47,496 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:04:47,496 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:04:47,496 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:04:47,496 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:04:47,496 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:04:47,496 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:04:47,496 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:04:47,496 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:04:47,497 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:04:47,497 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:04:47,497 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:04:47,497 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:04:47,497 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:04:47,497 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:04:47,497 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:04:47,497 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:04:47,497 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:04:47,498 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:04:47,498 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:04:47,498 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:04:47,498 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:04:47,498 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:04:47,498 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:04:47,498 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:04:47,498 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:04:47,498 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:04:47,498 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:04:47,504 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:04:47,504 INFO sqlalchemy.engine.base.Engine Thread-45 : ('philip', 1, 1)
2020-05-27 16:04:47,505 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:04:47,505 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:04:47,509 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-05-27 16:05:08,571 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-05-27 16:05:08,572 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:05:08,572 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-05-27 16:05:08,572 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:05:08,573 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:05:08,575 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:05:08,575 INFO sqlalchemy.engine.base.Engine Thread-55 : ('philip', 1, 1)
2020-05-27 16:05:08,576 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:05:08,576 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:05:08,577 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:05:08,577 INFO sqlalchemy.engine.base.Engine Thread-55 : ('128', 1)
2020-05-27 16:05:08,577 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:05:08,578 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 16:05:08,580 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:05:08,580 INFO sqlalchemy.engine.base.Engine Thread-55 : (0,)
2020-05-27 16:05:08,581 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:05:08,581 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:05:08,581 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:05:08,581 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:05:08,582 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:05:08,582 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:05:08,582 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:05:08,582 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:05:08,582 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:05:08,582 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:05:08,582 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:05:08,582 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:05:08,582 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:05:08,582 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:05:08,582 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:05:08,583 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:05:08,583 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:05:08,583 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:05:08,583 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:05:08,583 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:05:08,583 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:05:08,583 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:05:08,583 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:05:08,583 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:05:08,585 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:05:08,585 INFO sqlalchemy.engine.base.Engine Thread-55 : (0,)
2020-05-27 16:05:08,586 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:05:08,586 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:05:08,586 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:05:08,586 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:05:08,586 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:05:08,586 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 16:05:08,587 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:05:08,587 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:05:08,587 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:05:08,587 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:05:08,587 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:05:08,587 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:05:08,587 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:05:08,587 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:05:08,587 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:05:08,587 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:05:08,587 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:05:08,587 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:05:08,587 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:05:08,588 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:05:08,588 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:05:08,588 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:05:08,588 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:05:08,588 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:05:08,588 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:05:08,588 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:05:08,588 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:05:08,588 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:05:08,588 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:05:08,588 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:05:08,588 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:05:08,589 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:05:08,589 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:05:08,589 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:05:08,589 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:05:08,589 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:05:08,589 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:05:08,589 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:05:08,589 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:05:08,589 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:05:08,589 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:05:08,589 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:05:08,589 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:05:08,589 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:05:08,590 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:05:08,590 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:05:08,590 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:05:08,590 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:05:08,590 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (128, 'Informational', 'Informational', 127, 0, 0, 1)
2020-05-27 16:05:08,590 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:05:08,590 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:05:08,590 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:05:08,590 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:05:08,590 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:05:08,590 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:05:08,590 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:05:08,590 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:05:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:05:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:05:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:05:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:05:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:05:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:05:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:05:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:05:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:05:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:05:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:05:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:05:08,591 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:05:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:05:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:05:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:05:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:05:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:05:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:05:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:05:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:05:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:05:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:05:08,592 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:05:08,595 INFO sqlalchemy.engine.base.Engine Thread-55 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 16:05:08,595 INFO sqlalchemy.engine.base.Engine Thread-55 : ('128', '#ADD8E6', 128)
2020-05-27 16:05:08,596 INFO sqlalchemy.engine.base.Engine Thread-55 : COMMIT
2020-05-27 16:05:08,649 INFO sqlalchemy.engine.base.Engine Thread-56 : BEGIN (implicit)
2020-05-27 16:05:08,650 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:05:08,650 INFO sqlalchemy.engine.base.Engine Thread-56 : (1, 1)
2020-05-27 16:05:08,650 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:05:08,651 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:05:08,653 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:05:08,653 INFO sqlalchemy.engine.base.Engine Thread-56 : ('philip', 1, 1)
2020-05-27 16:05:08,654 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:05:08,654 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:05:08,656 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:05:08,656 INFO sqlalchemy.engine.base.Engine Thread-56 : (0,)
2020-05-27 16:05:08,656 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:05:08,657 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:05:08,657 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:05:08,657 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:05:08,657 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:05:08,657 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:05:08,657 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:05:08,657 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:05:08,657 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:05:08,657 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:05:08,657 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:05:08,658 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:05:08,658 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:05:08,658 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:05:08,658 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:05:08,658 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:05:08,658 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:05:08,658 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:05:08,658 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:05:08,658 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:05:08,658 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:05:08,658 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:05:08,659 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:05:08,659 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:05:08,661 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:05:08,661 INFO sqlalchemy.engine.base.Engine Thread-56 : (127, 1)
2020-05-27 16:05:08,661 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:05:08,661 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:05:08,663 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 16:05:08,663 INFO sqlalchemy.engine.base.Engine Thread-56 : (127,)
2020-05-27 16:05:08,663 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:05:08,663 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:05:08,663 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:05:08,664 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:05:08,664 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 16:05:08,668 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:05:08,668 INFO sqlalchemy.engine.base.Engine Thread-56 : ('philip', 1, 1)
2020-05-27 16:05:08,669 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:05:08,669 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:05:08,673 INFO sqlalchemy.engine.base.Engine Thread-56 : ROLLBACK
2020-05-27 16:05:11,686 INFO sqlalchemy.engine.base.Engine Thread-66 : BEGIN (implicit)
2020-05-27 16:05:11,688 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:05:11,688 INFO sqlalchemy.engine.base.Engine Thread-66 : (1, 1)
2020-05-27 16:05:11,689 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:05:11,689 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:05:11,691 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:05:11,691 INFO sqlalchemy.engine.base.Engine Thread-66 : ('philip', 1, 1)
2020-05-27 16:05:11,692 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:05:11,692 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:05:11,693 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:05:11,693 INFO sqlalchemy.engine.base.Engine Thread-66 : ('129', 1)
2020-05-27 16:05:11,694 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:05:11,694 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:05:11,696 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:05:11,696 INFO sqlalchemy.engine.base.Engine Thread-66 : (0,)
2020-05-27 16:05:11,696 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:05:11,697 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:05:11,697 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:05:11,697 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:05:11,697 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:05:11,697 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:05:11,697 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:05:11,697 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:05:11,697 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:05:11,697 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:05:11,697 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:05:11,698 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:05:11,698 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:05:11,698 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:05:11,698 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:05:11,698 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:05:11,698 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:05:11,698 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:05:11,698 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:05:11,698 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:05:11,698 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:05:11,698 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:05:11,698 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:05:11,698 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:05:11,700 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:05:11,700 INFO sqlalchemy.engine.base.Engine Thread-66 : (0,)
2020-05-27 16:05:11,701 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:05:11,701 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:05:11,702 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:05:11,702 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:05:11,702 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:05:11,702 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 16:05:11,702 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:05:11,702 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:05:11,702 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:05:11,702 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:05:11,702 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:05:11,702 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:05:11,702 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:05:11,702 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:05:11,703 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:05:11,703 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:05:11,703 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:05:11,703 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:05:11,703 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:05:11,703 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:05:11,703 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:05:11,703 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:05:11,703 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:05:11,703 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:05:11,703 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:05:11,703 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:05:11,703 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:05:11,704 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:05:11,704 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:05:11,704 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:05:11,704 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:05:11,704 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:05:11,704 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:05:11,704 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:05:11,704 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:05:11,704 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:05:11,704 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:05:11,704 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:05:11,704 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:05:11,704 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:05:11,705 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:05:11,705 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:05:11,705 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:05:11,705 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:05:11,705 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:05:11,705 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:05:11,705 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:05:11,705 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:05:11,705 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:05:11,705 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:05:11,705 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:05:11,705 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:05:11,705 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:05:11,706 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:05:11,706 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:05:11,706 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:05:11,706 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:05:11,706 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:05:11,706 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:05:11,706 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:05:11,706 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:05:11,706 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:05:11,706 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:05:11,706 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:05:11,706 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:05:11,707 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:05:11,707 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:05:11,707 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:05:11,707 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:05:11,707 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:05:11,707 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:05:11,707 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:05:11,707 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:05:11,707 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:05:11,707 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:05:11,707 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:05:11,707 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:05:11,707 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:05:11,708 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:05:11,708 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:05:11,708 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:05:11,714 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:05:11,714 INFO sqlalchemy.engine.base.Engine Thread-66 : ('philip', 1, 1)
2020-05-27 16:05:11,715 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:05:11,715 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:05:11,719 INFO sqlalchemy.engine.base.Engine Thread-66 : ROLLBACK
2020-05-27 16:06:32,665 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-05-27 16:06:32,666 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:06:32,666 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-05-27 16:06:32,667 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:32,668 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:32,670 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:06:32,670 INFO sqlalchemy.engine.base.Engine Thread-76 : ('philip', 1, 1)
2020-05-27 16:06:32,671 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:32,671 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:32,673 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:06:32,674 INFO sqlalchemy.engine.base.Engine Thread-76 : (0,)
2020-05-27 16:06:32,674 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:32,675 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:06:32,675 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:06:32,675 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:06:32,675 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:06:32,675 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:06:32,675 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:06:32,675 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:06:32,675 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:06:32,675 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:06:32,675 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:06:32,676 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:06:32,676 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:06:32,676 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:06:32,676 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:06:32,676 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:06:32,676 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:06:32,676 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:06:32,676 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:06:32,676 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:06:32,676 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:06:32,677 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:06:32,677 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:06:32,677 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:06:32,679 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:06:32,679 INFO sqlalchemy.engine.base.Engine Thread-76 : (127, 1)
2020-05-27 16:06:32,680 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:32,680 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:06:32,681 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 16:06:32,682 INFO sqlalchemy.engine.base.Engine Thread-76 : (127,)
2020-05-27 16:06:32,682 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:32,683 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:06:32,683 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:06:32,683 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:06:32,683 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 16:06:32,688 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:06:32,688 INFO sqlalchemy.engine.base.Engine Thread-76 : ('philip', 1, 1)
2020-05-27 16:06:32,688 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:32,689 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:32,693 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-05-27 16:06:34,996 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-05-27 16:06:34,997 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:06:34,997 INFO sqlalchemy.engine.base.Engine Thread-86 : (1, 1)
2020-05-27 16:06:34,998 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:34,999 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:35,001 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:06:35,001 INFO sqlalchemy.engine.base.Engine Thread-86 : ('philip', 1, 1)
2020-05-27 16:06:35,002 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:35,002 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:35,003 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:06:35,004 INFO sqlalchemy.engine.base.Engine Thread-86 : ('131', 1)
2020-05-27 16:06:35,004 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:35,004 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 16:06:35,006 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:06:35,007 INFO sqlalchemy.engine.base.Engine Thread-86 : (0,)
2020-05-27 16:06:35,007 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:35,008 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:06:35,008 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:06:35,008 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:06:35,008 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:06:35,008 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:06:35,008 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:06:35,008 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:06:35,008 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:06:35,008 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:06:35,008 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:06:35,009 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:06:35,009 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:06:35,009 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:06:35,009 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:06:35,009 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:06:35,009 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:06:35,009 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:06:35,009 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:06:35,009 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:06:35,009 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:06:35,009 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:06:35,010 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:06:35,010 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:06:35,012 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:06:35,012 INFO sqlalchemy.engine.base.Engine Thread-86 : (0,)
2020-05-27 16:06:35,013 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:35,013 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:06:35,014 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:06:35,014 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:06:35,014 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:06:35,014 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 16:06:35,014 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:06:35,014 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:06:35,014 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:06:35,014 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:06:35,015 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:06:35,015 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:06:35,015 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:06:35,015 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:06:35,015 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:06:35,015 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:06:35,015 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:06:35,015 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:06:35,015 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:06:35,016 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:06:35,016 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:06:35,016 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:06:35,016 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:06:35,016 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:06:35,016 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:06:35,016 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:06:35,016 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:06:35,016 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:06:35,016 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:06:35,017 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:06:35,017 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:06:35,017 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:06:35,017 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:06:35,017 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:06:35,017 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:06:35,017 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:06:35,017 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:06:35,018 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:06:35,018 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:06:35,018 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:06:35,018 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:06:35,018 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:06:35,018 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:06:35,018 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:06:35,018 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:06:35,018 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:06:35,018 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:06:35,019 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:06:35,019 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:06:35,019 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:06:35,019 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:06:35,019 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:06:35,019 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:06:35,019 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:06:35,019 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:06:35,019 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:06:35,020 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:06:35,020 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:06:35,020 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:06:35,020 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:06:35,020 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:06:35,020 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:06:35,020 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:06:35,020 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:06:35,020 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:06:35,020 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:06:35,021 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:06:35,021 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:06:35,021 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:06:35,021 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:06:35,021 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:06:35,021 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:06:35,021 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:06:35,021 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:06:35,021 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:06:35,021 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:06:35,022 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:06:35,022 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:06:35,022 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:06:35,022 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:06:35,022 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:06:35,028 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:06:35,028 INFO sqlalchemy.engine.base.Engine Thread-86 : ('philip', 1, 1)
2020-05-27 16:06:35,028 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:35,029 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:35,032 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-05-27 16:06:37,729 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-05-27 16:06:37,730 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:06:37,731 INFO sqlalchemy.engine.base.Engine Thread-96 : (1, 1)
2020-05-27 16:06:37,731 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:37,731 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:37,734 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:06:37,734 INFO sqlalchemy.engine.base.Engine Thread-96 : ('philip', 1, 1)
2020-05-27 16:06:37,735 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:37,735 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:37,736 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:06:37,736 INFO sqlalchemy.engine.base.Engine Thread-96 : ('131', 1)
2020-05-27 16:06:37,737 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:37,737 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 16:06:37,740 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:06:37,740 INFO sqlalchemy.engine.base.Engine Thread-96 : (0,)
2020-05-27 16:06:37,741 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:37,741 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:06:37,741 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:06:37,741 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:06:37,741 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:06:37,741 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:06:37,742 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:06:37,742 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:06:37,742 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:06:37,742 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:06:37,742 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:06:37,742 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:06:37,742 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:06:37,742 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:06:37,742 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:06:37,742 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:06:37,742 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:06:37,743 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:06:37,743 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:06:37,743 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:06:37,743 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:06:37,743 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:06:37,743 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:06:37,743 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:06:37,745 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:06:37,745 INFO sqlalchemy.engine.base.Engine Thread-96 : (0,)
2020-05-27 16:06:37,746 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:37,747 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:06:37,747 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:06:37,747 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:06:37,747 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:06:37,747 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (131, 'BaU Firewall Change', 'BaU Firewall Change', 127, 0, 0, 1)
2020-05-27 16:06:37,747 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:06:37,747 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:06:37,747 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:06:37,747 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:06:37,747 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:06:37,748 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:06:37,748 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:06:37,748 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:06:37,748 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:06:37,748 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:06:37,748 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:06:37,748 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:06:37,748 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:06:37,748 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:06:37,748 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:06:37,748 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:06:37,749 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:06:37,749 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:06:37,749 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:06:37,749 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:06:37,749 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:06:37,749 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:06:37,749 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:06:37,749 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:06:37,749 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:06:37,749 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:06:37,749 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:06:37,749 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:06:37,749 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:06:37,750 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:06:37,750 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:06:37,750 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:06:37,750 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:06:37,750 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:06:37,750 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:06:37,750 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:06:37,750 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:06:37,750 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:06:37,750 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:06:37,750 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:06:37,750 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:06:37,750 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:06:37,751 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:06:37,751 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:06:37,751 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:06:37,751 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:06:37,751 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:06:37,751 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:06:37,751 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:06:37,751 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:06:37,751 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:06:37,751 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:06:37,751 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:06:37,751 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:06:37,751 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:06:37,752 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:06:37,752 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:06:37,752 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:06:37,752 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:06:37,752 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:06:37,752 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:06:37,752 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:06:37,752 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:06:37,752 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:06:37,752 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:06:37,752 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:06:37,753 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:06:37,753 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:06:37,753 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:06:37,753 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:06:37,753 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:06:37,753 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:06:37,753 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:06:37,753 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:06:37,753 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:06:37,756 INFO sqlalchemy.engine.base.Engine Thread-96 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 16:06:37,756 INFO sqlalchemy.engine.base.Engine Thread-96 : ('131', '#FFDAB9', 131)
2020-05-27 16:06:37,757 INFO sqlalchemy.engine.base.Engine Thread-96 : COMMIT
2020-05-27 16:06:37,792 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-05-27 16:06:37,793 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:06:37,793 INFO sqlalchemy.engine.base.Engine Thread-97 : (1, 1)
2020-05-27 16:06:37,794 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:37,794 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:37,796 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:06:37,797 INFO sqlalchemy.engine.base.Engine Thread-97 : ('philip', 1, 1)
2020-05-27 16:06:37,797 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:37,798 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:37,800 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:06:37,800 INFO sqlalchemy.engine.base.Engine Thread-97 : (0,)
2020-05-27 16:06:37,801 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:37,801 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:06:37,801 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:06:37,801 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:06:37,801 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:06:37,801 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:06:37,802 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:06:37,802 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:06:37,802 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:06:37,802 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:06:37,802 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:06:37,802 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:06:37,802 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:06:37,802 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:06:37,802 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:06:37,802 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:06:37,803 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:06:37,803 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:06:37,803 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:06:37,803 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:06:37,803 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:06:37,803 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:06:37,803 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:06:37,803 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:06:37,806 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:06:37,806 INFO sqlalchemy.engine.base.Engine Thread-97 : (127, 1)
2020-05-27 16:06:37,806 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:37,806 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:06:37,808 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 16:06:37,808 INFO sqlalchemy.engine.base.Engine Thread-97 : (127,)
2020-05-27 16:06:37,808 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:37,809 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:06:37,809 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:06:37,809 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:06:37,809 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:06:37,813 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:06:37,813 INFO sqlalchemy.engine.base.Engine Thread-97 : ('philip', 1, 1)
2020-05-27 16:06:37,814 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:37,814 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:37,817 INFO sqlalchemy.engine.base.Engine Thread-97 : ROLLBACK
2020-05-27 16:06:39,640 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-05-27 16:06:39,641 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:06:39,641 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-05-27 16:06:39,642 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:39,643 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:39,645 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:06:39,645 INFO sqlalchemy.engine.base.Engine Thread-107 : ('philip', 1, 1)
2020-05-27 16:06:39,646 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:39,646 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:39,647 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:06:39,647 INFO sqlalchemy.engine.base.Engine Thread-107 : ('129', 1)
2020-05-27 16:06:39,648 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:39,648 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:06:39,650 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:06:39,650 INFO sqlalchemy.engine.base.Engine Thread-107 : (0,)
2020-05-27 16:06:39,651 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:39,651 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:06:39,651 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:06:39,651 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:06:39,651 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:06:39,651 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:06:39,651 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:06:39,651 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:06:39,651 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:06:39,652 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:06:39,652 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:06:39,652 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:06:39,652 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:06:39,652 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:06:39,652 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:06:39,652 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:06:39,652 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:06:39,652 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:06:39,652 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:06:39,652 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:06:39,653 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:06:39,653 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:06:39,653 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:06:39,653 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:06:39,655 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:06:39,655 INFO sqlalchemy.engine.base.Engine Thread-107 : (0,)
2020-05-27 16:06:39,656 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:06:39,656 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:06:39,656 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:06:39,656 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:06:39,656 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:06:39,656 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:06:39,656 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:06:39,656 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:06:39,657 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:06:39,657 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:06:39,657 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:06:39,657 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:06:39,657 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:06:39,657 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:06:39,657 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:06:39,657 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:06:39,657 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:06:39,657 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:06:39,657 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:06:39,658 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:06:39,658 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:06:39,658 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:06:39,658 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:06:39,658 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:06:39,658 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:06:39,658 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:06:39,658 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:06:39,658 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:06:39,658 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:06:39,658 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:06:39,659 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:06:39,659 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:06:39,659 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:06:39,659 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:06:39,659 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:06:39,659 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:06:39,659 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:06:39,659 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:06:39,659 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:06:39,659 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:06:39,659 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:06:39,659 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:06:39,660 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:06:39,660 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:06:39,660 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:06:39,660 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:06:39,660 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:06:39,660 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:06:39,660 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:06:39,660 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:06:39,660 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:06:39,660 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:06:39,660 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:06:39,661 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:06:39,661 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:06:39,661 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:06:39,661 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:06:39,661 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:06:39,661 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:06:39,661 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:06:39,661 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:06:39,661 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:06:39,661 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:06:39,661 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:06:39,662 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:06:39,662 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:06:39,662 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:06:39,662 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:06:39,662 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:06:39,662 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:06:39,662 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:06:39,662 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:06:39,662 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:06:39,662 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:06:39,662 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:06:39,663 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:06:39,663 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:06:39,663 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:06:39,663 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:06:39,663 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:06:39,663 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:06:39,669 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:06:39,669 INFO sqlalchemy.engine.base.Engine Thread-107 : ('philip', 1, 1)
2020-05-27 16:06:39,670 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:06:39,670 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:06:39,674 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-05-27 16:07:11,199 INFO sqlalchemy.engine.base.Engine Thread-117 : BEGIN (implicit)
2020-05-27 16:07:11,200 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:07:11,201 INFO sqlalchemy.engine.base.Engine Thread-117 : (1, 1)
2020-05-27 16:07:11,201 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:07:11,201 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:07:11,204 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:07:11,204 INFO sqlalchemy.engine.base.Engine Thread-117 : ('philip', 1, 1)
2020-05-27 16:07:11,204 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:07:11,205 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:07:11,206 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:07:11,206 INFO sqlalchemy.engine.base.Engine Thread-117 : ('129', 1)
2020-05-27 16:07:11,207 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:07:11,207 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:07:11,209 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:07:11,210 INFO sqlalchemy.engine.base.Engine Thread-117 : (0,)
2020-05-27 16:07:11,210 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:07:11,210 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:07:11,210 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:07:11,211 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:07:11,211 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:07:11,211 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:07:11,211 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:07:11,211 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:07:11,211 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:07:11,211 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:07:11,211 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:07:11,211 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:07:11,211 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:07:11,211 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:07:11,212 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:07:11,212 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:07:11,212 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:07:11,212 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:07:11,212 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:07:11,212 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:07:11,212 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:07:11,212 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:07:11,212 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:07:11,212 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:07:11,215 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:07:11,215 INFO sqlalchemy.engine.base.Engine Thread-117 : (0,)
2020-05-27 16:07:11,216 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:07:11,216 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:07:11,216 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:07:11,216 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:07:11,216 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:07:11,216 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:07:11,216 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:07:11,217 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:07:11,217 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:07:11,217 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:07:11,217 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:07:11,217 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:07:11,217 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:07:11,217 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:07:11,217 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:07:11,217 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:07:11,217 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:07:11,217 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:07:11,218 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:07:11,218 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:07:11,218 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:07:11,218 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (129, 'Heightened Awareness Period (HAP)', 'Heightened Awareness Period (HAP)', 127, 0, 0, 1)
2020-05-27 16:07:11,218 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:07:11,218 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:07:11,218 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:07:11,218 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:07:11,218 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:07:11,218 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:07:11,218 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:07:11,218 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:07:11,218 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:07:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:07:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:07:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:07:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:07:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:07:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:07:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:07:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:07:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:07:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:07:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:07:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:07:11,220 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:07:11,220 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:07:11,220 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:07:11,220 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:07:11,220 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:07:11,220 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:07:11,220 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:07:11,220 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:07:11,220 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:07:11,220 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:07:11,220 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:07:11,220 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:07:11,221 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:07:11,221 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:07:11,221 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:07:11,221 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:07:11,221 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:07:11,221 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:07:11,221 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:07:11,221 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:07:11,221 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:07:11,221 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:07:11,221 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:07:11,222 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:07:11,222 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:07:11,222 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:07:11,222 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:07:11,222 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:07:11,222 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:07:11,222 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:07:11,222 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:07:11,222 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:07:11,222 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:07:11,222 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:07:11,222 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:07:11,223 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:07:11,223 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:07:11,223 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:07:11,226 INFO sqlalchemy.engine.base.Engine Thread-117 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 16:07:11,226 INFO sqlalchemy.engine.base.Engine Thread-117 : ('129', '#48D1CC', 129)
2020-05-27 16:07:11,227 INFO sqlalchemy.engine.base.Engine Thread-117 : COMMIT
2020-05-27 16:07:11,260 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-05-27 16:07:11,261 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:07:11,261 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-05-27 16:07:11,262 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:07:11,262 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:07:11,264 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:07:11,265 INFO sqlalchemy.engine.base.Engine Thread-118 : ('philip', 1, 1)
2020-05-27 16:07:11,265 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:07:11,266 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:07:11,267 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:07:11,267 INFO sqlalchemy.engine.base.Engine Thread-118 : (0,)
2020-05-27 16:07:11,268 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:07:11,268 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:07:11,268 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:07:11,268 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:07:11,269 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:07:11,269 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:07:11,269 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:07:11,269 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:07:11,269 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:07:11,269 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:07:11,269 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:07:11,269 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:07:11,269 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:07:11,269 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:07:11,269 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:07:11,269 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:07:11,270 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:07:11,270 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:07:11,270 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:07:11,270 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:07:11,270 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:07:11,270 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:07:11,270 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:07:11,270 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:07:11,272 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:07:11,272 INFO sqlalchemy.engine.base.Engine Thread-118 : (127, 1)
2020-05-27 16:07:11,273 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:07:11,273 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:07:11,274 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 16:07:11,274 INFO sqlalchemy.engine.base.Engine Thread-118 : (127,)
2020-05-27 16:07:11,275 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:07:11,275 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:07:11,275 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC', 127, 0, 0, 1)
2020-05-27 16:07:11,275 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:07:11,275 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:07:11,280 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:07:11,280 INFO sqlalchemy.engine.base.Engine Thread-118 : ('philip', 1, 1)
2020-05-27 16:07:11,280 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:07:11,281 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:07:11,284 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-05-27 16:18:52,674 INFO sqlalchemy.engine.base.Engine Thread-129 : BEGIN (implicit)
2020-05-27 16:18:52,676 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:18:52,676 INFO sqlalchemy.engine.base.Engine Thread-129 : (1, 1)
2020-05-27 16:18:52,678 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:18:52,679 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:18:52,682 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:18:52,682 INFO sqlalchemy.engine.base.Engine Thread-129 : ('philip', 1, 1)
2020-05-27 16:18:52,682 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:18:52,683 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:18:52,684 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:18:52,684 INFO sqlalchemy.engine.base.Engine Thread-129 : ('131', 1)
2020-05-27 16:18:52,685 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:18:52,685 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:18:52,687 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:18:52,687 INFO sqlalchemy.engine.base.Engine Thread-129 : (0,)
2020-05-27 16:18:52,688 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:18:52,688 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:18:52,688 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:18:52,688 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:18:52,688 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:18:52,688 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:18:52,688 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:18:52,689 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:18:52,689 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:18:52,689 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:18:52,689 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:18:52,689 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:18:52,689 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:18:52,689 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:18:52,689 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:18:52,689 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:18:52,689 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:18:52,689 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:18:52,689 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:18:52,690 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:18:52,690 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:18:52,690 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:18:52,690 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:18:52,690 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:18:52,691 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:18:52,692 INFO sqlalchemy.engine.base.Engine Thread-129 : (0,)
2020-05-27 16:18:52,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:18:52,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:18:52,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:18:52,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:18:52,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:18:52,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:18:52,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:18:52,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:18:52,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:18:52,694 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:18:52,694 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:18:52,694 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:18:52,694 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:18:52,694 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:18:52,694 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:18:52,694 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:18:52,694 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:18:52,694 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:18:52,694 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:18:52,694 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:18:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:18:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC', 127, 0, 0, 1)
2020-05-27 16:18:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:18:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:18:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:18:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:18:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:18:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:18:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:18:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:18:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:18:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:18:52,695 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:18:52,696 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:18:52,696 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:18:52,696 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:18:52,696 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:18:52,696 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:18:52,696 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:18:52,696 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:18:52,696 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:18:52,696 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:18:52,696 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:18:52,696 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:18:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:18:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:18:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:18:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:18:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:18:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:18:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:18:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:18:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:18:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:18:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:18:52,697 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:18:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:18:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:18:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:18:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:18:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:18:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:18:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:18:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:18:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:18:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:18:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:18:52,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:18:52,699 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:18:52,699 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:18:52,699 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:18:52,699 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:18:52,699 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:18:52,699 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:18:52,699 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:18:52,699 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:18:52,699 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:18:52,699 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:18:52,700 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:18:52,700 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:18:52,700 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:18:52,706 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:18:52,707 INFO sqlalchemy.engine.base.Engine Thread-129 : ('philip', 1, 1)
2020-05-27 16:18:52,707 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:18:52,707 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:18:52,711 INFO sqlalchemy.engine.base.Engine Thread-129 : ROLLBACK
2020-05-27 16:19:17,465 INFO sqlalchemy.engine.base.Engine Thread-139 : BEGIN (implicit)
2020-05-27 16:19:17,466 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:19:17,466 INFO sqlalchemy.engine.base.Engine Thread-139 : (1, 1)
2020-05-27 16:19:17,467 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:19:17,467 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:19:17,469 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:19:17,469 INFO sqlalchemy.engine.base.Engine Thread-139 : ('philip', 1, 1)
2020-05-27 16:19:17,470 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:19:17,470 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:19:17,472 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:19:17,472 INFO sqlalchemy.engine.base.Engine Thread-139 : (0,)
2020-05-27 16:19:17,473 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:19:17,473 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:19:17,473 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:19:17,473 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:19:17,473 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:19:17,473 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:19:17,473 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:19:17,473 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:19:17,473 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:19:17,473 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:19:17,474 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:19:17,474 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:19:17,474 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:19:17,474 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:19:17,474 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:19:17,474 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:19:17,474 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:19:17,474 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:19:17,474 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:19:17,474 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:19:17,475 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:19:17,475 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:19:17,475 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:19:17,475 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:19:17,477 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:19:17,477 INFO sqlalchemy.engine.base.Engine Thread-139 : (127, 1)
2020-05-27 16:19:17,477 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:19:17,477 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:19:17,479 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 16:19:17,479 INFO sqlalchemy.engine.base.Engine Thread-139 : (127,)
2020-05-27 16:19:17,479 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:19:17,479 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:19:17,479 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC', 127, 0, 0, 1)
2020-05-27 16:19:17,480 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:19:17,480 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:19:17,484 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:19:17,484 INFO sqlalchemy.engine.base.Engine Thread-139 : ('philip', 1, 1)
2020-05-27 16:19:17,485 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:19:17,485 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:19:17,488 INFO sqlalchemy.engine.base.Engine Thread-139 : ROLLBACK
2020-05-27 16:19:21,562 INFO sqlalchemy.engine.base.Engine Thread-149 : BEGIN (implicit)
2020-05-27 16:19:21,563 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:19:21,563 INFO sqlalchemy.engine.base.Engine Thread-149 : (1, 1)
2020-05-27 16:19:21,564 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:19:21,564 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:19:21,567 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:19:21,567 INFO sqlalchemy.engine.base.Engine Thread-149 : ('philip', 1, 1)
2020-05-27 16:19:21,568 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:19:21,568 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:19:21,569 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:19:21,569 INFO sqlalchemy.engine.base.Engine Thread-149 : ('129', 1)
2020-05-27 16:19:21,570 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:19:21,570 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC', 127, 0, 0, 1)
2020-05-27 16:19:21,573 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:19:21,573 INFO sqlalchemy.engine.base.Engine Thread-149 : (0,)
2020-05-27 16:19:21,573 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:19:21,574 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:19:21,574 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:19:21,574 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:19:21,574 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:19:21,574 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:19:21,574 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:19:21,574 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:19:21,574 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:19:21,574 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:19:21,574 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:19:21,575 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:19:21,575 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:19:21,575 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:19:21,575 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:19:21,575 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:19:21,575 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:19:21,575 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:19:21,575 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:19:21,575 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:19:21,575 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:19:21,575 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:19:21,575 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:19:21,576 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:19:21,578 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:19:21,578 INFO sqlalchemy.engine.base.Engine Thread-149 : (0,)
2020-05-27 16:19:21,579 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:19:21,579 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:19:21,579 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:19:21,579 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:19:21,579 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:19:21,579 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:19:21,580 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:19:21,580 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:19:21,580 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:19:21,580 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:19:21,580 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:19:21,580 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:19:21,580 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:19:21,580 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:19:21,580 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:19:21,580 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:19:21,580 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:19:21,580 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:19:21,581 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:19:21,581 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:19:21,581 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:19:21,581 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC', 127, 0, 0, 1)
2020-05-27 16:19:21,581 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:19:21,581 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:19:21,581 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:19:21,581 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:19:21,581 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:19:21,581 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:19:21,581 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:19:21,581 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:19:21,582 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:19:21,582 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:19:21,582 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:19:21,582 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:19:21,582 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:19:21,582 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:19:21,582 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:19:21,582 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:19:21,582 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:19:21,582 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:19:21,582 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:19:21,582 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:19:21,582 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:19:21,583 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:19:21,583 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:19:21,583 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:19:21,583 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:19:21,583 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:19:21,583 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:19:21,583 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:19:21,583 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:19:21,583 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:19:21,583 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:19:21,583 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:19:21,583 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:19:21,584 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:19:21,584 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:19:21,584 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:19:21,584 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:19:21,584 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:19:21,584 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:19:21,584 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:19:21,584 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:19:21,584 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:19:21,584 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:19:21,584 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:19:21,584 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:19:21,584 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:19:21,585 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:19:21,585 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:19:21,585 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:19:21,585 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:19:21,585 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:19:21,585 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:19:21,585 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:19:21,585 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:19:21,585 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:19:21,585 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:19:21,585 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:19:21,586 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:19:21,586 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:19:21,592 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:19:21,592 INFO sqlalchemy.engine.base.Engine Thread-149 : ('philip', 1, 1)
2020-05-27 16:19:21,593 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:19:21,593 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:19:21,597 INFO sqlalchemy.engine.base.Engine Thread-149 : ROLLBACK
2020-05-27 16:19:35,759 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-05-27 16:19:35,760 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:19:35,760 INFO sqlalchemy.engine.base.Engine Thread-159 : (1, 1)
2020-05-27 16:19:35,761 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:19:35,762 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:19:35,764 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:19:35,764 INFO sqlalchemy.engine.base.Engine Thread-159 : ('philip', 1, 1)
2020-05-27 16:19:35,765 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:19:35,765 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:19:35,766 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:19:35,766 INFO sqlalchemy.engine.base.Engine Thread-159 : ('129', 1)
2020-05-27 16:19:35,767 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:19:35,767 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC', 127, 0, 0, 1)
2020-05-27 16:19:35,769 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:19:35,769 INFO sqlalchemy.engine.base.Engine Thread-159 : (0,)
2020-05-27 16:19:35,770 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:19:35,770 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:19:35,770 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:19:35,771 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:19:35,771 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:19:35,771 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:19:35,771 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:19:35,771 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:19:35,771 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:19:35,771 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:19:35,771 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:19:35,771 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:19:35,771 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:19:35,771 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:19:35,771 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:19:35,772 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:19:35,772 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:19:35,772 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:19:35,772 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:19:35,772 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:19:35,772 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:19:35,772 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:19:35,772 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:19:35,772 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:19:35,774 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:19:35,775 INFO sqlalchemy.engine.base.Engine Thread-159 : (0,)
2020-05-27 16:19:35,775 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:19:35,776 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:19:35,776 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:19:35,776 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:19:35,776 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:19:35,776 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:19:35,776 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:19:35,776 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:19:35,776 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:19:35,776 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:19:35,776 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:19:35,776 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:19:35,777 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:19:35,777 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:19:35,777 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:19:35,777 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:19:35,777 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:19:35,777 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:19:35,777 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:19:35,777 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:19:35,777 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:19:35,777 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC', 127, 0, 0, 1)
2020-05-27 16:19:35,777 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:19:35,777 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:19:35,777 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:19:35,778 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:19:35,778 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:19:35,778 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:19:35,778 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:19:35,778 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:19:35,778 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:19:35,778 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:19:35,778 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:19:35,778 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:19:35,778 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:19:35,778 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:19:35,778 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:19:35,779 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:19:35,779 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:19:35,779 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:19:35,779 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:19:35,779 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:19:35,779 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:19:35,779 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:19:35,779 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:19:35,779 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:19:35,779 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:19:35,779 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:19:35,779 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:19:35,779 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:19:35,780 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:19:35,780 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:19:35,780 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:19:35,780 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:19:35,780 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:19:35,780 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:19:35,780 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:19:35,780 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:19:35,780 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:19:35,780 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:19:35,780 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:19:35,780 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:19:35,781 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:19:35,781 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:19:35,781 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:19:35,781 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:19:35,781 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:19:35,781 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:19:35,781 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:19:35,781 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:19:35,781 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:19:35,781 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:19:35,781 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:19:35,781 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:19:35,781 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:19:35,782 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:19:35,782 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:19:35,782 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:19:35,782 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:19:35,782 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:19:35,782 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:19:35,785 INFO sqlalchemy.engine.base.Engine Thread-159 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 16:19:35,785 INFO sqlalchemy.engine.base.Engine Thread-159 : ('129', '#48D1CC #000000', 129)
2020-05-27 16:19:35,786 INFO sqlalchemy.engine.base.Engine Thread-159 : COMMIT
2020-05-27 16:19:35,819 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-05-27 16:19:35,820 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:19:35,820 INFO sqlalchemy.engine.base.Engine Thread-160 : (1, 1)
2020-05-27 16:19:35,821 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:19:35,821 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:19:35,823 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:19:35,823 INFO sqlalchemy.engine.base.Engine Thread-160 : ('philip', 1, 1)
2020-05-27 16:19:35,824 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:19:35,824 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:19:35,826 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:19:35,826 INFO sqlalchemy.engine.base.Engine Thread-160 : (0,)
2020-05-27 16:19:35,826 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:19:35,827 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:19:35,827 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:19:35,827 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:19:35,827 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:19:35,827 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:19:35,827 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:19:35,827 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:19:35,827 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:19:35,827 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:19:35,827 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:19:35,828 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:19:35,828 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:19:35,828 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:19:35,828 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:19:35,828 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:19:35,828 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:19:35,828 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:19:35,828 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:19:35,828 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:19:35,828 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:19:35,828 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:19:35,828 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:19:35,829 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:19:35,830 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:19:35,831 INFO sqlalchemy.engine.base.Engine Thread-160 : (127, 1)
2020-05-27 16:19:35,831 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:19:35,831 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:19:35,832 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 16:19:35,832 INFO sqlalchemy.engine.base.Engine Thread-160 : (127,)
2020-05-27 16:19:35,833 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:19:35,833 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:19:35,833 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 16:19:35,833 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:19:35,833 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:19:35,837 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:19:35,837 INFO sqlalchemy.engine.base.Engine Thread-160 : ('philip', 1, 1)
2020-05-27 16:19:35,838 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:19:35,838 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:19:35,841 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-05-27 16:29:13,163 INFO sqlalchemy.engine.base.Engine Thread-170 : BEGIN (implicit)
2020-05-27 16:29:13,166 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:29:13,167 INFO sqlalchemy.engine.base.Engine Thread-170 : (1, 1)
2020-05-27 16:29:13,169 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:13,169 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:13,171 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:29:13,172 INFO sqlalchemy.engine.base.Engine Thread-170 : ('philip', 1, 1)
2020-05-27 16:29:13,172 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:13,172 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:13,174 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:29:13,174 INFO sqlalchemy.engine.base.Engine Thread-170 : ('131', 1)
2020-05-27 16:29:13,174 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:13,175 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:29:13,177 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:29:13,177 INFO sqlalchemy.engine.base.Engine Thread-170 : (0,)
2020-05-27 16:29:13,178 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:13,178 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:29:13,178 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:29:13,178 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:29:13,178 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:29:13,178 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:29:13,179 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:29:13,179 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:29:13,179 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:29:13,179 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:29:13,179 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:29:13,179 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:29:13,179 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:29:13,179 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:29:13,179 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:29:13,179 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:29:13,179 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:29:13,180 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:29:13,180 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:29:13,180 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:29:13,180 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:29:13,180 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:29:13,180 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:29:13,180 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:29:13,182 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:29:13,182 INFO sqlalchemy.engine.base.Engine Thread-170 : (0,)
2020-05-27 16:29:13,183 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:13,183 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:29:13,183 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:29:13,184 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:29:13,184 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:29:13,184 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:29:13,184 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:29:13,184 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:29:13,184 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:29:13,184 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:29:13,184 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:29:13,184 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:29:13,184 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:29:13,184 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:29:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:29:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:29:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:29:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:29:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:29:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:29:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:29:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 16:29:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:29:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:29:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:29:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:29:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:29:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:29:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:29:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:29:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:29:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:29:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:29:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:29:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:29:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:29:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:29:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:29:13,187 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:29:13,187 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:29:13,187 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:29:13,187 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:29:13,187 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:29:13,187 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:29:13,187 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:29:13,187 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:29:13,187 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:29:13,187 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:29:13,187 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:29:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:29:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:29:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:29:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:29:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:29:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:29:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:29:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:29:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:29:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:29:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:29:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:29:13,189 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:29:13,189 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:29:13,189 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:29:13,189 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:29:13,189 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:29:13,189 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:29:13,189 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:29:13,189 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:29:13,189 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:29:13,189 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:29:13,190 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:29:13,190 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:29:13,190 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:29:13,190 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:29:13,190 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:29:13,190 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:29:13,190 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:29:13,190 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:29:13,190 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:29:13,190 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:29:13,198 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:29:13,198 INFO sqlalchemy.engine.base.Engine Thread-170 : ('philip', 1, 1)
2020-05-27 16:29:13,198 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:13,199 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:13,203 INFO sqlalchemy.engine.base.Engine Thread-170 : ROLLBACK
2020-05-27 16:29:20,507 INFO sqlalchemy.engine.base.Engine Thread-180 : BEGIN (implicit)
2020-05-27 16:29:20,508 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:29:20,508 INFO sqlalchemy.engine.base.Engine Thread-180 : (1, 1)
2020-05-27 16:29:20,509 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:20,509 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:20,512 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:29:20,512 INFO sqlalchemy.engine.base.Engine Thread-180 : ('philip', 1, 1)
2020-05-27 16:29:20,512 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:20,513 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:20,514 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:29:20,514 INFO sqlalchemy.engine.base.Engine Thread-180 : ('131', 1)
2020-05-27 16:29:20,515 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:20,515 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:29:20,518 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:29:20,518 INFO sqlalchemy.engine.base.Engine Thread-180 : (0,)
2020-05-27 16:29:20,518 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:20,519 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:29:20,519 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:29:20,519 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:29:20,519 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:29:20,519 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:29:20,519 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:29:20,519 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:29:20,519 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:29:20,520 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:29:20,520 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:29:20,520 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:29:20,520 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:29:20,520 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:29:20,520 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:29:20,520 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:29:20,520 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:29:20,520 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:29:20,520 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:29:20,521 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:29:20,521 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:29:20,521 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:29:20,521 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:29:20,521 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:29:20,523 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:29:20,523 INFO sqlalchemy.engine.base.Engine Thread-180 : (0,)
2020-05-27 16:29:20,524 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:20,524 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:29:20,525 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:29:20,525 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:29:20,525 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:29:20,525 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (131, 'BaU Firewall Change', '#FFDAB9', 127, 0, 0, 1)
2020-05-27 16:29:20,525 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:29:20,525 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:29:20,525 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:29:20,525 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:29:20,525 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:29:20,525 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:29:20,525 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:29:20,525 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:29:20,526 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:29:20,526 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:29:20,526 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:29:20,526 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:29:20,526 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:29:20,526 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:29:20,526 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:29:20,526 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 16:29:20,526 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:29:20,526 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:29:20,526 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:29:20,526 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:29:20,527 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:29:20,527 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:29:20,527 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:29:20,527 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:29:20,527 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:29:20,527 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:29:20,527 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:29:20,527 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:29:20,527 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:29:20,527 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:29:20,527 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:29:20,528 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:29:20,528 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:29:20,528 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:29:20,528 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:29:20,528 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:29:20,528 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:29:20,528 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:29:20,528 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:29:20,528 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:29:20,528 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:29:20,528 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:29:20,528 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:29:20,528 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:29:20,529 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:29:20,529 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:29:20,529 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:29:20,529 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:29:20,529 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:29:20,529 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:29:20,529 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:29:20,529 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:29:20,529 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:29:20,529 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:29:20,529 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:29:20,529 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:29:20,530 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:29:20,530 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:29:20,530 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:29:20,530 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:29:20,530 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:29:20,530 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:29:20,530 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:29:20,530 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:29:20,530 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:29:20,530 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:29:20,531 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:29:20,531 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:29:20,531 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:29:20,531 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:29:20,531 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:29:20,531 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:29:20,531 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:29:20,531 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:29:20,531 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:29:20,534 INFO sqlalchemy.engine.base.Engine Thread-180 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 16:29:20,535 INFO sqlalchemy.engine.base.Engine Thread-180 : ('131', '#FFDAB9 #000000', 131)
2020-05-27 16:29:20,535 INFO sqlalchemy.engine.base.Engine Thread-180 : COMMIT
2020-05-27 16:29:20,583 INFO sqlalchemy.engine.base.Engine Thread-181 : BEGIN (implicit)
2020-05-27 16:29:20,584 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:29:20,585 INFO sqlalchemy.engine.base.Engine Thread-181 : (1, 1)
2020-05-27 16:29:20,585 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:20,586 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:20,588 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:29:20,588 INFO sqlalchemy.engine.base.Engine Thread-181 : ('philip', 1, 1)
2020-05-27 16:29:20,589 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:20,589 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:20,592 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:29:20,592 INFO sqlalchemy.engine.base.Engine Thread-181 : (0,)
2020-05-27 16:29:20,592 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:20,593 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:29:20,593 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:29:20,593 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:29:20,593 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:29:20,593 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:29:20,593 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:29:20,593 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:29:20,593 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:29:20,594 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:29:20,594 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:29:20,594 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:29:20,594 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:29:20,594 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:29:20,594 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:29:20,594 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:29:20,594 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:29:20,594 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:29:20,594 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:29:20,594 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:29:20,595 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:29:20,595 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:29:20,595 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:29:20,595 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:29:20,597 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:29:20,597 INFO sqlalchemy.engine.base.Engine Thread-181 : (127, 1)
2020-05-27 16:29:20,598 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:20,598 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:29:20,599 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 16:29:20,599 INFO sqlalchemy.engine.base.Engine Thread-181 : (127,)
2020-05-27 16:29:20,600 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:20,600 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:29:20,600 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 16:29:20,600 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:29:20,600 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 16:29:20,604 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:29:20,604 INFO sqlalchemy.engine.base.Engine Thread-181 : ('philip', 1, 1)
2020-05-27 16:29:20,605 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:20,605 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:20,609 INFO sqlalchemy.engine.base.Engine Thread-181 : ROLLBACK
2020-05-27 16:29:38,378 INFO sqlalchemy.engine.base.Engine Thread-191 : BEGIN (implicit)
2020-05-27 16:29:38,379 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:29:38,379 INFO sqlalchemy.engine.base.Engine Thread-191 : (1, 1)
2020-05-27 16:29:38,380 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:38,381 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:38,383 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:29:38,383 INFO sqlalchemy.engine.base.Engine Thread-191 : ('philip', 1, 1)
2020-05-27 16:29:38,384 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:38,384 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:38,385 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:29:38,385 INFO sqlalchemy.engine.base.Engine Thread-191 : ('128', 1)
2020-05-27 16:29:38,386 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:38,386 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:29:38,388 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:29:38,388 INFO sqlalchemy.engine.base.Engine Thread-191 : (0,)
2020-05-27 16:29:38,389 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:38,389 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:29:38,389 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:29:38,389 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:29:38,389 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:29:38,389 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:29:38,389 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:29:38,389 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:29:38,390 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:29:38,390 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:29:38,390 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:29:38,390 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:29:38,390 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:29:38,390 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:29:38,390 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:29:38,390 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:29:38,390 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:29:38,390 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:29:38,390 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:29:38,391 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:29:38,391 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:29:38,391 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:29:38,391 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:29:38,391 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:29:38,393 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:29:38,393 INFO sqlalchemy.engine.base.Engine Thread-191 : (0,)
2020-05-27 16:29:38,394 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:38,394 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:29:38,394 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:29:38,394 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:29:38,394 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:29:38,394 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 16:29:38,395 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:29:38,395 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:29:38,395 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:29:38,395 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:29:38,395 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:29:38,395 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:29:38,395 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:29:38,395 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:29:38,395 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:29:38,395 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:29:38,395 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:29:38,395 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:29:38,396 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:29:38,396 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:29:38,396 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:29:38,396 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 16:29:38,396 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:29:38,396 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:29:38,396 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:29:38,396 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:29:38,396 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:29:38,396 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:29:38,396 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:29:38,396 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:29:38,397 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:29:38,397 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:29:38,397 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:29:38,397 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:29:38,397 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:29:38,397 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:29:38,397 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:29:38,397 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:29:38,397 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:29:38,397 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:29:38,397 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:29:38,397 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:29:38,398 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:29:38,398 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:29:38,398 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:29:38,398 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:29:38,398 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:29:38,398 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:29:38,398 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:29:38,398 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:29:38,398 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:29:38,398 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:29:38,398 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:29:38,399 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:29:38,399 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:29:38,399 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:29:38,399 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:29:38,399 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:29:38,399 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:29:38,399 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:29:38,399 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:29:38,399 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:29:38,399 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:29:38,399 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:29:38,400 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:29:38,400 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:29:38,400 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:29:38,400 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:29:38,400 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:29:38,400 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:29:38,400 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:29:38,400 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:29:38,400 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:29:38,400 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:29:38,400 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:29:38,401 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:29:38,401 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:29:38,401 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:29:38,401 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:29:38,401 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:29:38,401 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:29:38,407 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:29:38,407 INFO sqlalchemy.engine.base.Engine Thread-191 : ('philip', 1, 1)
2020-05-27 16:29:38,408 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:38,408 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:38,412 INFO sqlalchemy.engine.base.Engine Thread-191 : ROLLBACK
2020-05-27 16:29:45,296 INFO sqlalchemy.engine.base.Engine Thread-201 : BEGIN (implicit)
2020-05-27 16:29:45,297 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:29:45,297 INFO sqlalchemy.engine.base.Engine Thread-201 : (1, 1)
2020-05-27 16:29:45,298 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:45,298 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:45,301 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:29:45,301 INFO sqlalchemy.engine.base.Engine Thread-201 : ('philip', 1, 1)
2020-05-27 16:29:45,301 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:45,302 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:45,303 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:29:45,303 INFO sqlalchemy.engine.base.Engine Thread-201 : ('128', 1)
2020-05-27 16:29:45,303 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:45,304 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:29:45,306 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:29:45,307 INFO sqlalchemy.engine.base.Engine Thread-201 : (0,)
2020-05-27 16:29:45,307 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:45,307 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:29:45,307 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:29:45,308 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:29:45,308 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:29:45,308 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:29:45,308 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:29:45,308 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:29:45,308 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:29:45,308 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:29:45,308 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:29:45,308 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:29:45,308 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:29:45,308 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:29:45,308 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:29:45,308 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:29:45,309 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:29:45,309 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:29:45,309 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:29:45,309 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:29:45,309 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:29:45,309 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:29:45,309 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:29:45,309 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:29:45,311 INFO sqlalchemy.engine.base.Engine Thread-201 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:29:45,311 INFO sqlalchemy.engine.base.Engine Thread-201 : (0,)
2020-05-27 16:29:45,312 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:45,312 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:29:45,312 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:29:45,313 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:29:45,313 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:29:45,313 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 16:29:45,313 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:29:45,313 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:29:45,313 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:29:45,313 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:29:45,313 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:29:45,313 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:29:45,313 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:29:45,313 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:29:45,313 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:29:45,314 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:29:45,314 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:29:45,314 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:29:45,314 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:29:45,314 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:29:45,314 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:29:45,314 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 16:29:45,314 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:29:45,314 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:29:45,314 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:29:45,314 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:29:45,314 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:29:45,315 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:29:45,315 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:29:45,315 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:29:45,315 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:29:45,315 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:29:45,315 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:29:45,315 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:29:45,315 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:29:45,315 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:29:45,315 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:29:45,315 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:29:45,316 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:29:45,316 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:29:45,316 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:29:45,316 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:29:45,316 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:29:45,316 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:29:45,316 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:29:45,316 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:29:45,316 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:29:45,316 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:29:45,316 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (128, 'Informational', '#ADD8E6', 127, 0, 0, 1)
2020-05-27 16:29:45,316 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:29:45,317 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:29:45,317 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:29:45,317 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:29:45,317 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:29:45,317 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:29:45,317 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:29:45,317 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:29:45,317 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:29:45,317 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:29:45,317 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:29:45,317 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:29:45,318 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:29:45,318 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:29:45,318 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:29:45,318 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:29:45,318 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:29:45,318 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:29:45,318 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:29:45,318 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:29:45,318 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:29:45,318 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:29:45,318 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:29:45,319 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:29:45,319 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:29:45,319 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:29:45,319 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:29:45,319 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:29:45,319 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:29:45,319 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:29:45,319 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:29:45,319 DEBUG sqlalchemy.engine.base.Engine Thread-201 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:29:45,323 INFO sqlalchemy.engine.base.Engine Thread-201 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 16:29:45,323 INFO sqlalchemy.engine.base.Engine Thread-201 : ('128', '#ADD8E6 #000000', 128)
2020-05-27 16:29:45,324 INFO sqlalchemy.engine.base.Engine Thread-201 : COMMIT
2020-05-27 16:29:45,357 INFO sqlalchemy.engine.base.Engine Thread-202 : BEGIN (implicit)
2020-05-27 16:29:45,358 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:29:45,358 INFO sqlalchemy.engine.base.Engine Thread-202 : (1, 1)
2020-05-27 16:29:45,359 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:45,359 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:45,361 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:29:45,361 INFO sqlalchemy.engine.base.Engine Thread-202 : ('philip', 1, 1)
2020-05-27 16:29:45,362 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:45,362 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:45,364 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:29:45,364 INFO sqlalchemy.engine.base.Engine Thread-202 : (0,)
2020-05-27 16:29:45,365 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:45,365 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:29:45,365 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:29:45,365 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:29:45,365 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:29:45,366 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:29:45,366 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:29:45,366 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:29:45,366 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:29:45,366 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:29:45,366 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:29:45,366 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:29:45,366 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:29:45,366 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:29:45,366 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:29:45,366 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:29:45,367 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:29:45,367 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:29:45,367 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:29:45,367 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:29:45,367 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:29:45,367 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:29:45,367 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:29:45,367 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:29:45,369 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:29:45,369 INFO sqlalchemy.engine.base.Engine Thread-202 : (127, 1)
2020-05-27 16:29:45,370 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:45,370 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:29:45,371 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 16:29:45,371 INFO sqlalchemy.engine.base.Engine Thread-202 : (127,)
2020-05-27 16:29:45,372 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:29:45,372 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 16:29:45,372 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 16:29:45,372 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:29:45,373 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 16:29:45,377 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:29:45,377 INFO sqlalchemy.engine.base.Engine Thread-202 : ('philip', 1, 1)
2020-05-27 16:29:45,377 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:29:45,378 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:29:45,381 INFO sqlalchemy.engine.base.Engine Thread-202 : ROLLBACK
2020-05-27 16:30:05,731 INFO sqlalchemy.engine.base.Engine Thread-212 : BEGIN (implicit)
2020-05-27 16:30:05,732 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:30:05,732 INFO sqlalchemy.engine.base.Engine Thread-212 : (1, 1)
2020-05-27 16:30:05,733 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:30:05,734 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:30:05,737 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:30:05,737 INFO sqlalchemy.engine.base.Engine Thread-212 : ('philip', 1, 1)
2020-05-27 16:30:05,738 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:30:05,738 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:30:05,740 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:30:05,740 INFO sqlalchemy.engine.base.Engine Thread-212 : ('130', 1)
2020-05-27 16:30:05,740 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:30:05,741 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:30:05,743 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:30:05,743 INFO sqlalchemy.engine.base.Engine Thread-212 : (0,)
2020-05-27 16:30:05,743 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:30:05,744 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:30:05,744 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:30:05,744 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:30:05,744 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:30:05,744 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:30:05,744 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:30:05,744 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:30:05,744 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:30:05,744 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:30:05,744 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:30:05,745 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:30:05,745 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:30:05,745 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:30:05,745 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:30:05,745 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:30:05,745 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:30:05,745 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:30:05,745 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:30:05,745 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:30:05,745 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:30:05,745 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:30:05,746 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:30:05,746 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:30:05,747 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:30:05,748 INFO sqlalchemy.engine.base.Engine Thread-212 : (0,)
2020-05-27 16:30:05,748 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:30:05,749 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:30:05,749 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:30:05,749 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:30:05,749 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:30:05,749 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 16:30:05,749 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:30:05,749 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:30:05,749 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:30:05,749 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:30:05,749 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:30:05,749 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:30:05,749 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:30:05,750 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:30:05,750 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:30:05,750 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:30:05,750 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:30:05,750 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:30:05,750 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:30:05,750 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:30:05,750 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:30:05,750 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 16:30:05,750 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:30:05,750 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:30:05,750 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:30:05,751 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:30:05,751 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:30:05,751 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:30:05,751 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:30:05,751 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:30:05,751 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:30:05,751 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:30:05,751 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:30:05,751 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:30:05,751 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:30:05,751 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:30:05,751 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:30:05,751 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:30:05,752 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:30:05,752 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:30:05,752 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:30:05,752 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:30:05,752 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:30:05,752 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:30:05,752 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:30:05,752 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:30:05,752 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:30:05,752 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:30:05,752 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 16:30:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:30:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:30:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:30:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:30:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:30:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:30:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:30:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:30:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:30:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:30:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:30:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:30:05,753 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:30:05,754 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:30:05,754 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:30:05,754 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:30:05,754 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:30:05,754 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:30:05,754 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:30:05,754 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:30:05,754 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:30:05,754 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:30:05,754 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:30:05,754 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:30:05,755 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:30:05,755 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:30:05,755 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:30:05,755 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:30:05,755 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:30:05,755 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:30:05,755 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:30:05,755 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:30:05,761 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:30:05,761 INFO sqlalchemy.engine.base.Engine Thread-212 : ('philip', 1, 1)
2020-05-27 16:30:05,762 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:30:05,762 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:30:05,765 INFO sqlalchemy.engine.base.Engine Thread-212 : ROLLBACK
2020-05-27 16:30:11,956 INFO sqlalchemy.engine.base.Engine Thread-222 : BEGIN (implicit)
2020-05-27 16:30:11,957 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:30:11,957 INFO sqlalchemy.engine.base.Engine Thread-222 : (1, 1)
2020-05-27 16:30:11,958 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:30:11,958 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:30:11,960 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:30:11,961 INFO sqlalchemy.engine.base.Engine Thread-222 : ('philip', 1, 1)
2020-05-27 16:30:11,961 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:30:11,961 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:30:11,963 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:30:11,963 INFO sqlalchemy.engine.base.Engine Thread-222 : ('130', 1)
2020-05-27 16:30:11,963 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:30:11,964 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:30:11,966 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:30:11,966 INFO sqlalchemy.engine.base.Engine Thread-222 : (0,)
2020-05-27 16:30:11,967 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:30:11,967 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:30:11,967 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:30:11,967 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:30:11,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:30:11,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:30:11,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:30:11,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:30:11,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:30:11,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:30:11,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:30:11,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:30:11,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:30:11,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:30:11,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:30:11,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:30:11,969 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:30:11,969 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:30:11,969 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:30:11,969 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:30:11,969 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:30:11,969 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:30:11,969 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:30:11,969 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:30:11,971 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 16:30:11,972 INFO sqlalchemy.engine.base.Engine Thread-222 : (0,)
2020-05-27 16:30:11,972 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:30:11,973 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 16:30:11,973 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 16:30:11,973 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 16:30:11,973 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:30:11,973 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 16:30:11,973 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 16:30:11,973 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 16:30:11,973 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:30:11,973 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 16:30:11,974 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:30:11,974 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 16:30:11,974 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 16:30:11,974 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 16:30:11,974 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 16:30:11,974 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 16:30:11,974 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 16:30:11,974 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:30:11,974 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:30:11,974 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 16:30:11,974 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 16:30:11,975 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 16:30:11,975 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 16:30:11,975 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 16:30:11,975 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 16:30:11,975 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 16:30:11,975 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 16:30:11,975 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 16:30:11,975 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 16:30:11,975 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 16:30:11,975 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 16:30:11,975 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 16:30:11,975 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 16:30:11,976 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 16:30:11,976 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 16:30:11,976 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 16:30:11,976 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 16:30:11,976 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 16:30:11,976 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 16:30:11,976 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 16:30:11,976 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 16:30:11,976 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 16:30:11,976 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 16:30:11,976 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 16:30:11,976 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 16:30:11,977 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 16:30:11,977 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 16:30:11,977 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 16:30:11,977 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 16:30:11,977 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 16:30:11,977 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 16:30:11,977 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:30:11,977 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 16:30:11,977 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 16:30:11,977 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 16:30:11,977 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 16:30:11,977 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 16:30:11,977 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 16:30:11,978 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 16:30:11,978 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 16:30:11,978 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 16:30:11,978 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 16:30:11,978 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (130, 'No Changes Allowed', '#FFE4E1', 127, 0, 0, 1)
2020-05-27 16:30:11,978 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 16:30:11,978 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 16:30:11,978 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 16:30:11,978 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 16:30:11,978 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 16:30:11,978 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 16:30:11,978 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 16:30:11,979 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 16:30:11,979 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 16:30:11,979 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 16:30:11,979 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 16:30:11,979 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 16:30:11,979 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 16:30:11,979 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 16:30:11,979 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 16:30:11,979 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 16:30:11,979 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 16:30:11,979 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 16:30:11,983 INFO sqlalchemy.engine.base.Engine Thread-222 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 16:30:11,983 INFO sqlalchemy.engine.base.Engine Thread-222 : ('130', '#FFE4E1 #000000', 130)
2020-05-27 16:30:11,983 INFO sqlalchemy.engine.base.Engine Thread-222 : COMMIT
2020-05-27 16:30:12,026 INFO sqlalchemy.engine.base.Engine Thread-223 : BEGIN (implicit)
2020-05-27 16:30:12,027 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:30:12,027 INFO sqlalchemy.engine.base.Engine Thread-223 : (1, 1)
2020-05-27 16:30:12,028 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:30:12,028 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:30:12,030 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:30:12,031 INFO sqlalchemy.engine.base.Engine Thread-223 : ('philip', 1, 1)
2020-05-27 16:30:12,031 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:30:12,032 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:30:12,034 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:30:12,034 INFO sqlalchemy.engine.base.Engine Thread-223 : (0,)
2020-05-27 16:30:12,034 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:30:12,035 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 16:30:12,035 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 16:30:12,035 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 16:30:12,035 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 16:30:12,035 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 16:30:12,035 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 16:30:12,035 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 16:30:12,035 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 16:30:12,035 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 16:30:12,035 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:30:12,036 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 16:30:12,036 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 16:30:12,036 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 16:30:12,036 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 16:30:12,036 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 16:30:12,036 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 16:30:12,036 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 16:30:12,036 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 16:30:12,036 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 16:30:12,036 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 16:30:12,036 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 16:30:12,037 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 16:30:12,037 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 16:30:12,039 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 16:30:12,039 INFO sqlalchemy.engine.base.Engine Thread-223 : (127, 1)
2020-05-27 16:30:12,039 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:30:12,040 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 16:30:12,041 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 16:30:12,041 INFO sqlalchemy.engine.base.Engine Thread-223 : (127,)
2020-05-27 16:30:12,042 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:30:12,042 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 16:30:12,042 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 16:30:12,042 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 16:30:12,042 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 16:30:12,046 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:30:12,047 INFO sqlalchemy.engine.base.Engine Thread-223 : ('philip', 1, 1)
2020-05-27 16:30:12,047 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:30:12,048 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:30:12,052 INFO sqlalchemy.engine.base.Engine Thread-223 : ROLLBACK
2020-05-27 16:38:23,375 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 16:38:23,375 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 16:38:23,377 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 16:38:23,377 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-27 16:38:23,378 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 16:38:23,378 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 16:38:23,379 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 16:38:23,379 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-27 16:38:23,379 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-27 16:38:23,380 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 16:38:23,380 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-27 16:38:23,380 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-27 16:38:23,380 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 16:38:23,380 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 16:38:23,381 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 16:38:23,381 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 16:38:23,382 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 16:38:23,382 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 16:38:23,382 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 16:38:23,382 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 16:38:23,383 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 16:38:23,383 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 16:38:23,384 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-27 16:38:23,386 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:38:23,386 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-05-27 16:38:23,387 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:38:23,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:38:23,391 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:38:23,391 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-05-27 16:38:23,392 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:38:23,392 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:38:23,402 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 16:38:23,402 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 16:38:23,403 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 16:38:23,403 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-05-27 16:38:23,403 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-05-27 16:38:23,403 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 16:38:23,403 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 16:38:23,404 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 16:38:23,404 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 16:38:23,404 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 16:38:23,404 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-05-27 16:38:23,404 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 16:38:23,404 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-05-27 16:38:23,485 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:38:23,485 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-05-27 16:38:23,486 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:38:23,486 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:38:23,489 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-27 16:38:25,238 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-05-27 16:38:25,245 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 16:38:25,245 INFO sqlalchemy.engine.base.Engine Thread-12 : ()
2020-05-27 16:38:25,246 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 16:38:25,247 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 16:38:25,247 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 16:38:25,249 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 16:38:25,249 INFO sqlalchemy.engine.base.Engine Thread-12 : (100,)
2020-05-27 16:38:25,250 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 16:38:25,250 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 16:38:25,250 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 16:38:25,251 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 16:38:25,251 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 16:38:25,251 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 16:38:25,253 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:38:25,253 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-05-27 16:38:25,254 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:38:25,254 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:38:25,270 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 16:38:25,270 INFO sqlalchemy.engine.base.Engine Thread-12 : ('philip', 1, 1)
2020-05-27 16:38:25,270 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:38:25,271 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:38:25,272 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-05-27 16:38:29,043 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-05-27 16:38:29,045 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 16:38:29,045 INFO sqlalchemy.engine.base.Engine Thread-25 : (1, 1)
2020-05-27 16:38:29,045 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 16:38:29,046 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 16:38:29,057 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-05-27 17:24:44,138 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 17:24:44,138 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:24:44,140 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 17:24:44,140 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-27 17:24:44,141 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 17:24:44,141 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:24:44,141 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 17:24:44,142 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-27 17:24:44,142 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-27 17:24:44,142 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:24:44,142 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-27 17:24:44,142 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-27 17:24:44,143 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 17:24:44,143 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:24:44,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 17:24:44,144 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 17:24:44,145 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 17:24:44,145 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:24:44,145 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 17:24:44,145 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:24:44,146 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 17:24:44,146 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:24:44,147 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-27 17:24:44,150 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, parameters_1.param_value AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 17:24:44,150 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 17:24:44,151 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:24:44,152 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'No', '0', '0', 'Date Event', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 17:24:44,152 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', '0', '0', 'Date Event', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 17:24:44,152 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'No', '0', '0', 'Date Event', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 17:24:44,152 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No', '0', '0', 'Date Event', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 17:24:44,157 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 17:24:44,157 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 17:24:44,159 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:24:44,159 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:24:44,159 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:24:44,159 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:24:44,159 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:24:44,159 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:24:44,159 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:24:44,159 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:24:44,164 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 17:24:44,164 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 17:24:44,165 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:24:44,165 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:24:44,165 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:24:44,165 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:24:44,166 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:24:44,166 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:24:44,166 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:24:44,167 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-27 17:24:44,235 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-05-27 17:24:44,237 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 17:24:44,237 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-05-27 17:24:44,240 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 17:24:44,240 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 17:24:44,258 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-05-27 17:31:32,973 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 17:31:32,973 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:31:32,974 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 17:31:32,975 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-27 17:31:32,976 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 17:31:32,976 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:31:32,977 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 17:31:32,977 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-27 17:31:32,977 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-27 17:31:32,978 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:31:32,978 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-27 17:31:32,978 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-27 17:31:32,978 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 17:31:32,978 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:31:32,980 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 17:31:32,980 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 17:31:32,981 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 17:31:32,981 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:31:32,982 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 17:31:32,982 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:31:32,982 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 17:31:32,983 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:31:32,983 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-27 17:31:32,990 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 17:31:32,990 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 17:31:32,991 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 17:31:32,992 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 17:31:32,992 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 17:31:32,995 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 17:31:32,995 INFO sqlalchemy.engine.base.Engine Thread-2 : (100,)
2020-05-27 17:31:32,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 17:31:32,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 17:31:32,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 17:31:32,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 17:31:32,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 17:31:32,997 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 17:31:33,001 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 17:31:33,001 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-05-27 17:31:33,002 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 17:31:33,002 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 17:31:33,082 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 17:31:33,082 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-05-27 17:31:33,083 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 17:31:33,083 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 17:31:33,085 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-27 17:31:33,368 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-05-27 17:31:33,370 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 17:31:33,370 INFO sqlalchemy.engine.base.Engine Thread-12 : ('#000000', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 17:31:33,372 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType')
2020-05-27 17:31:33,372 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', '1', '#000000', 'Date Event')
2020-05-27 17:31:33,372 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', '1', '#000000', 'Date Event')
2020-05-27 17:31:33,372 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', '#FFDAB9 #000000', '#000000', 'Date Event')
2020-05-27 17:31:33,377 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 17:31:33,377 INFO sqlalchemy.engine.base.Engine Thread-12 : ('Lightblue', 'Darkblue', 'Date Event', '#000000', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 17:31:33,378 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:31:33,383 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 17:31:33,383 INFO sqlalchemy.engine.base.Engine Thread-12 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 17:31:33,384 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:31:33,389 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 17:31:33,389 INFO sqlalchemy.engine.base.Engine Thread-12 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 17:31:33,390 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:31:33,390 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:31:33,391 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-05-27 17:31:33,414 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-05-27 17:31:33,416 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 17:31:33,416 INFO sqlalchemy.engine.base.Engine Thread-14 : ('#000000', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 17:31:33,417 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType')
2020-05-27 17:31:33,418 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', '1', '#000000', 'Date Event')
2020-05-27 17:31:33,418 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', '1', '#000000', 'Date Event')
2020-05-27 17:31:33,418 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', '#FFDAB9 #000000', '#000000', 'Date Event')
2020-05-27 17:31:33,423 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 17:31:33,423 INFO sqlalchemy.engine.base.Engine Thread-14 : ('Lightblue', 'Darkblue', 'Date Event', '#000000', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 17:31:33,423 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:31:33,428 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 17:31:33,428 INFO sqlalchemy.engine.base.Engine Thread-14 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 17:31:33,429 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:31:33,433 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 17:31:33,434 INFO sqlalchemy.engine.base.Engine Thread-14 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 17:31:33,435 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:31:33,435 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:31:33,436 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-05-27 17:31:36,434 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-05-27 17:31:36,436 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 17:31:36,436 INFO sqlalchemy.engine.base.Engine Thread-15 : ('#000000', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 17:31:36,437 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType')
2020-05-27 17:31:36,438 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'No', '0', '#000000', 'Date Event')
2020-05-27 17:31:36,438 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', '0', '#000000', 'Date Event')
2020-05-27 17:31:36,438 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', '1', '#000000', 'Date Event')
2020-05-27 17:31:36,438 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', '1', '#000000', 'Date Event')
2020-05-27 17:31:36,438 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'No', '0', '#000000', 'Date Event')
2020-05-27 17:31:36,438 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', '#FFE4E1 #000000', '#000000', 'Date Event')
2020-05-27 17:31:36,438 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Yes', '1', '#000000', 'Date Event')
2020-05-27 17:31:36,438 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No', '0', '#000000', 'Date Event')
2020-05-27 17:31:36,438 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', '#FFDAB9 #000000', '#000000', 'Date Event')
2020-05-27 17:31:36,439 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Yes', '1', '#000000', 'Date Event')
2020-05-27 17:31:36,443 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 17:31:36,443 INFO sqlalchemy.engine.base.Engine Thread-15 : ('Lightblue', 'Darkblue', 'Date Event', '#000000', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 17:31:36,444 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:31:36,444 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'No', '0', '#000000', 'Date Event', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 17:31:36,444 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', '0', '#000000', 'Date Event', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 17:31:36,444 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'No', '0', '#000000', 'Date Event', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 17:31:36,444 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No', '0', '#000000', 'Date Event', 'Lightblue', 'Darkblue', 'Date Event')
2020-05-27 17:31:36,449 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 17:31:36,449 INFO sqlalchemy.engine.base.Engine Thread-15 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 17:31:36,450 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:31:36,450 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:31:36,450 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:31:36,450 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:31:36,450 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:31:36,450 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:31:36,451 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:31:36,451 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:31:36,457 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 17:31:36,457 INFO sqlalchemy.engine.base.Engine Thread-15 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 17:31:36,458 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:31:36,459 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:31:36,459 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:31:36,459 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:31:36,459 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:31:36,459 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:31:36,459 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:31:36,461 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-05-27 17:31:36,539 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-05-27 17:31:36,540 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 17:31:36,540 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-05-27 17:31:36,540 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 17:31:36,540 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 17:31:36,551 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-05-27 17:33:31,704 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-05-27 17:33:31,706 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 17:33:31,706 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-05-27 17:33:31,707 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 17:33:31,707 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 17:33:31,710 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 17:33:31,710 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-05-27 17:33:31,711 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 17:33:31,711 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 17:33:31,713 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 17:33:31,714 INFO sqlalchemy.engine.base.Engine Thread-17 : (0,)
2020-05-27 17:33:31,714 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 17:33:31,715 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 17:33:31,715 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 17:33:31,715 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 17:33:31,715 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 17:33:31,715 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 17:33:31,715 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 17:33:31,715 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 17:33:31,715 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 17:33:31,715 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 17:33:31,716 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 17:33:31,716 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 17:33:31,716 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 17:33:31,716 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 17:33:31,716 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 17:33:31,716 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 17:33:31,716 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 17:33:31,716 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 17:33:31,716 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 17:33:31,716 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 17:33:31,716 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 17:33:31,716 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 17:33:31,717 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 17:33:31,717 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 17:33:31,719 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-05-27 17:33:31,719 INFO sqlalchemy.engine.base.Engine Thread-17 : (0, 1)
2020-05-27 17:33:31,720 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 17:33:31,720 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 17:33:31,721 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 17:33:31,721 INFO sqlalchemy.engine.base.Engine Thread-17 : (66,)
2020-05-27 17:33:31,722 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 17:33:31,722 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 17:33:31,723 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 17:33:31,743 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 17:33:31,743 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-05-27 17:33:31,743 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 17:33:31,744 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 17:33:31,747 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-05-27 17:33:36,919 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-05-27 17:33:36,920 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 17:33:36,920 INFO sqlalchemy.engine.base.Engine Thread-27 : (1, 1)
2020-05-27 17:33:36,921 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 17:33:36,921 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 17:33:36,924 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 17:33:36,924 INFO sqlalchemy.engine.base.Engine Thread-27 : ('philip', 1, 1)
2020-05-27 17:33:36,924 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 17:33:36,925 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 17:33:36,928 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 17:33:36,928 INFO sqlalchemy.engine.base.Engine Thread-27 : (0,)
2020-05-27 17:33:36,929 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 17:33:36,930 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 17:33:36,930 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 17:33:36,930 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 17:33:36,930 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 17:33:36,930 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 17:33:36,930 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 17:33:36,930 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 17:33:36,930 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 17:33:36,931 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 17:33:36,931 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 17:33:36,931 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 17:33:36,931 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 17:33:36,931 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 17:33:36,931 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 17:33:36,931 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 17:33:36,931 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 17:33:36,931 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 17:33:36,931 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 17:33:36,931 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 17:33:36,931 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 17:33:36,932 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 17:33:36,932 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 17:33:36,932 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 17:33:36,934 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 17:33:36,934 INFO sqlalchemy.engine.base.Engine Thread-27 : ('127',)
2020-05-27 17:33:36,934 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 17:33:36,935 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 17:33:36,935 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 17:33:36,935 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 17:33:36,935 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 17:33:36,939 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 17:33:36,939 INFO sqlalchemy.engine.base.Engine Thread-27 : ('philip', 1, 1)
2020-05-27 17:33:36,940 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 17:33:36,940 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 17:33:36,944 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-05-27 17:35:51,986 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-05-27 17:35:51,989 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 17:35:51,989 INFO sqlalchemy.engine.base.Engine Thread-37 : ()
2020-05-27 17:35:51,990 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 17:35:51,991 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 17:35:51,991 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 17:35:51,993 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 17:35:51,993 INFO sqlalchemy.engine.base.Engine Thread-37 : (100,)
2020-05-27 17:35:51,993 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 17:35:51,994 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 17:35:51,994 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 17:35:51,994 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 17:35:51,994 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 17:35:51,994 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 17:35:51,996 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 17:35:51,996 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-05-27 17:35:51,997 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 17:35:51,997 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 17:35:52,002 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 17:35:52,002 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-05-27 17:35:52,003 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 17:35:52,003 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 17:35:52,005 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-05-27 17:35:52,272 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-05-27 17:35:52,274 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 17:35:52,274 INFO sqlalchemy.engine.base.Engine Thread-47 : ('#000000', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 17:35:52,275 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType')
2020-05-27 17:35:52,275 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Heightened Awareness Period (HAP)', '#48D1CC #000000', '#000000', 'Date Event')
2020-05-27 17:35:52,275 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', '#48D1CC #000000', '#000000', 'Date Event')
2020-05-27 17:35:52,276 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', '#FFDAB9 #000000', '#000000', 'Date Event')
2020-05-27 17:35:52,280 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 17:35:52,280 INFO sqlalchemy.engine.base.Engine Thread-47 : ('Lightblue', 'Darkblue', 'Date Event', '#000000', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 17:35:52,281 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:35:52,285 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 17:35:52,285 INFO sqlalchemy.engine.base.Engine Thread-47 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 17:35:52,286 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:35:52,290 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 17:35:52,290 INFO sqlalchemy.engine.base.Engine Thread-47 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 17:35:52,291 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:35:52,292 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:35:52,293 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-05-27 17:35:52,323 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-05-27 17:35:52,325 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 17:35:52,325 INFO sqlalchemy.engine.base.Engine Thread-48 : ('#000000', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 17:35:52,326 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType')
2020-05-27 17:35:52,326 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Heightened Awareness Period (HAP)', '#48D1CC #000000', '#000000', 'Date Event')
2020-05-27 17:35:52,326 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', '#48D1CC #000000', '#000000', 'Date Event')
2020-05-27 17:35:52,326 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', '#FFDAB9 #000000', '#000000', 'Date Event')
2020-05-27 17:35:52,330 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 17:35:52,330 INFO sqlalchemy.engine.base.Engine Thread-48 : ('Lightblue', 'Darkblue', 'Date Event', '#000000', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 17:35:52,331 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:35:52,336 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 17:35:52,336 INFO sqlalchemy.engine.base.Engine Thread-48 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 17:35:52,337 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:35:52,341 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 17:35:52,341 INFO sqlalchemy.engine.base.Engine Thread-48 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 17:35:52,342 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:35:52,342 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:35:52,343 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-05-27 17:35:57,274 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-05-27 17:35:57,276 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 17:35:57,276 INFO sqlalchemy.engine.base.Engine Thread-49 : ('#000000', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 17:35:57,277 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType')
2020-05-27 17:35:57,277 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', '#ADD8E6 #000000', '#000000', 'Date Event')
2020-05-27 17:35:57,278 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', '#ADD8E6 #000000', '#000000', 'Date Event')
2020-05-27 17:35:57,278 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Heightened Awareness Period (HAP)', '#48D1CC #000000', '#000000', 'Date Event')
2020-05-27 17:35:57,278 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', '#48D1CC #000000', '#000000', 'Date Event')
2020-05-27 17:35:57,278 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', '#ADD8E6 #000000', '#000000', 'Date Event')
2020-05-27 17:35:57,278 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', '#FFE4E1 #000000', '#000000', 'Date Event')
2020-05-27 17:35:57,278 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', '#48D1CC #000000', '#000000', 'Date Event')
2020-05-27 17:35:57,278 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Informational', '#ADD8E6 #000000', '#000000', 'Date Event')
2020-05-27 17:35:57,278 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', '#FFDAB9 #000000', '#000000', 'Date Event')
2020-05-27 17:35:57,278 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', '#48D1CC #000000', '#000000', 'Date Event')
2020-05-27 17:35:57,282 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 17:35:57,282 INFO sqlalchemy.engine.base.Engine Thread-49 : ('Lightblue', 'Darkblue', 'Date Event', '#000000', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 17:35:57,283 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:35:57,287 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 17:35:57,288 INFO sqlalchemy.engine.base.Engine Thread-49 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 17:35:57,289 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:35:57,289 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:35:57,289 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:35:57,289 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:35:57,289 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:35:57,289 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:35:57,289 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:35:57,289 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:35:57,294 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 17:35:57,294 INFO sqlalchemy.engine.base.Engine Thread-49 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 17:35:57,295 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:35:57,295 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:35:57,295 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:35:57,295 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:35:57,295 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:35:57,295 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:35:57,295 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:35:57,297 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-05-27 17:35:57,347 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-05-27 17:35:57,348 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 17:35:57,348 INFO sqlalchemy.engine.base.Engine Thread-50 : (1, 1)
2020-05-27 17:35:57,349 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 17:35:57,349 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 17:35:57,350 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-05-27 17:36:31,476 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-05-27 17:36:31,478 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 17:36:31,478 INFO sqlalchemy.engine.base.Engine Thread-51 : ('#000000', 'Date Event', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-05-27 17:36:31,479 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType')
2020-05-27 17:36:31,479 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', '#ADD8E6 #000000', '#000000', 'Date Event')
2020-05-27 17:36:31,479 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Heightened Awareness Period (HAP)', '#48D1CC #000000', '#000000', 'Date Event')
2020-05-27 17:36:31,479 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', '#48D1CC #000000', '#000000', 'Date Event')
2020-05-27 17:36:31,483 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 17:36:31,484 INFO sqlalchemy.engine.base.Engine Thread-51 : ('Lightblue', 'Darkblue', 'Date Event', '#000000', 'Date Event', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'NO')
2020-05-27 17:36:31,485 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:36:31,489 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 17:36:31,489 INFO sqlalchemy.engine.base.Engine Thread-51 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-05-27 17:36:31,489 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:36:31,493 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 17:36:31,493 INFO sqlalchemy.engine.base.Engine Thread-51 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-05-27 17:36:31,494 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:36:31,495 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-05-27 17:36:34,860 INFO sqlalchemy.engine.base.Engine Thread-52 : BEGIN (implicit)
2020-05-27 17:36:34,862 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 17:36:34,862 INFO sqlalchemy.engine.base.Engine Thread-52 : ('#000000', 'Date Event', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-05-27 17:36:34,863 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType')
2020-05-27 17:36:34,863 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', '#ADD8E6 #000000', '#000000', 'Date Event')
2020-05-27 17:36:34,867 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 17:36:34,867 INFO sqlalchemy.engine.base.Engine Thread-52 : ('Lightblue', 'Darkblue', 'Date Event', '#000000', 'Date Event', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'NO')
2020-05-27 17:36:34,868 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:36:34,872 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 17:36:34,872 INFO sqlalchemy.engine.base.Engine Thread-52 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-05-27 17:36:34,873 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:36:34,874 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:36:34,874 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:36:34,874 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:36:34,874 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:36:34,874 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 17:36:34,878 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 17:36:34,878 INFO sqlalchemy.engine.base.Engine Thread-52 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-05-27 17:36:34,879 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:36:34,879 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:36:34,879 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:36:34,879 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:36:34,879 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:36:34,880 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 17:36:34,881 INFO sqlalchemy.engine.base.Engine Thread-52 : ROLLBACK
2020-05-27 17:36:37,600 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-05-27 17:36:37,601 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 17:36:37,602 INFO sqlalchemy.engine.base.Engine Thread-53 : ('#000000', 'Date Event', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-05-27 17:36:37,602 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType')
2020-05-27 17:36:37,603 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', '#ADD8E6 #000000', '#000000', 'Date Event')
2020-05-27 17:36:37,603 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Heightened Awareness Period (HAP)', '#48D1CC #000000', '#000000', 'Date Event')
2020-05-27 17:36:37,603 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', '#48D1CC #000000', '#000000', 'Date Event')
2020-05-27 17:36:37,607 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`backGroundColor` AS `anon_1_backGroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `backGroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 17:36:37,607 INFO sqlalchemy.engine.base.Engine Thread-53 : ('Lightblue', 'Darkblue', 'Date Event', '#000000', 'Date Event', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'NO')
2020-05-27 17:36:37,608 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_backGroundColor', 'anon_1_textColor', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:36:37,612 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 17:36:37,612 INFO sqlalchemy.engine.base.Engine Thread-53 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-05-27 17:36:37,613 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:36:37,617 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 17:36:37,617 INFO sqlalchemy.engine.base.Engine Thread-53 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-05-27 17:36:37,618 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 17:36:37,619 INFO sqlalchemy.engine.base.Engine Thread-53 : ROLLBACK
2020-05-27 18:59:04,421 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-05-27 18:59:04,423 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 18:59:04,423 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-05-27 18:59:04,426 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 18:59:04,426 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 18:59:04,429 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 18:59:04,429 INFO sqlalchemy.engine.base.Engine Thread-55 : ('philip', 1, 1)
2020-05-27 18:59:04,430 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 18:59:04,430 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 18:59:04,433 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 18:59:04,433 INFO sqlalchemy.engine.base.Engine Thread-55 : (0,)
2020-05-27 18:59:04,434 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 18:59:04,434 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 18:59:04,434 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 18:59:04,434 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 18:59:04,434 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 18:59:04,434 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 18:59:04,435 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 18:59:04,435 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 18:59:04,435 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 18:59:04,435 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 18:59:04,435 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 18:59:04,435 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 18:59:04,435 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 18:59:04,435 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 18:59:04,435 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 18:59:04,435 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 18:59:04,436 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 18:59:04,436 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 18:59:04,436 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 18:59:04,436 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 18:59:04,436 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 18:59:04,436 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 18:59:04,436 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 18:59:04,436 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 18:59:04,438 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-05-27 18:59:04,439 INFO sqlalchemy.engine.base.Engine Thread-55 : (0, 1)
2020-05-27 18:59:04,439 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 18:59:04,439 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 18:59:04,441 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 18:59:04,441 INFO sqlalchemy.engine.base.Engine Thread-55 : (66,)
2020-05-27 18:59:04,441 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 18:59:04,442 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 18:59:04,442 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 18:59:04,447 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 18:59:04,447 INFO sqlalchemy.engine.base.Engine Thread-55 : ('philip', 1, 1)
2020-05-27 18:59:04,448 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 18:59:04,448 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 18:59:04,452 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-05-27 18:59:10,588 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-05-27 18:59:10,589 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 18:59:10,589 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-05-27 18:59:10,590 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 18:59:10,590 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 18:59:10,592 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 18:59:10,592 INFO sqlalchemy.engine.base.Engine Thread-65 : ('philip', 1, 1)
2020-05-27 18:59:10,593 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 18:59:10,593 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 18:59:10,596 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 18:59:10,596 INFO sqlalchemy.engine.base.Engine Thread-65 : (0,)
2020-05-27 18:59:10,596 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 18:59:10,597 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 18:59:10,597 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 18:59:10,597 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 18:59:10,597 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 18:59:10,597 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 18:59:10,597 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 18:59:10,597 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 18:59:10,597 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 18:59:10,597 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 18:59:10,598 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 18:59:10,598 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 18:59:10,598 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 18:59:10,598 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 18:59:10,598 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 18:59:10,598 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 18:59:10,598 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 18:59:10,598 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 18:59:10,598 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 18:59:10,598 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 18:59:10,598 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 18:59:10,599 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 18:59:10,599 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 18:59:10,599 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 18:59:10,601 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 18:59:10,601 INFO sqlalchemy.engine.base.Engine Thread-65 : ('127',)
2020-05-27 18:59:10,601 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 18:59:10,601 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 18:59:10,602 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 18:59:10,602 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 18:59:10,602 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 18:59:10,606 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 18:59:10,606 INFO sqlalchemy.engine.base.Engine Thread-65 : ('philip', 1, 1)
2020-05-27 18:59:10,607 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 18:59:10,607 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 18:59:10,611 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-05-27 18:59:12,800 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-05-27 18:59:12,801 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 18:59:12,801 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-05-27 18:59:12,802 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 18:59:12,803 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 18:59:12,805 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 18:59:12,805 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip', 1, 1)
2020-05-27 18:59:12,806 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 18:59:12,806 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 18:59:12,807 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 18:59:12,808 INFO sqlalchemy.engine.base.Engine Thread-75 : ('131', 1)
2020-05-27 18:59:12,808 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 18:59:12,808 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 18:59:12,811 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 18:59:12,811 INFO sqlalchemy.engine.base.Engine Thread-75 : (0,)
2020-05-27 18:59:12,812 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 18:59:12,812 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 18:59:12,812 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 18:59:12,812 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 18:59:12,812 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 18:59:12,812 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 18:59:12,812 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 18:59:12,812 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 18:59:12,812 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 18:59:12,812 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 18:59:12,813 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 18:59:12,813 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 18:59:12,813 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 18:59:12,813 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 18:59:12,813 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 18:59:12,813 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 18:59:12,813 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 18:59:12,813 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 18:59:12,813 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 18:59:12,813 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 18:59:12,813 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 18:59:12,814 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 18:59:12,814 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 18:59:12,814 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 18:59:12,816 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 18:59:12,816 INFO sqlalchemy.engine.base.Engine Thread-75 : (0,)
2020-05-27 18:59:12,817 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 18:59:12,817 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 18:59:12,817 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 18:59:12,817 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 18:59:12,817 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 18:59:12,818 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 18:59:12,818 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 18:59:12,818 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 18:59:12,818 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 18:59:12,818 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 18:59:12,818 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 18:59:12,818 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 18:59:12,818 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 18:59:12,818 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 18:59:12,818 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 18:59:12,818 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 18:59:12,818 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 18:59:12,819 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 18:59:12,819 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 18:59:12,819 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 18:59:12,819 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 18:59:12,819 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 18:59:12,819 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 18:59:12,819 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 18:59:12,819 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 18:59:12,819 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 18:59:12,819 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 18:59:12,819 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 18:59:12,819 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 18:59:12,819 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 18:59:12,820 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 18:59:12,820 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 18:59:12,820 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 18:59:12,820 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 18:59:12,820 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 18:59:12,820 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 18:59:12,820 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 18:59:12,820 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 18:59:12,820 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 18:59:12,820 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 18:59:12,820 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 18:59:12,820 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 18:59:12,821 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 18:59:12,821 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 18:59:12,821 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 18:59:12,821 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 18:59:12,821 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 18:59:12,821 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 18:59:12,821 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 18:59:12,821 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 18:59:12,821 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 18:59:12,821 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 18:59:12,821 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 18:59:12,822 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 18:59:12,822 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 18:59:12,822 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 18:59:12,822 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 18:59:12,822 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 18:59:12,822 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 18:59:12,822 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 18:59:12,822 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 18:59:12,822 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 18:59:12,822 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 18:59:12,822 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 18:59:12,823 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 18:59:12,823 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 18:59:12,823 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 18:59:12,823 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 18:59:12,823 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 18:59:12,823 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 18:59:12,823 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 18:59:12,823 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 18:59:12,823 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 18:59:12,823 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 18:59:12,823 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 18:59:12,824 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 18:59:12,824 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 18:59:12,824 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 18:59:12,824 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 18:59:12,824 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 18:59:12,824 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 18:59:12,858 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 18:59:12,858 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip', 1, 1)
2020-05-27 18:59:12,859 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 18:59:12,859 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 18:59:12,863 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-05-27 19:00:06,707 INFO sqlalchemy.engine.base.Engine Thread-85 : BEGIN (implicit)
2020-05-27 19:00:06,709 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:00:06,709 INFO sqlalchemy.engine.base.Engine Thread-85 : (1, 1)
2020-05-27 19:00:06,710 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:00:06,710 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:00:06,713 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:00:06,713 INFO sqlalchemy.engine.base.Engine Thread-85 : ('philip', 1, 1)
2020-05-27 19:00:06,714 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:00:06,714 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:00:06,715 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:00:06,715 INFO sqlalchemy.engine.base.Engine Thread-85 : ('131', 1)
2020-05-27 19:00:06,716 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:00:06,716 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 19:00:06,719 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:00:06,719 INFO sqlalchemy.engine.base.Engine Thread-85 : (0,)
2020-05-27 19:00:06,720 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:00:06,720 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:00:06,720 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:00:06,720 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:00:06,720 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:00:06,720 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:00:06,720 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:00:06,720 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:00:06,720 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:00:06,721 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:00:06,721 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:00:06,721 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:00:06,721 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:00:06,721 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:00:06,721 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:00:06,721 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:00:06,721 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:00:06,721 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:00:06,721 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:00:06,721 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:00:06,721 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:00:06,722 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:00:06,722 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:00:06,722 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:00:06,724 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:00:06,724 INFO sqlalchemy.engine.base.Engine Thread-85 : (0,)
2020-05-27 19:00:06,725 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:00:06,726 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:00:06,726 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:00:06,726 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:00:06,726 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:00:06,726 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 19:00:06,726 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:00:06,726 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:00:06,726 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:00:06,726 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:00:06,726 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:00:06,727 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:00:06,727 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:00:06,727 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:00:06,727 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:00:06,727 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:00:06,727 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:00:06,727 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:00:06,727 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:00:06,727 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:00:06,727 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:00:06,727 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 19:00:06,728 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:00:06,728 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:00:06,728 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:00:06,728 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:00:06,728 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:00:06,728 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:00:06,728 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:00:06,728 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:00:06,728 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:00:06,728 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:00:06,729 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:00:06,729 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:00:06,729 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:00:06,729 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:00:06,729 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:00:06,729 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:00:06,729 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:00:06,729 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:00:06,729 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:00:06,729 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:00:06,729 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:00:06,729 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:00:06,730 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:00:06,730 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:00:06,730 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:00:06,730 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:00:06,730 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 19:00:06,730 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:00:06,730 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:00:06,730 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:00:06,730 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:00:06,730 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:00:06,730 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:00:06,730 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:00:06,731 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:00:06,731 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:00:06,731 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:00:06,731 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:00:06,731 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:00:06,731 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:00:06,731 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 19:00:06,731 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:00:06,731 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:00:06,731 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:00:06,731 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:00:06,732 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:00:06,732 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:00:06,732 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:00:06,732 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:00:06,732 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:00:06,732 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:00:06,732 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:00:06,732 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:00:06,732 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:00:06,732 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:00:06,733 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:00:06,733 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:00:06,733 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:00:06,733 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:00:06,745 INFO sqlalchemy.engine.base.Engine Thread-85 : ROLLBACK
2020-05-27 19:00:28,691 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-05-27 19:00:28,693 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:00:28,693 INFO sqlalchemy.engine.base.Engine Thread-86 : (1, 1)
2020-05-27 19:00:28,694 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:00:28,694 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:00:28,697 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:00:28,697 INFO sqlalchemy.engine.base.Engine Thread-86 : ('philip', 1, 1)
2020-05-27 19:00:28,697 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:00:28,698 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:00:28,699 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:00:28,699 INFO sqlalchemy.engine.base.Engine Thread-86 : ('131', 1)
2020-05-27 19:00:28,700 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:00:28,700 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 19:00:28,703 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:00:28,703 INFO sqlalchemy.engine.base.Engine Thread-86 : (0,)
2020-05-27 19:00:28,704 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:00:28,704 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:00:28,704 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:00:28,704 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:00:28,704 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:00:28,704 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:00:28,704 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:00:28,704 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:00:28,704 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:00:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:00:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:00:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:00:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:00:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:00:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:00:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:00:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:00:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:00:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:00:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:00:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:00:28,706 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:00:28,706 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:00:28,706 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:00:28,708 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:00:28,708 INFO sqlalchemy.engine.base.Engine Thread-86 : (0,)
2020-05-27 19:00:28,709 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:00:28,709 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:00:28,709 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:00:28,709 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:00:28,709 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:00:28,709 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (131, 'BaU Firewall Change', '#FFDAB9 #000000', 127, 0, 0, 1)
2020-05-27 19:00:28,709 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:00:28,709 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:00:28,710 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:00:28,710 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:00:28,710 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:00:28,710 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:00:28,710 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:00:28,710 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:00:28,710 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:00:28,710 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:00:28,710 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:00:28,710 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:00:28,710 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:00:28,710 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:00:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:00:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 19:00:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:00:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:00:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:00:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:00:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:00:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:00:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:00:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:00:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:00:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:00:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:00:28,712 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:00:28,712 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:00:28,712 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:00:28,712 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:00:28,712 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:00:28,712 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:00:28,712 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:00:28,712 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:00:28,712 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:00:28,712 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:00:28,712 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:00:28,712 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:00:28,713 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:00:28,713 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:00:28,713 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:00:28,713 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 19:00:28,713 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:00:28,713 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:00:28,713 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:00:28,713 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:00:28,713 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:00:28,713 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:00:28,713 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:00:28,713 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:00:28,713 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:00:28,714 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:00:28,714 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:00:28,714 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:00:28,714 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:00:28,714 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 19:00:28,714 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:00:28,714 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:00:28,714 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:00:28,714 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:00:28,714 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:00:28,714 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:00:28,715 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:00:28,715 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:00:28,715 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:00:28,715 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:00:28,715 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:00:28,715 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:00:28,715 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:00:28,715 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:00:28,715 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:00:28,715 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:00:28,715 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:00:28,715 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:00:28,720 INFO sqlalchemy.engine.base.Engine Thread-86 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:00:28,720 INFO sqlalchemy.engine.base.Engine Thread-86 : ('131', "['bau_event']", 131)
2020-05-27 19:00:28,721 INFO sqlalchemy.engine.base.Engine Thread-86 : COMMIT
2020-05-27 19:00:28,773 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-05-27 19:00:28,774 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:00:28,775 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-05-27 19:00:28,775 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:00:28,776 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:00:28,778 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:00:28,778 INFO sqlalchemy.engine.base.Engine Thread-87 : ('philip', 1, 1)
2020-05-27 19:00:28,779 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:00:28,779 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:00:28,781 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:00:28,781 INFO sqlalchemy.engine.base.Engine Thread-87 : (0,)
2020-05-27 19:00:28,781 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:00:28,781 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:00:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:00:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:00:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:00:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:00:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:00:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:00:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:00:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:00:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:00:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:00:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:00:28,782 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:00:28,783 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:00:28,783 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:00:28,783 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:00:28,783 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:00:28,783 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:00:28,783 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:00:28,783 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:00:28,783 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:00:28,783 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:00:28,783 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:00:28,785 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:00:28,785 INFO sqlalchemy.engine.base.Engine Thread-87 : (127, 1)
2020-05-27 19:00:28,786 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:00:28,786 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:00:28,787 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:00:28,787 INFO sqlalchemy.engine.base.Engine Thread-87 : (127,)
2020-05-27 19:00:28,788 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:00:28,788 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 19:00:28,788 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 19:00:28,788 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 19:00:28,788 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:00:28,793 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:00:28,793 INFO sqlalchemy.engine.base.Engine Thread-87 : ('philip', 1, 1)
2020-05-27 19:00:28,793 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:00:28,793 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:00:28,797 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-05-27 19:01:30,168 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-05-27 19:01:30,169 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:01:30,170 INFO sqlalchemy.engine.base.Engine Thread-97 : (1, 1)
2020-05-27 19:01:30,170 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:30,171 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:30,173 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:01:30,173 INFO sqlalchemy.engine.base.Engine Thread-97 : ('philip', 1, 1)
2020-05-27 19:01:30,174 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:30,174 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:30,176 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:01:30,176 INFO sqlalchemy.engine.base.Engine Thread-97 : ('129', 1)
2020-05-27 19:01:30,176 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:30,176 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 19:01:30,179 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:01:30,179 INFO sqlalchemy.engine.base.Engine Thread-97 : (0,)
2020-05-27 19:01:30,179 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:30,180 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:01:30,180 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:01:30,180 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:01:30,180 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:01:30,180 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:01:30,180 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:01:30,180 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:01:30,180 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:01:30,181 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:01:30,181 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:01:30,181 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:01:30,181 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:01:30,181 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:01:30,181 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:01:30,181 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:01:30,181 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:01:30,181 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:01:30,181 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:01:30,181 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:01:30,182 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:01:30,182 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:01:30,182 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:01:30,182 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:01:30,184 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:01:30,184 INFO sqlalchemy.engine.base.Engine Thread-97 : (0,)
2020-05-27 19:01:30,185 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:30,185 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:01:30,185 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:01:30,185 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:01:30,185 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:01:30,185 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:01:30,185 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:01:30,185 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:01:30,186 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:01:30,186 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:01:30,186 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:01:30,186 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:01:30,186 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:01:30,186 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:01:30,186 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:01:30,186 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:01:30,186 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:01:30,186 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:01:30,186 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:01:30,186 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:01:30,187 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:01:30,187 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 19:01:30,187 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:01:30,187 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:01:30,187 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:01:30,187 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:01:30,187 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:01:30,187 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:01:30,187 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:01:30,187 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:01:30,187 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:01:30,187 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:01:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:01:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:01:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:01:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:01:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:01:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:01:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:01:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:01:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:01:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:01:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:01:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:01:30,189 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:01:30,189 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:01:30,189 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:01:30,189 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:01:30,189 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 19:01:30,189 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:01:30,189 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:01:30,189 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:01:30,189 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:01:30,189 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:01:30,189 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:01:30,189 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:01:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:01:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:01:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:01:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:01:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:01:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:01:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 19:01:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:01:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:01:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:01:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:01:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:01:30,191 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:01:30,191 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:01:30,191 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:01:30,191 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:01:30,191 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:01:30,191 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:01:30,191 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:01:30,191 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:01:30,191 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:01:30,191 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:01:30,191 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:01:30,192 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:01:30,192 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:01:30,199 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:01:30,199 INFO sqlalchemy.engine.base.Engine Thread-97 : ('philip', 1, 1)
2020-05-27 19:01:30,199 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:30,200 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:30,204 INFO sqlalchemy.engine.base.Engine Thread-97 : ROLLBACK
2020-05-27 19:01:42,767 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-05-27 19:01:42,768 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:01:42,768 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-05-27 19:01:42,769 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:42,769 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:42,771 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:01:42,771 INFO sqlalchemy.engine.base.Engine Thread-107 : ('philip', 1, 1)
2020-05-27 19:01:42,772 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:42,772 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:42,774 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:01:42,774 INFO sqlalchemy.engine.base.Engine Thread-107 : ('129', 1)
2020-05-27 19:01:42,774 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:42,775 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 19:01:42,777 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:01:42,777 INFO sqlalchemy.engine.base.Engine Thread-107 : (0,)
2020-05-27 19:01:42,778 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:42,778 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:01:42,778 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:01:42,779 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:01:42,779 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:01:42,779 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:01:42,779 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:01:42,779 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:01:42,779 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:01:42,779 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:01:42,779 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:01:42,779 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:01:42,779 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:01:42,779 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:01:42,780 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:01:42,780 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:01:42,780 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:01:42,780 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:01:42,780 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:01:42,780 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:01:42,780 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:01:42,780 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:01:42,780 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:01:42,780 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:01:42,783 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:01:42,783 INFO sqlalchemy.engine.base.Engine Thread-107 : (0,)
2020-05-27 19:01:42,784 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:42,784 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:01:42,784 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:01:42,784 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:01:42,784 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:01:42,784 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:01:42,784 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:01:42,784 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:01:42,785 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:01:42,785 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:01:42,785 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:01:42,785 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:01:42,785 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:01:42,785 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:01:42,785 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:01:42,785 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:01:42,785 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:01:42,785 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:01:42,785 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:01:42,786 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:01:42,786 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:01:42,786 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (129, 'Heightened Awareness Period (HAP)', '#48D1CC #000000', 127, 0, 0, 1)
2020-05-27 19:01:42,786 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:01:42,786 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:01:42,786 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:01:42,786 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:01:42,786 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:01:42,786 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:01:42,786 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:01:42,786 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:01:42,786 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:01:42,787 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:01:42,787 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:01:42,787 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:01:42,787 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:01:42,787 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:01:42,787 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:01:42,787 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:01:42,787 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:01:42,787 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:01:42,787 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:01:42,787 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:01:42,787 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:01:42,788 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:01:42,788 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:01:42,788 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:01:42,788 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:01:42,788 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:01:42,788 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 19:01:42,788 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:01:42,788 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:01:42,788 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:01:42,788 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:01:42,788 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:01:42,788 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:01:42,789 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:01:42,789 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:01:42,789 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:01:42,789 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:01:42,789 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:01:42,789 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:01:42,789 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:01:42,789 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 19:01:42,789 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:01:42,789 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:01:42,789 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:01:42,789 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:01:42,789 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:01:42,790 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:01:42,790 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:01:42,790 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:01:42,790 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:01:42,790 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:01:42,790 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:01:42,790 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:01:42,790 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:01:42,790 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:01:42,790 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:01:42,790 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:01:42,791 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:01:42,791 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:01:42,794 INFO sqlalchemy.engine.base.Engine Thread-107 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:01:42,794 INFO sqlalchemy.engine.base.Engine Thread-107 : ('129', "['hap_event']", 129)
2020-05-27 19:01:42,795 INFO sqlalchemy.engine.base.Engine Thread-107 : COMMIT
2020-05-27 19:01:42,827 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-05-27 19:01:42,828 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:01:42,828 INFO sqlalchemy.engine.base.Engine Thread-108 : (1, 1)
2020-05-27 19:01:42,828 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:42,829 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:42,831 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:01:42,831 INFO sqlalchemy.engine.base.Engine Thread-108 : ('philip', 1, 1)
2020-05-27 19:01:42,832 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:42,832 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:42,834 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:01:42,834 INFO sqlalchemy.engine.base.Engine Thread-108 : (0,)
2020-05-27 19:01:42,835 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:42,835 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:01:42,835 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:01:42,835 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:01:42,835 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:01:42,835 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:01:42,835 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:01:42,835 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:01:42,835 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:01:42,835 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:01:42,835 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:01:42,836 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:01:42,836 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:01:42,836 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:01:42,836 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:01:42,836 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:01:42,836 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:01:42,836 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:01:42,836 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:01:42,836 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:01:42,836 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:01:42,836 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:01:42,836 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:01:42,836 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:01:42,838 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:01:42,838 INFO sqlalchemy.engine.base.Engine Thread-108 : (127, 1)
2020-05-27 19:01:42,839 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:42,839 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:01:42,840 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:01:42,840 INFO sqlalchemy.engine.base.Engine Thread-108 : (127,)
2020-05-27 19:01:42,841 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:42,841 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 19:01:42,841 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:01:42,841 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 19:01:42,841 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:01:42,846 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:01:42,846 INFO sqlalchemy.engine.base.Engine Thread-108 : ('philip', 1, 1)
2020-05-27 19:01:42,846 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:42,847 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:42,850 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-05-27 19:01:44,701 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-05-27 19:01:44,702 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:01:44,702 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-05-27 19:01:44,703 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:44,703 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:44,705 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:01:44,705 INFO sqlalchemy.engine.base.Engine Thread-118 : ('philip', 1, 1)
2020-05-27 19:01:44,706 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:44,706 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:44,708 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:01:44,708 INFO sqlalchemy.engine.base.Engine Thread-118 : ('128', 1)
2020-05-27 19:01:44,708 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:44,708 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 19:01:44,711 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:01:44,711 INFO sqlalchemy.engine.base.Engine Thread-118 : (0,)
2020-05-27 19:01:44,711 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:44,712 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:01:44,712 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:01:44,712 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:01:44,712 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:01:44,712 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:01:44,712 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:01:44,712 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:01:44,712 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:01:44,712 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:01:44,712 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:01:44,712 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:01:44,713 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:01:44,713 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:01:44,713 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:01:44,713 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:01:44,713 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:01:44,713 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:01:44,713 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:01:44,713 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:01:44,713 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:01:44,713 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:01:44,714 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:01:44,714 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:01:44,715 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:01:44,716 INFO sqlalchemy.engine.base.Engine Thread-118 : (0,)
2020-05-27 19:01:44,716 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:44,717 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:01:44,717 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:01:44,717 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:01:44,717 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:01:44,717 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:01:44,717 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:01:44,717 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:01:44,717 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:01:44,717 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:01:44,718 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:01:44,718 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:01:44,718 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:01:44,718 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:01:44,718 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:01:44,718 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:01:44,718 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:01:44,718 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:01:44,718 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:01:44,718 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:01:44,718 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:01:44,719 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:01:44,719 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:01:44,719 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:01:44,719 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:01:44,719 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:01:44,719 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:01:44,719 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:01:44,719 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:01:44,719 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:01:44,719 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:01:44,719 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:01:44,720 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:01:44,720 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:01:44,720 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:01:44,720 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:01:44,720 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:01:44,720 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:01:44,720 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:01:44,720 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:01:44,720 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:01:44,720 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:01:44,720 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:01:44,721 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:01:44,721 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:01:44,721 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:01:44,721 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:01:44,721 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:01:44,721 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 19:01:44,721 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:01:44,721 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:01:44,721 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:01:44,721 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:01:44,721 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:01:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:01:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:01:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:01:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:01:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:01:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:01:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:01:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:01:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 19:01:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:01:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:01:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:01:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:01:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:01:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:01:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:01:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:01:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:01:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:01:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:01:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:01:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:01:44,724 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:01:44,724 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:01:44,724 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:01:44,724 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:01:44,724 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:01:44,731 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:01:44,731 INFO sqlalchemy.engine.base.Engine Thread-118 : ('philip', 1, 1)
2020-05-27 19:01:44,731 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:44,732 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:44,735 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-05-27 19:01:54,601 INFO sqlalchemy.engine.base.Engine Thread-128 : BEGIN (implicit)
2020-05-27 19:01:54,602 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:01:54,602 INFO sqlalchemy.engine.base.Engine Thread-128 : (1, 1)
2020-05-27 19:01:54,603 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:54,603 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:54,605 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:01:54,606 INFO sqlalchemy.engine.base.Engine Thread-128 : ('philip', 1, 1)
2020-05-27 19:01:54,606 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:54,607 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:54,608 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:01:54,608 INFO sqlalchemy.engine.base.Engine Thread-128 : ('128', 1)
2020-05-27 19:01:54,609 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:54,609 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 19:01:54,612 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:01:54,612 INFO sqlalchemy.engine.base.Engine Thread-128 : (0,)
2020-05-27 19:01:54,613 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:54,613 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:01:54,613 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:01:54,613 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:01:54,613 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:01:54,613 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:01:54,613 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:01:54,613 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:01:54,613 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:01:54,614 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:01:54,614 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:01:54,614 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:01:54,614 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:01:54,614 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:01:54,614 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:01:54,614 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:01:54,614 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:01:54,614 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:01:54,614 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:01:54,614 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:01:54,615 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:01:54,615 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:01:54,615 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:01:54,615 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:01:54,617 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:01:54,617 INFO sqlalchemy.engine.base.Engine Thread-128 : (0,)
2020-05-27 19:01:54,618 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:54,619 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:01:54,619 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:01:54,619 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:01:54,619 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:01:54,619 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:01:54,619 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:01:54,619 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:01:54,619 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:01:54,619 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:01:54,619 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:01:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:01:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:01:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:01:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:01:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:01:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:01:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:01:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:01:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:01:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:01:54,620 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:01:54,621 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:01:54,621 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:01:54,621 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:01:54,621 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:01:54,621 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:01:54,621 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:01:54,621 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:01:54,621 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:01:54,621 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:01:54,621 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:01:54,621 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:01:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:01:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:01:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:01:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:01:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:01:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:01:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:01:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:01:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:01:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:01:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:01:54,622 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:01:54,623 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:01:54,623 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:01:54,623 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:01:54,623 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (128, 'Informational', '#ADD8E6 #000000', 127, 0, 0, 1)
2020-05-27 19:01:54,623 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:01:54,623 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:01:54,623 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:01:54,623 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:01:54,623 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:01:54,623 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:01:54,623 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:01:54,624 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:01:54,624 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:01:54,624 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:01:54,624 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:01:54,624 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:01:54,624 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:01:54,624 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 19:01:54,624 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:01:54,624 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:01:54,624 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:01:54,624 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:01:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:01:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:01:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:01:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:01:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:01:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:01:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:01:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:01:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:01:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:01:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:01:54,625 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:01:54,626 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:01:54,626 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:01:54,629 INFO sqlalchemy.engine.base.Engine Thread-128 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:01:54,629 INFO sqlalchemy.engine.base.Engine Thread-128 : ('128', "['info_event']", 128)
2020-05-27 19:01:54,630 INFO sqlalchemy.engine.base.Engine Thread-128 : COMMIT
2020-05-27 19:01:54,677 INFO sqlalchemy.engine.base.Engine Thread-129 : BEGIN (implicit)
2020-05-27 19:01:54,679 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:01:54,679 INFO sqlalchemy.engine.base.Engine Thread-129 : (1, 1)
2020-05-27 19:01:54,679 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:54,680 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:54,682 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:01:54,682 INFO sqlalchemy.engine.base.Engine Thread-129 : ('philip', 1, 1)
2020-05-27 19:01:54,683 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:54,683 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:54,685 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:01:54,685 INFO sqlalchemy.engine.base.Engine Thread-129 : (0,)
2020-05-27 19:01:54,686 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:54,686 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:01:54,686 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:01:54,686 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:01:54,686 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:01:54,686 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:01:54,686 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:01:54,686 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:01:54,686 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:01:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:01:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:01:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:01:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:01:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:01:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:01:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:01:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:01:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:01:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:01:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:01:54,688 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:01:54,688 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:01:54,688 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:01:54,688 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:01:54,690 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:01:54,690 INFO sqlalchemy.engine.base.Engine Thread-129 : (127, 1)
2020-05-27 19:01:54,690 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:54,691 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:01:54,692 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:01:54,692 INFO sqlalchemy.engine.base.Engine Thread-129 : (127,)
2020-05-27 19:01:54,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:54,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:01:54,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:01:54,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 19:01:54,693 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:01:54,697 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:01:54,698 INFO sqlalchemy.engine.base.Engine Thread-129 : ('philip', 1, 1)
2020-05-27 19:01:54,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:54,698 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:54,702 INFO sqlalchemy.engine.base.Engine Thread-129 : ROLLBACK
2020-05-27 19:01:55,999 INFO sqlalchemy.engine.base.Engine Thread-139 : BEGIN (implicit)
2020-05-27 19:01:56,000 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:01:56,000 INFO sqlalchemy.engine.base.Engine Thread-139 : (1, 1)
2020-05-27 19:01:56,001 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:56,001 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:56,004 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:01:56,004 INFO sqlalchemy.engine.base.Engine Thread-139 : ('philip', 1, 1)
2020-05-27 19:01:56,004 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:56,005 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:56,006 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:01:56,006 INFO sqlalchemy.engine.base.Engine Thread-139 : ('130', 1)
2020-05-27 19:01:56,007 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:56,007 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 19:01:56,009 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:01:56,009 INFO sqlalchemy.engine.base.Engine Thread-139 : (0,)
2020-05-27 19:01:56,010 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:56,010 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:01:56,010 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:01:56,010 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:01:56,010 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:01:56,010 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:01:56,010 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:01:56,011 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:01:56,011 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:01:56,011 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:01:56,011 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:01:56,011 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:01:56,011 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:01:56,011 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:01:56,011 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:01:56,011 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:01:56,011 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:01:56,011 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:01:56,011 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:01:56,012 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:01:56,012 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:01:56,012 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:01:56,012 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:01:56,012 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:01:56,014 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:01:56,014 INFO sqlalchemy.engine.base.Engine Thread-139 : (0,)
2020-05-27 19:01:56,015 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:01:56,015 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:01:56,015 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:01:56,015 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:01:56,015 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:01:56,015 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:01:56,016 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:01:56,016 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:01:56,016 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:01:56,016 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:01:56,016 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:01:56,016 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:01:56,016 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:01:56,016 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:01:56,016 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:01:56,016 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:01:56,016 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:01:56,017 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:01:56,017 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:01:56,017 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:01:56,017 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:01:56,017 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:01:56,017 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:01:56,017 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:01:56,017 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:01:56,017 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:01:56,017 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:01:56,017 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:01:56,017 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:01:56,018 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:01:56,018 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:01:56,018 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:01:56,018 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:01:56,018 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:01:56,018 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:01:56,018 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:01:56,018 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:01:56,018 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:01:56,018 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:01:56,019 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:01:56,019 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:01:56,019 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:01:56,019 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:01:56,019 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:01:56,019 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:01:56,019 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:01:56,019 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:01:56,019 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:01:56,019 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:01:56,019 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:01:56,020 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:01:56,020 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:01:56,020 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:01:56,020 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:01:56,020 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:01:56,020 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:01:56,020 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:01:56,020 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:01:56,020 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:01:56,020 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:01:56,020 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:01:56,021 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:01:56,021 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 19:01:56,021 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:01:56,021 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:01:56,021 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:01:56,021 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:01:56,021 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:01:56,021 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:01:56,021 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:01:56,021 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:01:56,021 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:01:56,022 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:01:56,022 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:01:56,022 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:01:56,022 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:01:56,022 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:01:56,022 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:01:56,022 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:01:56,022 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:01:56,022 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:01:56,030 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:01:56,030 INFO sqlalchemy.engine.base.Engine Thread-139 : ('philip', 1, 1)
2020-05-27 19:01:56,030 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:01:56,031 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:01:56,034 INFO sqlalchemy.engine.base.Engine Thread-139 : ROLLBACK
2020-05-27 19:02:12,229 INFO sqlalchemy.engine.base.Engine Thread-149 : BEGIN (implicit)
2020-05-27 19:02:12,230 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:02:12,230 INFO sqlalchemy.engine.base.Engine Thread-149 : (1, 1)
2020-05-27 19:02:12,231 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:02:12,231 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:02:12,234 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:02:12,234 INFO sqlalchemy.engine.base.Engine Thread-149 : ('philip', 1, 1)
2020-05-27 19:02:12,234 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:02:12,235 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:02:12,236 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:02:12,236 INFO sqlalchemy.engine.base.Engine Thread-149 : ('130', 1)
2020-05-27 19:02:12,237 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:02:12,237 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 19:02:12,239 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:02:12,240 INFO sqlalchemy.engine.base.Engine Thread-149 : (0,)
2020-05-27 19:02:12,240 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:02:12,240 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:02:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:02:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:02:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:02:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:02:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:02:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:02:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:02:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:02:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:02:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:02:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:02:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:02:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:02:12,242 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:02:12,242 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:02:12,242 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:02:12,242 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:02:12,242 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:02:12,242 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:02:12,242 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:02:12,242 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:02:12,242 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:02:12,244 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:02:12,244 INFO sqlalchemy.engine.base.Engine Thread-149 : (0,)
2020-05-27 19:02:12,245 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:02:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:02:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:02:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:02:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:02:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:02:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:02:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:02:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:02:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:02:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:02:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:02:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:02:12,247 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:02:12,247 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:02:12,247 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:02:12,247 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:02:12,247 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:02:12,247 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:02:12,247 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:02:12,247 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:02:12,247 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:02:12,247 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:02:12,247 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:02:12,247 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:02:12,247 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:02:12,248 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:02:12,248 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:02:12,248 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:02:12,248 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:02:12,248 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:02:12,248 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:02:12,248 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:02:12,248 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:02:12,248 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:02:12,248 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:02:12,248 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:02:12,248 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:02:12,248 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:02:12,249 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:02:12,249 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:02:12,249 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:02:12,249 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:02:12,249 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:02:12,249 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:02:12,249 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:02:12,249 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:02:12,249 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:02:12,249 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:02:12,249 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:02:12,249 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:02:12,250 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:02:12,250 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:02:12,250 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:02:12,250 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:02:12,250 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:02:12,250 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:02:12,250 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:02:12,250 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:02:12,250 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:02:12,250 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:02:12,250 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:02:12,250 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (130, 'No Changes Allowed', '#FFE4E1 #000000', 127, 0, 0, 1)
2020-05-27 19:02:12,251 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:02:12,251 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:02:12,251 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:02:12,251 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:02:12,251 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:02:12,251 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:02:12,251 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:02:12,251 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:02:12,251 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:02:12,251 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:02:12,251 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:02:12,251 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:02:12,252 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:02:12,252 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:02:12,252 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:02:12,252 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:02:12,252 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:02:12,252 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:02:12,255 INFO sqlalchemy.engine.base.Engine Thread-149 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:02:12,255 INFO sqlalchemy.engine.base.Engine Thread-149 : ('130', "['locked_event']", 130)
2020-05-27 19:02:12,256 INFO sqlalchemy.engine.base.Engine Thread-149 : COMMIT
2020-05-27 19:02:12,293 INFO sqlalchemy.engine.base.Engine Thread-150 : BEGIN (implicit)
2020-05-27 19:02:12,294 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:02:12,294 INFO sqlalchemy.engine.base.Engine Thread-150 : (1, 1)
2020-05-27 19:02:12,295 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:02:12,295 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:02:12,298 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:02:12,298 INFO sqlalchemy.engine.base.Engine Thread-150 : ('philip', 1, 1)
2020-05-27 19:02:12,299 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:02:12,299 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:02:12,301 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:02:12,301 INFO sqlalchemy.engine.base.Engine Thread-150 : (0,)
2020-05-27 19:02:12,302 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:02:12,302 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:02:12,302 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:02:12,302 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:02:12,302 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:02:12,302 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:02:12,303 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:02:12,303 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:02:12,303 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:02:12,303 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:02:12,303 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:02:12,303 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:02:12,303 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:02:12,303 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:02:12,303 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:02:12,303 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:02:12,303 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:02:12,303 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:02:12,303 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:02:12,304 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:02:12,304 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:02:12,304 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:02:12,304 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:02:12,304 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:02:12,306 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:02:12,306 INFO sqlalchemy.engine.base.Engine Thread-150 : (127, 1)
2020-05-27 19:02:12,306 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:02:12,306 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:02:12,308 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:02:12,308 INFO sqlalchemy.engine.base.Engine Thread-150 : (127,)
2020-05-27 19:02:12,308 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:02:12,308 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:02:12,308 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:02:12,309 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (130, 'No Changes Allowed', "['locked_event']", 127, 0, 0, 1)
2020-05-27 19:02:12,309 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:02:12,313 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:02:12,313 INFO sqlalchemy.engine.base.Engine Thread-150 : ('philip', 1, 1)
2020-05-27 19:02:12,314 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:02:12,314 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:02:12,318 INFO sqlalchemy.engine.base.Engine Thread-150 : ROLLBACK
2020-05-27 19:03:16,603 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 19:03:16,603 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:03:16,605 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 19:03:16,605 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-27 19:03:16,606 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 19:03:16,606 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:03:16,607 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 19:03:16,607 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-27 19:03:16,607 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-27 19:03:16,607 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:03:16,608 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-27 19:03:16,608 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-27 19:03:16,608 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 19:03:16,608 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:03:16,609 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 19:03:16,609 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 19:03:16,610 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 19:03:16,610 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:03:16,611 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 19:03:16,611 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:03:16,611 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 19:03:16,611 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:03:16,612 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-27 19:03:16,614 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:03:16,614 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:03:16,615 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:03:16,616 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', "['info_event']", 'Date Event')
2020-05-27 19:03:16,616 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', "['info_event']", 'Date Event')
2020-05-27 19:03:16,616 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:03:16,616 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:03:16,616 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', "['info_event']", 'Date Event')
2020-05-27 19:03:16,616 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', "['locked_event']", 'Date Event')
2020-05-27 19:03:16,616 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:03:16,616 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Informational', "['info_event']", 'Date Event')
2020-05-27 19:03:16,616 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', "['bau_event']", 'Date Event')
2020-05-27 19:03:16,616 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:03:16,620 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:03:16,620 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 19:03:16,621 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:03:16,626 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:03:16,626 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:03:16,627 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:03:16,627 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:03:16,628 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:03:16,628 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:03:16,628 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:03:16,628 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:03:16,628 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:03:16,628 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:03:16,633 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:03:16,633 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:03:16,634 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:03:16,634 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:03:16,634 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:03:16,634 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:03:16,634 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:03:16,634 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:03:16,634 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:03:16,637 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-27 19:03:16,722 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-05-27 19:03:16,726 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:03:16,726 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-05-27 19:03:16,727 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:03:16,727 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:03:16,745 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-05-27 19:03:54,865 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-05-27 19:03:54,867 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:03:54,867 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-05-27 19:03:54,868 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:03:54,868 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:03:54,871 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:03:54,871 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-05-27 19:03:54,872 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:03:54,872 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:03:54,876 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:03:54,876 INFO sqlalchemy.engine.base.Engine Thread-4 : (0,)
2020-05-27 19:03:54,877 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:03:54,877 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:03:54,877 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:03:54,877 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:03:54,877 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:03:54,877 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:03:54,877 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:03:54,877 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:03:54,878 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:03:54,878 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:03:54,878 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:03:54,878 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:03:54,878 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:03:54,878 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:03:54,878 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:03:54,878 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:03:54,878 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:03:54,878 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:03:54,878 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:03:54,879 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:03:54,879 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:03:54,879 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:03:54,879 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:03:54,879 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:03:54,881 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:03:54,881 INFO sqlalchemy.engine.base.Engine Thread-4 : (127, 1)
2020-05-27 19:03:54,882 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:03:54,882 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:03:54,883 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:03:54,883 INFO sqlalchemy.engine.base.Engine Thread-4 : (127,)
2020-05-27 19:03:54,883 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:03:54,884 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:03:54,884 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:03:54,884 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (130, 'No Changes Allowed', "['locked_event']", 127, 0, 0, 1)
2020-05-27 19:03:54,884 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:03:54,959 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:03:54,959 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-05-27 19:03:54,960 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:03:54,960 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:03:54,964 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-05-27 19:03:56,305 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-05-27 19:03:56,311 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:03:56,311 INFO sqlalchemy.engine.base.Engine Thread-15 : ()
2020-05-27 19:03:56,313 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:03:56,313 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:03:56,314 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:03:56,315 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:03:56,315 INFO sqlalchemy.engine.base.Engine Thread-15 : (100,)
2020-05-27 19:03:56,316 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:03:56,316 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:03:56,316 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:03:56,316 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:03:56,316 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:03:56,316 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:03:56,319 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:03:56,319 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-05-27 19:03:56,320 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:03:56,320 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:03:56,333 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:03:56,334 INFO sqlalchemy.engine.base.Engine Thread-15 : ('philip', 1, 1)
2020-05-27 19:03:56,334 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:03:56,335 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:03:56,336 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-05-27 19:03:56,615 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-05-27 19:03:56,617 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:03:56,617 INFO sqlalchemy.engine.base.Engine Thread-25 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:03:56,618 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:03:56,618 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:03:56,618 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:03:56,619 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', "['bau_event']", 'Date Event')
2020-05-27 19:03:56,622 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:03:56,623 INFO sqlalchemy.engine.base.Engine Thread-25 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:03:56,624 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:03:56,628 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:03:56,628 INFO sqlalchemy.engine.base.Engine Thread-25 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:03:56,629 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:03:56,634 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:03:56,634 INFO sqlalchemy.engine.base.Engine Thread-25 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:03:56,635 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:03:56,635 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:03:56,636 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-05-27 19:03:56,663 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-05-27 19:03:56,665 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:03:56,665 INFO sqlalchemy.engine.base.Engine Thread-26 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:03:56,666 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:03:56,666 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:03:56,666 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:03:56,666 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', "['bau_event']", 'Date Event')
2020-05-27 19:03:56,670 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:03:56,670 INFO sqlalchemy.engine.base.Engine Thread-26 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:03:56,671 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:03:56,677 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:03:56,677 INFO sqlalchemy.engine.base.Engine Thread-26 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:03:56,677 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:03:56,681 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:03:56,682 INFO sqlalchemy.engine.base.Engine Thread-26 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:03:56,683 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:03:56,683 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:03:56,684 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-05-27 19:04:04,896 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-05-27 19:04:04,898 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:04:04,898 INFO sqlalchemy.engine.base.Engine Thread-27 : ('Date Event', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-05-27 19:04:04,899 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:04:04,899 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', "['info_event']", 'Date Event')
2020-05-27 19:04:04,899 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:04:04,899 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:04:04,903 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:04:04,903 INFO sqlalchemy.engine.base.Engine Thread-27 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'NO')
2020-05-27 19:04:04,904 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:04:04,908 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:04:04,909 INFO sqlalchemy.engine.base.Engine Thread-27 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-05-27 19:04:04,909 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:04:04,914 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:04:04,914 INFO sqlalchemy.engine.base.Engine Thread-27 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-05-27 19:04:04,915 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:04:04,916 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-05-27 19:04:06,594 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-05-27 19:04:06,595 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:04:06,595 INFO sqlalchemy.engine.base.Engine Thread-28 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:04:06,596 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:04:06,596 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:04:06,597 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:04:06,597 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', "['bau_event']", 'Date Event')
2020-05-27 19:04:06,601 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:04:06,601 INFO sqlalchemy.engine.base.Engine Thread-28 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:04:06,602 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:04:06,606 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:04:06,606 INFO sqlalchemy.engine.base.Engine Thread-28 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:04:06,607 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:04:06,611 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:04:06,611 INFO sqlalchemy.engine.base.Engine Thread-28 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:04:06,612 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:04:06,612 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:04:06,613 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-05-27 19:04:53,128 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-05-27 19:04:53,129 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:04:53,130 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-05-27 19:04:53,130 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:04:53,131 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:04:53,133 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:04:53,133 INFO sqlalchemy.engine.base.Engine Thread-29 : ('philip', 1, 1)
2020-05-27 19:04:53,134 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:04:53,134 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:04:53,137 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:04:53,137 INFO sqlalchemy.engine.base.Engine Thread-29 : (0,)
2020-05-27 19:04:53,138 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:04:53,138 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:04:53,138 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:04:53,138 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:04:53,138 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:04:53,138 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:04:53,138 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:04:53,139 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:04:53,139 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:04:53,139 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:04:53,139 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:04:53,139 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:04:53,139 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:04:53,139 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:04:53,139 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:04:53,139 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:04:53,139 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:04:53,140 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:04:53,140 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:04:53,140 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:04:53,140 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:04:53,140 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:04:53,140 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:04:53,140 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:04:53,142 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-05-27 19:04:53,142 INFO sqlalchemy.engine.base.Engine Thread-29 : (0, 1)
2020-05-27 19:04:53,143 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:04:53,143 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:04:53,144 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:04:53,144 INFO sqlalchemy.engine.base.Engine Thread-29 : (66,)
2020-05-27 19:04:53,145 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:04:53,145 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:04:53,145 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:04:53,149 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:04:53,149 INFO sqlalchemy.engine.base.Engine Thread-29 : ('philip', 1, 1)
2020-05-27 19:04:53,150 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:04:53,150 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:04:53,154 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-05-27 19:05:02,691 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-05-27 19:05:02,692 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:05:02,692 INFO sqlalchemy.engine.base.Engine Thread-39 : (1, 1)
2020-05-27 19:05:02,693 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:02,694 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:02,696 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:05:02,696 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip', 1, 1)
2020-05-27 19:05:02,697 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:02,697 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:02,706 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 19:05:02,707 INFO sqlalchemy.engine.base.Engine Thread-39 : ()
2020-05-27 19:05:02,708 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 19:05:02,708 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 19:05:02,708 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 19:05:02,708 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 19:05:02,708 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 19:05:02,709 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 19:05:02,709 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 19:05:02,709 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 19:05:02,709 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 19:05:02,709 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 19:05:02,709 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 19:05:02,728 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:05:02,728 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip', 1, 1)
2020-05-27 19:05:02,729 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:02,729 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:02,732 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-05-27 19:05:04,549 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-05-27 19:05:04,550 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:05:04,551 INFO sqlalchemy.engine.base.Engine Thread-49 : (1, 1)
2020-05-27 19:05:04,551 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:04,551 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:04,554 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:05:04,554 INFO sqlalchemy.engine.base.Engine Thread-49 : ('philip', 1, 1)
2020-05-27 19:05:04,555 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:04,555 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:04,557 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 19:05:04,557 INFO sqlalchemy.engine.base.Engine Thread-49 : ('9', 1)
2020-05-27 19:05:04,558 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 19:05:04,559 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 129, None, 106)
2020-05-27 19:05:04,561 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:05:04,561 INFO sqlalchemy.engine.base.Engine Thread-49 : (82,)
2020-05-27 19:05:04,562 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:05:04,562 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:05:04,562 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:05:04,562 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:05:04,564 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 19:05:04,564 INFO sqlalchemy.engine.base.Engine Thread-49 : (1,)
2020-05-27 19:05:04,564 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:05:04,565 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:05:04,565 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:05:04,567 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 19:05:04,567 INFO sqlalchemy.engine.base.Engine Thread-49 : ()
2020-05-27 19:05:04,568 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 19:05:04,568 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 19:05:04,568 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 19:05:04,569 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:05:04,569 INFO sqlalchemy.engine.base.Engine Thread-49 : (127,)
2020-05-27 19:05:04,570 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:05:04,570 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:05:04,570 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:05:04,570 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:05:04,570 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (130, 'No Changes Allowed', "['locked_event']", 127, 0, 0, 1)
2020-05-27 19:05:04,572 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:05:04,572 INFO sqlalchemy.engine.base.Engine Thread-49 : (105,)
2020-05-27 19:05:04,572 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:05:04,572 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:05:04,573 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:05:04,612 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:05:04,612 INFO sqlalchemy.engine.base.Engine Thread-49 : ('philip', 1, 1)
2020-05-27 19:05:04,612 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:04,613 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:04,616 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-05-27 19:05:09,917 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-05-27 19:05:09,918 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:05:09,918 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-05-27 19:05:09,919 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:09,919 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:09,922 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:05:09,922 INFO sqlalchemy.engine.base.Engine Thread-59 : ('philip', 1, 1)
2020-05-27 19:05:09,922 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:09,923 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:09,924 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 19:05:09,924 INFO sqlalchemy.engine.base.Engine Thread-59 : ('9', 1)
2020-05-27 19:05:09,925 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 19:05:09,925 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 129, None, 106)
2020-05-27 19:05:09,931 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:05:09,932 INFO sqlalchemy.engine.base.Engine Thread-59 : (82,)
2020-05-27 19:05:09,932 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:05:09,932 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:05:09,933 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:05:09,933 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:05:09,934 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 19:05:09,934 INFO sqlalchemy.engine.base.Engine Thread-59 : (1,)
2020-05-27 19:05:09,935 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:05:09,935 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:05:09,935 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:05:09,936 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 19:05:09,936 INFO sqlalchemy.engine.base.Engine Thread-59 : ()
2020-05-27 19:05:09,937 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 19:05:09,937 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 19:05:09,937 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 19:05:09,939 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:05:09,939 INFO sqlalchemy.engine.base.Engine Thread-59 : (127,)
2020-05-27 19:05:09,939 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:05:09,939 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:05:09,940 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:05:09,940 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:05:09,940 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (130, 'No Changes Allowed', "['locked_event']", 127, 0, 0, 1)
2020-05-27 19:05:09,941 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:05:09,941 INFO sqlalchemy.engine.base.Engine Thread-59 : (105,)
2020-05-27 19:05:09,942 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:05:09,942 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:05:09,942 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:05:09,947 INFO sqlalchemy.engine.base.Engine Thread-59 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_type=%s, doi_filter=%s WHERE datesofinterest.id = %s
2020-05-27 19:05:09,947 INFO sqlalchemy.engine.base.Engine Thread-59 : ('9', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 130, '', 9)
2020-05-27 19:05:09,948 INFO sqlalchemy.engine.base.Engine Thread-59 : COMMIT
2020-05-27 19:05:09,988 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-05-27 19:05:09,989 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:05:09,989 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-05-27 19:05:09,990 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:09,990 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:09,993 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:05:09,993 INFO sqlalchemy.engine.base.Engine Thread-60 : ('philip', 1, 1)
2020-05-27 19:05:09,993 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:09,994 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:10,003 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 19:05:10,003 INFO sqlalchemy.engine.base.Engine Thread-60 : ()
2020-05-27 19:05:10,004 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 19:05:10,004 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 19:05:10,004 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 19:05:10,004 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 19:05:10,004 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 19:05:10,004 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 19:05:10,004 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 19:05:10,005 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 19:05:10,005 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 19:05:10,005 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 19:05:10,005 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 19:05:10,009 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:05:10,009 INFO sqlalchemy.engine.base.Engine Thread-60 : ('philip', 1, 1)
2020-05-27 19:05:10,010 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:10,010 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:10,014 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-05-27 19:05:31,128 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-05-27 19:05:31,131 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:05:31,131 INFO sqlalchemy.engine.base.Engine Thread-70 : ()
2020-05-27 19:05:31,132 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:05:31,133 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:05:31,133 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:05:31,135 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:05:31,135 INFO sqlalchemy.engine.base.Engine Thread-70 : (100,)
2020-05-27 19:05:31,136 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:05:31,136 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:05:31,136 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:05:31,136 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:05:31,136 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:05:31,136 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:05:31,139 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:05:31,139 INFO sqlalchemy.engine.base.Engine Thread-70 : (1, 1)
2020-05-27 19:05:31,140 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:31,140 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:31,145 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:05:31,145 INFO sqlalchemy.engine.base.Engine Thread-70 : ('philip', 1, 1)
2020-05-27 19:05:31,145 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:31,146 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:31,148 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-05-27 19:05:31,446 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-05-27 19:05:31,448 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:05:31,448 INFO sqlalchemy.engine.base.Engine Thread-80 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:31,449 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:05:31,449 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', "['locked_event']", 'Date Event')
2020-05-27 19:05:31,449 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:05:31,450 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', "['bau_event']", 'Date Event')
2020-05-27 19:05:31,454 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:05:31,454 INFO sqlalchemy.engine.base.Engine Thread-80 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:05:31,455 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:31,460 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:05:31,460 INFO sqlalchemy.engine.base.Engine Thread-80 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:31,461 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:31,465 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:05:31,465 INFO sqlalchemy.engine.base.Engine Thread-80 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:31,466 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:31,467 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:05:31,468 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-05-27 19:05:31,493 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-05-27 19:05:31,494 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:05:31,494 INFO sqlalchemy.engine.base.Engine Thread-81 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:31,495 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:05:31,495 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', "['locked_event']", 'Date Event')
2020-05-27 19:05:31,496 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:05:31,496 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', "['bau_event']", 'Date Event')
2020-05-27 19:05:31,500 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:05:31,500 INFO sqlalchemy.engine.base.Engine Thread-81 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:05:31,501 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:31,506 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:05:31,506 INFO sqlalchemy.engine.base.Engine Thread-81 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:31,507 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:31,512 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:05:31,513 INFO sqlalchemy.engine.base.Engine Thread-81 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:31,514 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:31,514 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:05:31,515 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-05-27 19:05:34,754 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-05-27 19:05:34,756 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:05:34,757 INFO sqlalchemy.engine.base.Engine Thread-82 : ()
2020-05-27 19:05:34,758 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:05:34,758 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:05:34,758 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:05:34,760 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:05:34,760 INFO sqlalchemy.engine.base.Engine Thread-82 : (100,)
2020-05-27 19:05:34,760 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:05:34,761 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:05:34,761 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:05:34,761 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:05:34,761 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:05:34,761 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:05:34,763 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:05:34,763 INFO sqlalchemy.engine.base.Engine Thread-82 : (1, 1)
2020-05-27 19:05:34,764 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:34,764 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:34,769 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:05:34,769 INFO sqlalchemy.engine.base.Engine Thread-82 : ('philip', 1, 1)
2020-05-27 19:05:34,770 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:34,770 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:34,772 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-05-27 19:05:35,036 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-05-27 19:05:35,038 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:05:35,038 INFO sqlalchemy.engine.base.Engine Thread-92 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:35,039 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:05:35,039 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', "['locked_event']", 'Date Event')
2020-05-27 19:05:35,039 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:05:35,039 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', "['bau_event']", 'Date Event')
2020-05-27 19:05:35,043 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:05:35,043 INFO sqlalchemy.engine.base.Engine Thread-92 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:05:35,044 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:35,049 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:05:35,049 INFO sqlalchemy.engine.base.Engine Thread-92 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:35,051 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:35,056 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:05:35,056 INFO sqlalchemy.engine.base.Engine Thread-92 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:35,057 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:35,057 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:05:35,058 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-05-27 19:05:35,085 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-05-27 19:05:35,086 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:05:35,086 INFO sqlalchemy.engine.base.Engine Thread-94 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:35,087 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:05:35,088 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', "['locked_event']", 'Date Event')
2020-05-27 19:05:35,088 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:05:35,088 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', "['bau_event']", 'Date Event')
2020-05-27 19:05:35,092 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:05:35,092 INFO sqlalchemy.engine.base.Engine Thread-94 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:05:35,093 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:35,097 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:05:35,097 INFO sqlalchemy.engine.base.Engine Thread-94 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:35,098 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:35,102 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:05:35,102 INFO sqlalchemy.engine.base.Engine Thread-94 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:35,103 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:35,104 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:05:35,104 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-05-27 19:05:36,710 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-05-27 19:05:36,712 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:05:36,712 INFO sqlalchemy.engine.base.Engine Thread-95 : ()
2020-05-27 19:05:36,713 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:05:36,714 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:05:36,714 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:05:36,716 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:05:36,716 INFO sqlalchemy.engine.base.Engine Thread-95 : (100,)
2020-05-27 19:05:36,716 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:05:36,717 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:05:36,717 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:05:36,717 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:05:36,717 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:05:36,717 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:05:36,719 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:05:36,719 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-05-27 19:05:36,720 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:36,720 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:36,724 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:05:36,724 INFO sqlalchemy.engine.base.Engine Thread-95 : ('philip', 1, 1)
2020-05-27 19:05:36,725 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:36,725 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:36,727 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-05-27 19:05:36,992 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-05-27 19:05:36,993 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:05:36,993 INFO sqlalchemy.engine.base.Engine Thread-105 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:36,994 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:05:36,995 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', "['locked_event']", 'Date Event')
2020-05-27 19:05:36,995 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:05:36,995 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', "['bau_event']", 'Date Event')
2020-05-27 19:05:36,998 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:05:36,998 INFO sqlalchemy.engine.base.Engine Thread-105 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:05:36,999 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:37,004 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:05:37,004 INFO sqlalchemy.engine.base.Engine Thread-105 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:37,005 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:37,009 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:05:37,009 INFO sqlalchemy.engine.base.Engine Thread-105 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:37,010 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:37,010 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:05:37,011 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-05-27 19:05:37,038 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-05-27 19:05:37,040 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:05:37,040 INFO sqlalchemy.engine.base.Engine Thread-106 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:37,041 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:05:37,042 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', "['locked_event']", 'Date Event')
2020-05-27 19:05:37,042 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:05:37,042 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', "['bau_event']", 'Date Event')
2020-05-27 19:05:37,046 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:05:37,046 INFO sqlalchemy.engine.base.Engine Thread-106 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:05:37,047 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:37,051 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:05:37,051 INFO sqlalchemy.engine.base.Engine Thread-106 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:37,052 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:37,056 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:05:37,056 INFO sqlalchemy.engine.base.Engine Thread-106 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:05:37,057 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:37,058 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:05:37,058 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-05-27 19:05:50,493 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-05-27 19:05:50,495 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:05:50,495 INFO sqlalchemy.engine.base.Engine Thread-108 : ('Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:05:50,496 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:05:50,496 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', "['info_event']", 'Date Event')
2020-05-27 19:05:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', "['info_event']", 'Date Event')
2020-05-27 19:05:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', "['locked_event']", 'Date Event')
2020-05-27 19:05:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:05:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', "['info_event']", 'Date Event')
2020-05-27 19:05:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', "['locked_event']", 'Date Event')
2020-05-27 19:05:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:05:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Informational', "['info_event']", 'Date Event')
2020-05-27 19:05:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', "['bau_event']", 'Date Event')
2020-05-27 19:05:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:05:50,501 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:05:50,501 INFO sqlalchemy.engine.base.Engine Thread-108 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 19:05:50,502 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:50,507 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:05:50,507 INFO sqlalchemy.engine.base.Engine Thread-108 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:05:50,508 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:50,508 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:05:50,508 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:05:50,508 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:05:50,508 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:05:50,508 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:05:50,509 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:05:50,509 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:05:50,513 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:05:50,513 INFO sqlalchemy.engine.base.Engine Thread-108 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:05:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:05:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:05:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:05:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:05:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:05:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:05:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:05:50,516 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-05-27 19:05:50,587 INFO sqlalchemy.engine.base.Engine Thread-109 : BEGIN (implicit)
2020-05-27 19:05:50,588 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:05:50,588 INFO sqlalchemy.engine.base.Engine Thread-109 : (1, 1)
2020-05-27 19:05:50,589 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:05:50,589 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:05:50,590 INFO sqlalchemy.engine.base.Engine Thread-109 : ROLLBACK
2020-05-27 19:13:49,691 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 19:13:49,691 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:13:49,692 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-05-27 19:13:49,693 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-05-27 19:13:49,693 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 19:13:49,693 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:13:49,694 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-05-27 19:13:49,694 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-05-27 19:13:49,695 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-05-27 19:13:49,695 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:13:49,695 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-05-27 19:13:49,695 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-05-27 19:13:49,695 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 19:13:49,696 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:13:49,696 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 19:13:49,697 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 19:13:49,697 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 19:13:49,698 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:13:49,698 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 19:13:49,698 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:13:49,699 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 19:13:49,700 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:13:49,700 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-05-27 19:13:49,703 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:13:49,703 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-05-27 19:13:49,704 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:13:49,704 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:13:49,722 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-05-27 19:14:11,483 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 19:14:11,483 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:14:11,484 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-05-27 19:14:11,484 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-05-27 19:14:11,485 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 19:14:11,485 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:14:11,486 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-05-27 19:14:11,486 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-05-27 19:14:11,486 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-05-27 19:14:11,486 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:14:11,486 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-05-27 19:14:11,487 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-05-27 19:14:11,487 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 19:14:11,487 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:14:11,488 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 19:14:11,488 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 19:14:11,489 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 19:14:11,489 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:14:11,489 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 19:14:11,489 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:14:11,490 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 19:14:11,490 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-05-27 19:14:11,491 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-05-27 19:14:11,493 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:14:11,493 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-05-27 19:14:11,494 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:14:11,494 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:14:11,512 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-05-27 19:14:58,766 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-05-27 19:14:58,767 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:14:58,767 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-05-27 19:14:58,768 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:14:58,769 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:14:58,770 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-05-27 19:16:07,866 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 19:16:07,866 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:16:07,868 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 19:16:07,868 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-27 19:16:07,869 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 19:16:07,869 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:16:07,869 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 19:16:07,870 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-27 19:16:07,870 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-27 19:16:07,870 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:16:07,870 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-27 19:16:07,870 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-27 19:16:07,871 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 19:16:07,871 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:16:07,872 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 19:16:07,872 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 19:16:07,873 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 19:16:07,873 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:16:07,873 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 19:16:07,873 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:16:07,874 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 19:16:07,874 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:16:07,875 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-27 19:16:07,877 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:16:07,877 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:16:07,879 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:16:07,879 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', "['info_event']", 'Date Event')
2020-05-27 19:16:07,879 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', "['info_event']", 'Date Event')
2020-05-27 19:16:07,879 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', "['locked_event']", 'Date Event')
2020-05-27 19:16:07,879 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:16:07,879 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', "['info_event']", 'Date Event')
2020-05-27 19:16:07,879 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', "['locked_event']", 'Date Event')
2020-05-27 19:16:07,880 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:16:07,880 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Informational', "['info_event']", 'Date Event')
2020-05-27 19:16:07,880 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', "['bau_event']", 'Date Event')
2020-05-27 19:16:07,880 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', "['hap_event']", 'Date Event')
2020-05-27 19:16:07,884 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:16:07,884 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 19:16:07,884 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:16:07,889 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:16:07,889 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:16:07,891 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:16:07,891 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:16:07,891 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:16:07,891 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:16:07,891 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:16:07,891 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:16:07,892 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:16:07,892 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:16:07,896 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:16:07,896 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:16:07,897 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:16:07,898 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:16:07,898 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:16:07,898 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:16:07,898 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:16:07,898 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:16:07,898 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:16:07,900 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-27 19:16:07,977 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-05-27 19:16:07,981 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:16:07,981 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-05-27 19:16:07,982 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:16:07,983 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:16:08,001 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-05-27 19:22:38,324 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-05-27 19:22:38,326 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:22:38,326 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-05-27 19:22:38,327 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:38,328 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:38,331 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:38,331 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-05-27 19:22:38,332 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:38,332 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:38,335 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:22:38,335 INFO sqlalchemy.engine.base.Engine Thread-4 : (0,)
2020-05-27 19:22:38,336 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:38,336 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:22:38,337 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:22:38,337 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:22:38,337 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:22:38,337 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:22:38,337 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:22:38,337 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:22:38,337 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:22:38,337 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:22:38,337 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:22:38,337 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:22:38,337 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:22:38,337 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:22:38,338 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:22:38,338 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:22:38,338 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:22:38,338 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:22:38,338 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:22:38,338 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:22:38,338 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:22:38,338 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:22:38,338 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:22:38,338 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:22:38,340 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-05-27 19:22:38,340 INFO sqlalchemy.engine.base.Engine Thread-4 : (0, 1)
2020-05-27 19:22:38,341 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:38,341 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:22:38,342 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:22:38,342 INFO sqlalchemy.engine.base.Engine Thread-4 : (66,)
2020-05-27 19:22:38,343 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:38,343 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:22:38,343 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:22:38,416 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:38,417 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-05-27 19:22:38,417 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:38,417 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:38,421 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-05-27 19:22:41,144 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-05-27 19:22:41,145 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:22:41,145 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-05-27 19:22:41,146 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:41,146 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:41,148 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:41,148 INFO sqlalchemy.engine.base.Engine Thread-14 : ('philip', 1, 1)
2020-05-27 19:22:41,149 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:41,150 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:41,153 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:22:41,154 INFO sqlalchemy.engine.base.Engine Thread-14 : (0,)
2020-05-27 19:22:41,154 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:41,154 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:22:41,154 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:22:41,155 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:22:41,155 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:22:41,155 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:22:41,155 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:22:41,155 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:22:41,155 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:22:41,155 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:22:41,155 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:22:41,155 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:22:41,155 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:22:41,155 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:22:41,155 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:22:41,156 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:22:41,156 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:22:41,156 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:22:41,156 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:22:41,156 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:22:41,156 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:22:41,156 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:22:41,156 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:22:41,156 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:22:41,158 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:22:41,158 INFO sqlalchemy.engine.base.Engine Thread-14 : ('127',)
2020-05-27 19:22:41,158 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:41,159 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:22:41,159 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:22:41,159 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (130, 'No Changes Allowed', "['locked_event']", 127, 0, 0, 1)
2020-05-27 19:22:41,159 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:22:41,163 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:41,163 INFO sqlalchemy.engine.base.Engine Thread-14 : ('philip', 1, 1)
2020-05-27 19:22:41,164 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:41,164 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:41,167 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-05-27 19:22:43,903 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-05-27 19:22:43,904 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:22:43,904 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-05-27 19:22:43,905 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:43,905 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:43,907 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:43,907 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-05-27 19:22:43,909 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:43,909 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:43,910 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:22:43,910 INFO sqlalchemy.engine.base.Engine Thread-24 : ('130', 1)
2020-05-27 19:22:43,911 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:43,911 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (130, 'No Changes Allowed', "['locked_event']", 127, 0, 0, 1)
2020-05-27 19:22:43,913 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:22:43,913 INFO sqlalchemy.engine.base.Engine Thread-24 : (0,)
2020-05-27 19:22:43,914 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:43,914 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:22:43,914 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:22:43,914 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:22:43,914 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:22:43,915 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:22:43,915 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:22:43,915 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:22:43,915 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:22:43,915 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:22:43,915 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:22:43,915 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:22:43,915 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:22:43,915 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:22:43,915 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:22:43,915 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:22:43,916 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:22:43,916 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:22:43,916 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:22:43,916 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:22:43,916 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:22:43,916 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:22:43,916 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:22:43,916 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:22:43,918 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:22:43,918 INFO sqlalchemy.engine.base.Engine Thread-24 : (0,)
2020-05-27 19:22:43,919 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:43,920 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:22:43,920 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:22:43,920 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:22:43,920 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:22:43,920 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:22:43,920 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:22:43,920 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:22:43,920 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:22:43,921 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:22:43,921 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:22:43,921 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:22:43,921 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:22:43,921 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:22:43,921 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:22:43,921 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:22:43,921 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:22:43,921 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:22:43,921 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:22:43,922 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:22:43,922 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:22:43,922 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:22:43,922 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:22:43,922 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:22:43,922 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:22:43,922 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:22:43,922 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:22:43,922 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:22:43,922 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:22:43,923 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:22:43,923 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:22:43,923 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:22:43,923 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:22:43,923 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:22:43,923 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:22:43,923 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:22:43,923 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:22:43,923 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:22:43,923 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:22:43,923 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:22:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:22:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:22:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:22:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:22:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:22:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:22:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:22:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:22:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:22:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:22:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:22:43,924 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:22:43,925 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:22:43,925 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:22:43,925 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:22:43,925 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:22:43,925 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:22:43,925 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:22:43,925 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:22:43,925 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:22:43,925 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:22:43,925 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:22:43,925 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (130, 'No Changes Allowed', "['locked_event']", 127, 0, 0, 1)
2020-05-27 19:22:43,925 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:22:43,925 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:22:43,926 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:22:43,926 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:22:43,926 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:22:43,926 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:22:43,926 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:22:43,926 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:22:43,926 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:22:43,926 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:22:43,926 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:22:43,926 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:22:43,926 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:22:43,926 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:22:43,926 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:22:43,927 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:22:43,927 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:22:43,927 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:22:43,958 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:43,958 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-05-27 19:22:43,959 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:43,959 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:43,963 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-05-27 19:22:50,491 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-05-27 19:22:50,492 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:22:50,492 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-05-27 19:22:50,493 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:50,493 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:50,496 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:50,496 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-05-27 19:22:50,496 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:50,498 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:22:50,498 INFO sqlalchemy.engine.base.Engine Thread-34 : ('130', 1)
2020-05-27 19:22:50,499 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:50,499 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (130, 'No Changes Allowed', "['locked_event']", 127, 0, 0, 1)
2020-05-27 19:22:50,502 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:22:50,503 INFO sqlalchemy.engine.base.Engine Thread-34 : (0,)
2020-05-27 19:22:50,503 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:50,503 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:22:50,504 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:22:50,504 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:22:50,504 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:22:50,504 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:22:50,504 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:22:50,504 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:22:50,504 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:22:50,504 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:22:50,504 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:22:50,504 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:22:50,505 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:22:50,505 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:22:50,505 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:22:50,505 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:22:50,505 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:22:50,505 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:22:50,505 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:22:50,505 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:22:50,505 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:22:50,505 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:22:50,505 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:22:50,506 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:22:50,507 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:22:50,507 INFO sqlalchemy.engine.base.Engine Thread-34 : (0,)
2020-05-27 19:22:50,508 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:50,509 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:22:50,509 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:22:50,509 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:22:50,509 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:22:50,509 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:22:50,509 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:22:50,509 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:22:50,509 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:22:50,509 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:22:50,509 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:22:50,510 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:22:50,510 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:22:50,510 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:22:50,510 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:22:50,510 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:22:50,510 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:22:50,510 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:22:50,510 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:22:50,510 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:22:50,510 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:22:50,510 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:22:50,511 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:22:50,511 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:22:50,511 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:22:50,511 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:22:50,511 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:22:50,511 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:22:50,511 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:22:50,511 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:22:50,511 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:22:50,511 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:22:50,511 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:22:50,512 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:22:50,512 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:22:50,512 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:22:50,512 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:22:50,512 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:22:50,512 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:22:50,512 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:22:50,512 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:22:50,512 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:22:50,512 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:22:50,512 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:22:50,513 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:22:50,513 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:22:50,513 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:22:50,513 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:22:50,513 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:22:50,513 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:22:50,513 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:22:50,513 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:22:50,513 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:22:50,513 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:22:50,513 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:22:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:22:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:22:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:22:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:22:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:22:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:22:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:22:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (130, 'No Changes Allowed', "['locked_event']", 127, 0, 0, 1)
2020-05-27 19:22:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:22:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:22:50,514 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:22:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:22:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:22:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:22:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:22:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:22:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:22:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:22:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:22:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:22:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:22:50,515 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:22:50,516 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:22:50,516 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:22:50,516 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:22:50,516 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:22:50,520 INFO sqlalchemy.engine.base.Engine Thread-34 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:22:50,520 INFO sqlalchemy.engine.base.Engine Thread-34 : ('130', '"locked_event"', 130)
2020-05-27 19:22:50,521 INFO sqlalchemy.engine.base.Engine Thread-34 : COMMIT
2020-05-27 19:22:50,557 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-05-27 19:22:50,558 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:22:50,558 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-05-27 19:22:50,559 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:50,559 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:50,561 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:50,561 INFO sqlalchemy.engine.base.Engine Thread-35 : ('philip', 1, 1)
2020-05-27 19:22:50,562 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:50,562 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:50,564 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:22:50,564 INFO sqlalchemy.engine.base.Engine Thread-35 : (0,)
2020-05-27 19:22:50,565 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:50,565 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:22:50,565 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:22:50,565 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:22:50,565 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:22:50,565 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:22:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:22:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:22:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:22:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:22:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:22:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:22:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:22:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:22:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:22:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:22:50,566 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:22:50,567 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:22:50,567 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:22:50,567 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:22:50,567 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:22:50,567 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:22:50,567 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:22:50,567 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:22:50,569 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:22:50,569 INFO sqlalchemy.engine.base.Engine Thread-35 : (127, 1)
2020-05-27 19:22:50,570 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:50,570 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:22:50,571 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:22:50,571 INFO sqlalchemy.engine.base.Engine Thread-35 : (127,)
2020-05-27 19:22:50,572 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:50,572 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:22:50,572 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:22:50,572 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:22:50,572 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:22:50,577 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:50,577 INFO sqlalchemy.engine.base.Engine Thread-35 : ('philip', 1, 1)
2020-05-27 19:22:50,578 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:50,578 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:50,582 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-05-27 19:22:53,695 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-05-27 19:22:53,696 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:22:53,696 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-05-27 19:22:53,697 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:53,698 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:53,701 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:53,701 INFO sqlalchemy.engine.base.Engine Thread-45 : ('philip', 1, 1)
2020-05-27 19:22:53,702 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:53,702 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:53,703 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:22:53,703 INFO sqlalchemy.engine.base.Engine Thread-45 : ('128', 1)
2020-05-27 19:22:53,704 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:53,704 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:22:53,706 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:22:53,706 INFO sqlalchemy.engine.base.Engine Thread-45 : (0,)
2020-05-27 19:22:53,707 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:53,707 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:22:53,707 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:22:53,707 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:22:53,707 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:22:53,708 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:22:53,708 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:22:53,708 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:22:53,708 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:22:53,708 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:22:53,708 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:22:53,708 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:22:53,708 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:22:53,708 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:22:53,709 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:22:53,709 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:22:53,709 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:22:53,709 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:22:53,709 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:22:53,709 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:22:53,709 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:22:53,709 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:22:53,709 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:22:53,709 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:22:53,712 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:22:53,712 INFO sqlalchemy.engine.base.Engine Thread-45 : (0,)
2020-05-27 19:22:53,713 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:53,713 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:22:53,713 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:22:53,713 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:22:53,714 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:22:53,714 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:22:53,714 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:22:53,714 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:22:53,714 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:22:53,714 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:22:53,714 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:22:53,714 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:22:53,714 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:22:53,714 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:22:53,714 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:22:53,714 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:22:53,715 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:22:53,715 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:22:53,715 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:22:53,715 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:22:53,715 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:22:53,715 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:22:53,715 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:22:53,715 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:22:53,715 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:22:53,715 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:22:53,715 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:22:53,715 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:22:53,716 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:22:53,716 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:22:53,716 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:22:53,716 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:22:53,716 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:22:53,716 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:22:53,716 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:22:53,716 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:22:53,716 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:22:53,716 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:22:53,716 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:22:53,716 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:22:53,716 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:22:53,717 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:22:53,717 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:22:53,717 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:22:53,717 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:22:53,717 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:22:53,717 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:22:53,717 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:22:53,717 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:22:53,717 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:22:53,717 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:22:53,717 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:22:53,717 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:22:53,718 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:22:53,718 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:22:53,718 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:22:53,718 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:22:53,718 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:22:53,718 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:22:53,718 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:22:53,718 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:22:53,718 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:22:53,718 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:22:53,718 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:22:53,718 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:22:53,719 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:22:53,719 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:22:53,719 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:22:53,719 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:22:53,719 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:22:53,719 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:22:53,719 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:22:53,719 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:22:53,719 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:22:53,719 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:22:53,719 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:22:53,720 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:22:53,720 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:22:53,720 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:22:53,720 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:22:53,720 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:22:53,726 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:53,726 INFO sqlalchemy.engine.base.Engine Thread-45 : ('philip', 1, 1)
2020-05-27 19:22:53,727 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:53,727 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:53,731 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-05-27 19:22:58,831 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-05-27 19:22:58,832 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:22:58,832 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-05-27 19:22:58,833 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:58,833 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:58,835 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:58,836 INFO sqlalchemy.engine.base.Engine Thread-55 : ('philip', 1, 1)
2020-05-27 19:22:58,836 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:58,837 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:58,838 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:22:58,838 INFO sqlalchemy.engine.base.Engine Thread-55 : ('128', 1)
2020-05-27 19:22:58,839 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:58,839 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:22:58,842 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:22:58,842 INFO sqlalchemy.engine.base.Engine Thread-55 : (0,)
2020-05-27 19:22:58,843 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:58,843 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:22:58,843 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:22:58,844 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:22:58,844 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:22:58,844 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:22:58,844 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:22:58,844 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:22:58,844 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:22:58,844 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:22:58,844 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:22:58,844 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:22:58,845 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:22:58,845 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:22:58,845 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:22:58,845 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:22:58,845 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:22:58,845 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:22:58,845 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:22:58,845 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:22:58,845 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:22:58,845 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:22:58,845 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:22:58,846 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:22:58,847 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:22:58,847 INFO sqlalchemy.engine.base.Engine Thread-55 : (0,)
2020-05-27 19:22:58,848 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:58,848 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:22:58,848 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:22:58,849 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:22:58,849 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:22:58,849 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:22:58,849 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:22:58,849 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:22:58,849 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:22:58,849 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:22:58,849 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:22:58,849 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:22:58,849 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:22:58,849 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:22:58,849 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:22:58,850 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:22:58,850 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:22:58,850 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:22:58,850 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:22:58,850 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:22:58,850 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:22:58,850 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:22:58,850 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:22:58,850 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:22:58,850 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:22:58,850 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:22:58,851 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:22:58,851 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:22:58,851 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:22:58,851 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:22:58,851 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:22:58,851 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:22:58,851 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:22:58,851 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:22:58,851 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:22:58,851 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:22:58,851 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:22:58,852 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:22:58,852 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:22:58,852 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:22:58,852 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:22:58,852 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:22:58,852 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:22:58,852 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:22:58,852 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:22:58,852 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:22:58,852 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:22:58,853 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:22:58,853 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (128, 'Informational', "['info_event']", 127, 0, 0, 1)
2020-05-27 19:22:58,853 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:22:58,853 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:22:58,853 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:22:58,853 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:22:58,853 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:22:58,853 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:22:58,853 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:22:58,853 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:22:58,854 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:22:58,854 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:22:58,854 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:22:58,854 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:22:58,854 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:22:58,854 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:22:58,854 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:22:58,854 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:22:58,854 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:22:58,854 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:22:58,855 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:22:58,855 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:22:58,855 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:22:58,855 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:22:58,855 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:22:58,855 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:22:58,855 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:22:58,855 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:22:58,855 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:22:58,855 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:22:58,856 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:22:58,856 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:22:58,856 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:22:58,856 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:22:58,859 INFO sqlalchemy.engine.base.Engine Thread-55 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:22:58,859 INFO sqlalchemy.engine.base.Engine Thread-55 : ('128', '"info_event"', 128)
2020-05-27 19:22:58,859 INFO sqlalchemy.engine.base.Engine Thread-55 : COMMIT
2020-05-27 19:22:58,907 INFO sqlalchemy.engine.base.Engine Thread-56 : BEGIN (implicit)
2020-05-27 19:22:58,908 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:22:58,908 INFO sqlalchemy.engine.base.Engine Thread-56 : (1, 1)
2020-05-27 19:22:58,909 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:58,909 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:58,911 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:58,912 INFO sqlalchemy.engine.base.Engine Thread-56 : ('philip', 1, 1)
2020-05-27 19:22:58,912 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:58,913 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:58,914 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:22:58,914 INFO sqlalchemy.engine.base.Engine Thread-56 : (0,)
2020-05-27 19:22:58,915 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:58,915 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:22:58,916 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:22:58,916 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:22:58,916 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:22:58,916 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:22:58,916 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:22:58,916 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:22:58,916 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:22:58,916 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:22:58,916 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:22:58,916 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:22:58,916 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:22:58,917 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:22:58,917 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:22:58,917 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:22:58,917 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:22:58,917 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:22:58,917 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:22:58,917 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:22:58,917 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:22:58,917 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:22:58,917 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:22:58,918 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:22:58,920 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:22:58,920 INFO sqlalchemy.engine.base.Engine Thread-56 : (127, 1)
2020-05-27 19:22:58,920 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:58,920 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:22:58,922 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:22:58,922 INFO sqlalchemy.engine.base.Engine Thread-56 : (127,)
2020-05-27 19:22:58,922 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:22:58,922 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:22:58,923 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:22:58,923 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:22:58,923 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:22:58,927 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:22:58,927 INFO sqlalchemy.engine.base.Engine Thread-56 : ('philip', 1, 1)
2020-05-27 19:22:58,928 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:22:58,928 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:22:58,931 INFO sqlalchemy.engine.base.Engine Thread-56 : ROLLBACK
2020-05-27 19:23:00,568 INFO sqlalchemy.engine.base.Engine Thread-66 : BEGIN (implicit)
2020-05-27 19:23:00,569 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:23:00,569 INFO sqlalchemy.engine.base.Engine Thread-66 : (1, 1)
2020-05-27 19:23:00,569 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:00,570 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:00,572 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:23:00,572 INFO sqlalchemy.engine.base.Engine Thread-66 : ('philip', 1, 1)
2020-05-27 19:23:00,573 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:00,573 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:00,574 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:23:00,574 INFO sqlalchemy.engine.base.Engine Thread-66 : ('129', 1)
2020-05-27 19:23:00,574 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:00,575 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:23:00,577 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:23:00,577 INFO sqlalchemy.engine.base.Engine Thread-66 : (0,)
2020-05-27 19:23:00,577 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:00,577 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:23:00,578 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:23:00,578 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:23:00,578 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:23:00,578 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:23:00,578 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:23:00,578 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:23:00,578 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:23:00,578 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:23:00,578 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:23:00,578 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:23:00,578 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:23:00,579 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:23:00,579 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:23:00,579 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:23:00,579 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:23:00,579 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:23:00,579 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:23:00,579 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:23:00,579 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:23:00,579 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:23:00,579 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:23:00,579 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:23:00,581 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:23:00,581 INFO sqlalchemy.engine.base.Engine Thread-66 : (0,)
2020-05-27 19:23:00,582 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:00,582 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:23:00,582 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:23:00,582 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:23:00,583 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:23:00,583 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:23:00,583 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:23:00,583 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:23:00,583 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:23:00,583 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:23:00,583 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:23:00,583 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:23:00,583 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:23:00,583 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:23:00,583 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:23:00,584 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:23:00,584 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:23:00,584 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:23:00,584 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:23:00,584 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:23:00,584 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:23:00,584 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:23:00,584 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:23:00,584 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:23:00,584 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:23:00,584 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:23:00,585 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:23:00,585 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:23:00,585 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:23:00,585 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:23:00,585 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:23:00,585 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:23:00,585 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:23:00,585 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:23:00,585 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:23:00,585 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:23:00,585 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:23:00,586 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:23:00,586 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:23:00,586 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:23:00,586 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:23:00,586 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:23:00,586 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:23:00,586 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:23:00,586 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:23:00,586 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:23:00,586 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:23:00,586 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:23:00,587 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:23:00,587 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:23:00,587 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:23:00,587 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:23:00,587 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:23:00,587 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:23:00,587 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:23:00,587 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:23:00,587 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:23:00,587 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:23:00,587 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:23:00,588 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:23:00,588 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:23:00,588 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:23:00,588 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:23:00,588 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:23:00,588 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:23:00,588 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:23:00,588 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:23:00,588 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:23:00,588 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:23:00,588 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:23:00,589 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:23:00,589 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:23:00,589 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:23:00,589 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:23:00,589 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:23:00,589 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:23:00,589 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:23:00,589 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:23:00,589 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:23:00,589 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:23:00,589 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:23:00,597 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:23:00,597 INFO sqlalchemy.engine.base.Engine Thread-66 : ('philip', 1, 1)
2020-05-27 19:23:00,597 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:00,598 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:00,601 INFO sqlalchemy.engine.base.Engine Thread-66 : ROLLBACK
2020-05-27 19:23:06,320 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-05-27 19:23:06,321 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:23:06,321 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-05-27 19:23:06,322 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:06,322 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:06,324 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:23:06,324 INFO sqlalchemy.engine.base.Engine Thread-76 : ('philip', 1, 1)
2020-05-27 19:23:06,325 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:06,325 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:06,327 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:23:06,327 INFO sqlalchemy.engine.base.Engine Thread-76 : ('129', 1)
2020-05-27 19:23:06,327 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:06,327 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:23:06,330 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:23:06,330 INFO sqlalchemy.engine.base.Engine Thread-76 : (0,)
2020-05-27 19:23:06,331 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:06,331 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:23:06,331 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:23:06,331 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:23:06,331 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:23:06,331 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:23:06,331 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:23:06,332 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:23:06,332 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:23:06,332 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:23:06,332 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:23:06,332 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:23:06,332 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:23:06,332 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:23:06,332 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:23:06,332 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:23:06,332 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:23:06,332 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:23:06,332 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:23:06,333 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:23:06,333 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:23:06,333 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:23:06,333 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:23:06,333 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:23:06,335 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:23:06,335 INFO sqlalchemy.engine.base.Engine Thread-76 : (0,)
2020-05-27 19:23:06,336 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:06,336 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:23:06,337 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:23:06,337 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:23:06,337 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:23:06,337 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:23:06,337 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:23:06,337 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:23:06,337 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:23:06,337 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:23:06,337 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:23:06,337 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:23:06,338 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:23:06,338 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:23:06,338 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:23:06,338 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:23:06,338 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:23:06,338 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:23:06,338 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:23:06,338 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:23:06,338 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:23:06,338 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (129, 'Heightened Awareness Period (HAP)', "['hap_event']", 127, 0, 0, 1)
2020-05-27 19:23:06,339 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:23:06,339 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:23:06,339 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:23:06,339 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:23:06,339 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:23:06,339 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:23:06,339 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:23:06,339 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:23:06,339 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:23:06,340 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:23:06,340 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:23:06,340 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:23:06,340 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:23:06,340 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:23:06,340 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:23:06,340 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:23:06,340 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:23:06,340 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:23:06,340 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:23:06,341 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:23:06,341 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:23:06,341 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:23:06,341 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:23:06,341 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:23:06,341 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:23:06,341 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:23:06,341 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:23:06,341 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:23:06,341 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:23:06,342 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:23:06,342 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:23:06,342 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:23:06,342 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:23:06,342 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:23:06,342 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:23:06,342 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:23:06,342 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:23:06,342 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:23:06,342 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:23:06,343 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:23:06,343 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:23:06,343 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:23:06,343 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:23:06,343 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:23:06,343 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:23:06,343 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:23:06,343 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:23:06,343 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:23:06,343 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:23:06,343 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:23:06,344 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:23:06,344 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:23:06,344 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:23:06,344 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:23:06,344 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:23:06,344 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:23:06,344 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:23:06,344 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:23:06,344 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:23:06,348 INFO sqlalchemy.engine.base.Engine Thread-76 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:23:06,348 INFO sqlalchemy.engine.base.Engine Thread-76 : ('129', '"hap_event"', 129)
2020-05-27 19:23:06,348 INFO sqlalchemy.engine.base.Engine Thread-76 : COMMIT
2020-05-27 19:23:06,383 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-05-27 19:23:06,384 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:23:06,384 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-05-27 19:23:06,385 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:06,385 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:06,387 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:23:06,387 INFO sqlalchemy.engine.base.Engine Thread-77 : ('philip', 1, 1)
2020-05-27 19:23:06,388 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:06,388 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:06,390 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:23:06,390 INFO sqlalchemy.engine.base.Engine Thread-77 : (0,)
2020-05-27 19:23:06,391 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:06,391 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:23:06,391 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:23:06,391 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:23:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:23:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:23:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:23:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:23:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:23:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:23:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:23:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:23:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:23:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:23:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:23:06,393 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:23:06,393 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:23:06,393 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:23:06,393 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:23:06,393 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:23:06,393 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:23:06,393 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:23:06,393 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:23:06,393 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:23:06,395 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:23:06,395 INFO sqlalchemy.engine.base.Engine Thread-77 : (127, 1)
2020-05-27 19:23:06,396 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:06,396 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:23:06,397 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:23:06,398 INFO sqlalchemy.engine.base.Engine Thread-77 : (127,)
2020-05-27 19:23:06,398 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:06,398 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:23:06,398 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:23:06,398 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:23:06,399 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:23:06,403 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:23:06,403 INFO sqlalchemy.engine.base.Engine Thread-77 : ('philip', 1, 1)
2020-05-27 19:23:06,403 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:06,404 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:06,408 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-05-27 19:23:08,483 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-05-27 19:23:08,484 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:23:08,484 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-05-27 19:23:08,485 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:08,486 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:08,488 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:23:08,488 INFO sqlalchemy.engine.base.Engine Thread-87 : ('philip', 1, 1)
2020-05-27 19:23:08,489 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:08,489 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:08,490 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:23:08,490 INFO sqlalchemy.engine.base.Engine Thread-87 : ('131', 1)
2020-05-27 19:23:08,490 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:08,491 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:23:08,493 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:23:08,493 INFO sqlalchemy.engine.base.Engine Thread-87 : (0,)
2020-05-27 19:23:08,493 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:08,494 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:23:08,494 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:23:08,494 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:23:08,494 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:23:08,494 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:23:08,494 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:23:08,494 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:23:08,494 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:23:08,494 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:23:08,494 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:23:08,495 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:23:08,495 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:23:08,495 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:23:08,495 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:23:08,495 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:23:08,495 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:23:08,495 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:23:08,495 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:23:08,495 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:23:08,495 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:23:08,495 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:23:08,495 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:23:08,496 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:23:08,497 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:23:08,497 INFO sqlalchemy.engine.base.Engine Thread-87 : (0,)
2020-05-27 19:23:08,498 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:08,499 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:23:08,499 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:23:08,499 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:23:08,499 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:23:08,499 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:23:08,499 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:23:08,499 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:23:08,499 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:23:08,499 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:23:08,500 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:23:08,500 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:23:08,500 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:23:08,500 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:23:08,500 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:23:08,500 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:23:08,500 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:23:08,500 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:23:08,500 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:23:08,500 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:23:08,500 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:23:08,501 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:23:08,501 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:23:08,501 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:23:08,501 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:23:08,501 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:23:08,501 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:23:08,501 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:23:08,501 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:23:08,501 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:23:08,501 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:23:08,501 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:23:08,501 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:23:08,502 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:23:08,502 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:23:08,502 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:23:08,502 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:23:08,502 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:23:08,502 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:23:08,502 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:23:08,502 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:23:08,502 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:23:08,502 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:23:08,502 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:23:08,502 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:23:08,502 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:23:08,503 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:23:08,503 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:23:08,503 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:23:08,503 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:23:08,503 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:23:08,503 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:23:08,503 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:23:08,503 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:23:08,503 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:23:08,503 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:23:08,503 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:23:08,503 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:23:08,503 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:23:08,504 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:23:08,504 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:23:08,504 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:23:08,504 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:23:08,504 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:23:08,504 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:23:08,504 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:23:08,504 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:23:08,504 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:23:08,504 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:23:08,504 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:23:08,504 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:23:08,505 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:23:08,505 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:23:08,505 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:23:08,505 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:23:08,505 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:23:08,505 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:23:08,505 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:23:08,505 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:23:08,505 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:23:08,505 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:23:08,511 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:23:08,512 INFO sqlalchemy.engine.base.Engine Thread-87 : ('philip', 1, 1)
2020-05-27 19:23:08,512 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:08,512 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:08,516 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-05-27 19:23:14,378 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-05-27 19:23:14,379 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:23:14,379 INFO sqlalchemy.engine.base.Engine Thread-97 : (1, 1)
2020-05-27 19:23:14,380 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:14,380 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:14,382 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:23:14,382 INFO sqlalchemy.engine.base.Engine Thread-97 : ('philip', 1, 1)
2020-05-27 19:23:14,383 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:14,383 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:14,384 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:23:14,384 INFO sqlalchemy.engine.base.Engine Thread-97 : ('131', 1)
2020-05-27 19:23:14,385 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:14,385 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:23:14,388 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:23:14,388 INFO sqlalchemy.engine.base.Engine Thread-97 : (0,)
2020-05-27 19:23:14,388 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:14,388 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:23:14,388 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:23:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:23:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:23:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:23:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:23:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:23:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:23:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:23:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:23:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:23:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:23:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:23:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:23:14,390 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:23:14,390 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:23:14,390 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:23:14,390 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:23:14,390 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:23:14,390 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:23:14,390 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:23:14,390 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:23:14,390 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:23:14,392 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:23:14,392 INFO sqlalchemy.engine.base.Engine Thread-97 : (0,)
2020-05-27 19:23:14,393 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:14,394 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:23:14,394 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:23:14,394 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:23:14,394 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:23:14,394 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (131, 'BaU Firewall Change', "['bau_event']", 127, 0, 0, 1)
2020-05-27 19:23:14,394 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:23:14,394 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:23:14,394 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:23:14,394 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:23:14,394 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:23:14,394 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:23:14,395 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:23:14,395 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:23:14,395 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:23:14,395 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:23:14,395 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:23:14,395 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:23:14,395 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:23:14,395 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:23:14,395 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:23:14,395 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:23:14,395 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:23:14,395 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:23:14,396 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:23:14,396 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:23:14,396 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:23:14,396 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:23:14,396 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:23:14,396 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:23:14,396 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:23:14,396 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:23:14,396 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:23:14,396 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:23:14,396 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:23:14,396 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:23:14,396 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:23:14,397 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:23:14,397 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:23:14,397 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:23:14,397 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:23:14,397 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:23:14,397 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:23:14,397 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:23:14,397 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:23:14,397 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:23:14,397 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:23:14,397 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:23:14,397 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:23:14,398 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:23:14,398 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:23:14,398 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:23:14,398 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:23:14,398 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:23:14,398 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:23:14,398 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:23:14,398 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:23:14,398 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:23:14,398 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:23:14,398 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:23:14,398 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:23:14,399 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:23:14,399 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:23:14,399 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:23:14,399 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:23:14,399 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:23:14,399 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:23:14,399 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:23:14,399 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:23:14,399 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:23:14,399 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:23:14,399 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:23:14,399 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:23:14,399 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:23:14,400 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:23:14,400 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:23:14,400 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:23:14,400 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:23:14,400 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:23:14,400 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:23:14,400 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:23:14,403 INFO sqlalchemy.engine.base.Engine Thread-97 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:23:14,403 INFO sqlalchemy.engine.base.Engine Thread-97 : ('131', '"bau_event"', 131)
2020-05-27 19:23:14,403 INFO sqlalchemy.engine.base.Engine Thread-97 : COMMIT
2020-05-27 19:23:14,455 INFO sqlalchemy.engine.base.Engine Thread-98 : BEGIN (implicit)
2020-05-27 19:23:14,456 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:23:14,456 INFO sqlalchemy.engine.base.Engine Thread-98 : (1, 1)
2020-05-27 19:23:14,457 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:14,457 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:14,459 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:23:14,459 INFO sqlalchemy.engine.base.Engine Thread-98 : ('philip', 1, 1)
2020-05-27 19:23:14,460 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:14,460 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:14,462 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:23:14,462 INFO sqlalchemy.engine.base.Engine Thread-98 : (0,)
2020-05-27 19:23:14,463 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:14,463 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:23:14,463 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:23:14,463 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:23:14,463 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:23:14,463 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:23:14,463 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:23:14,463 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:23:14,463 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:23:14,464 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:23:14,464 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:23:14,464 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:23:14,464 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:23:14,464 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:23:14,464 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:23:14,464 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:23:14,464 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:23:14,464 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:23:14,464 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:23:14,464 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:23:14,464 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:23:14,464 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:23:14,465 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:23:14,465 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:23:14,466 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:23:14,467 INFO sqlalchemy.engine.base.Engine Thread-98 : (127, 1)
2020-05-27 19:23:14,467 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:14,467 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:23:14,468 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:23:14,468 INFO sqlalchemy.engine.base.Engine Thread-98 : (127,)
2020-05-27 19:23:14,469 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:23:14,469 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:23:14,469 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:23:14,469 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:23:14,469 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:23:14,473 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:23:14,473 INFO sqlalchemy.engine.base.Engine Thread-98 : ('philip', 1, 1)
2020-05-27 19:23:14,474 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:14,474 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:14,477 INFO sqlalchemy.engine.base.Engine Thread-98 : ROLLBACK
2020-05-27 19:23:43,620 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-05-27 19:23:43,622 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:23:43,622 INFO sqlalchemy.engine.base.Engine Thread-108 : ('Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:23:43,624 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:23:43,624 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', '"info_event"', 'Date Event')
2020-05-27 19:23:43,624 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', '"info_event"', 'Date Event')
2020-05-27 19:23:43,624 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', '"locked_event"', 'Date Event')
2020-05-27 19:23:43,624 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', '"hap_event"', 'Date Event')
2020-05-27 19:23:43,624 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', '"info_event"', 'Date Event')
2020-05-27 19:23:43,624 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', '"locked_event"', 'Date Event')
2020-05-27 19:23:43,624 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', '"hap_event"', 'Date Event')
2020-05-27 19:23:43,624 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Informational', '"info_event"', 'Date Event')
2020-05-27 19:23:43,625 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', '"bau_event"', 'Date Event')
2020-05-27 19:23:43,625 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', '"hap_event"', 'Date Event')
2020-05-27 19:23:43,628 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:23:43,629 INFO sqlalchemy.engine.base.Engine Thread-108 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 19:23:43,630 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:23:43,634 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:23:43,634 INFO sqlalchemy.engine.base.Engine Thread-108 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:23:43,635 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:23:43,635 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:23:43,635 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:23:43,636 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:23:43,636 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:23:43,636 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:23:43,636 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:23:43,636 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:23:43,641 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:23:43,641 INFO sqlalchemy.engine.base.Engine Thread-108 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:23:43,642 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:23:43,642 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:23:43,642 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:23:43,642 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:23:43,642 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:23:43,642 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:23:43,642 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:23:43,644 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-05-27 19:23:43,698 INFO sqlalchemy.engine.base.Engine Thread-109 : BEGIN (implicit)
2020-05-27 19:23:43,699 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:23:43,699 INFO sqlalchemy.engine.base.Engine Thread-109 : (1, 1)
2020-05-27 19:23:43,700 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:23:43,700 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:23:43,701 INFO sqlalchemy.engine.base.Engine Thread-109 : ROLLBACK
2020-05-27 19:26:10,606 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-05-27 19:26:10,607 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:26:10,607 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-05-27 19:26:10,608 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:26:10,609 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:26:10,611 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:26:10,611 INFO sqlalchemy.engine.base.Engine Thread-110 : ('philip', 1, 1)
2020-05-27 19:26:10,612 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:26:10,612 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:26:10,614 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:26:10,614 INFO sqlalchemy.engine.base.Engine Thread-110 : ('130', 1)
2020-05-27 19:26:10,614 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:26:10,615 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:26:10,617 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:26:10,617 INFO sqlalchemy.engine.base.Engine Thread-110 : (0,)
2020-05-27 19:26:10,618 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:26:10,618 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:26:10,618 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:26:10,619 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:26:10,619 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:26:10,619 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:26:10,619 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:26:10,619 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:26:10,619 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:26:10,619 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:26:10,619 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:26:10,619 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:26:10,619 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:26:10,620 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:26:10,620 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:26:10,620 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:26:10,620 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:26:10,620 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:26:10,620 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:26:10,620 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:26:10,620 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:26:10,620 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:26:10,620 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:26:10,621 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:26:10,623 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:26:10,623 INFO sqlalchemy.engine.base.Engine Thread-110 : (0,)
2020-05-27 19:26:10,624 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:26:10,624 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:26:10,625 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:26:10,625 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:26:10,625 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:26:10,625 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:26:10,625 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:26:10,625 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:26:10,625 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:26:10,625 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:26:10,625 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:26:10,625 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:26:10,625 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:26:10,626 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:26:10,626 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:26:10,626 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:26:10,626 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:26:10,626 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:26:10,626 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:26:10,626 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:26:10,626 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:26:10,626 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:26:10,626 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:26:10,626 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:26:10,626 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:26:10,627 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:26:10,627 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:26:10,627 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:26:10,627 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:26:10,627 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:26:10,627 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:26:10,627 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:26:10,627 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:26:10,627 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:26:10,627 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:26:10,627 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:26:10,627 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:26:10,627 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:26:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:26:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:26:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:26:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:26:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:26:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:26:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:26:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:26:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:26:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:26:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:26:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:26:10,628 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:26:10,629 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:26:10,629 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:26:10,629 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:26:10,629 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:26:10,629 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:26:10,629 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:26:10,629 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:26:10,629 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:26:10,629 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:26:10,629 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:26:10,629 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:26:10,629 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:26:10,630 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:26:10,630 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:26:10,630 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:26:10,630 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:26:10,630 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:26:10,630 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:26:10,630 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:26:10,630 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:26:10,630 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:26:10,630 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:26:10,630 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:26:10,631 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:26:10,631 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:26:10,631 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:26:10,631 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:26:10,631 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:26:10,631 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:26:10,631 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:26:10,638 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:26:10,638 INFO sqlalchemy.engine.base.Engine Thread-110 : ('philip', 1, 1)
2020-05-27 19:26:10,639 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:26:10,639 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:26:10,643 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-05-27 19:26:17,589 INFO sqlalchemy.engine.base.Engine Thread-120 : BEGIN (implicit)
2020-05-27 19:26:17,590 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:26:17,591 INFO sqlalchemy.engine.base.Engine Thread-120 : (1, 1)
2020-05-27 19:26:17,591 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:26:17,591 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:26:17,594 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:26:17,594 INFO sqlalchemy.engine.base.Engine Thread-120 : ('philip', 1, 1)
2020-05-27 19:26:17,595 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:26:17,596 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:26:17,597 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:26:17,597 INFO sqlalchemy.engine.base.Engine Thread-120 : ('130', 1)
2020-05-27 19:26:17,598 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:26:17,598 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:26:17,601 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:26:17,601 INFO sqlalchemy.engine.base.Engine Thread-120 : (0,)
2020-05-27 19:26:17,602 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:26:17,602 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:26:17,602 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:26:17,602 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:26:17,603 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:26:17,603 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:26:17,603 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:26:17,603 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:26:17,603 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:26:17,603 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:26:17,603 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:26:17,603 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:26:17,603 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:26:17,603 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:26:17,604 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:26:17,604 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:26:17,604 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:26:17,604 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:26:17,604 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:26:17,604 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:26:17,604 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:26:17,604 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:26:17,604 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:26:17,604 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:26:17,607 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:26:17,607 INFO sqlalchemy.engine.base.Engine Thread-120 : (0,)
2020-05-27 19:26:17,608 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:26:17,608 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:26:17,608 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:26:17,608 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:26:17,608 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:26:17,608 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:26:17,608 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:26:17,608 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:26:17,608 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:26:17,608 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:26:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:26:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:26:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:26:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:26:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:26:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:26:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:26:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:26:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:26:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:26:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:26:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:26:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:26:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:26:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:26:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:26:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:26:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:26:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:26:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:26:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:26:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:26:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:26:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:26:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:26:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:26:17,611 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:26:17,611 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:26:17,611 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:26:17,611 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:26:17,611 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:26:17,611 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:26:17,611 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:26:17,611 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:26:17,611 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:26:17,611 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:26:17,611 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:26:17,611 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:26:17,612 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:26:17,612 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:26:17,612 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:26:17,612 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:26:17,612 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:26:17,612 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:26:17,612 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:26:17,612 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:26:17,612 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:26:17,612 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:26:17,612 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:26:17,612 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:26:17,613 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:26:17,613 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:26:17,613 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (130, 'No Changes Allowed', '"locked_event"', 127, 0, 0, 1)
2020-05-27 19:26:17,613 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:26:17,613 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:26:17,613 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:26:17,613 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:26:17,613 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:26:17,613 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:26:17,613 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:26:17,613 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:26:17,613 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:26:17,613 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:26:17,614 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:26:17,614 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:26:17,614 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:26:17,614 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:26:17,614 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:26:17,614 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:26:17,614 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:26:17,614 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:26:17,617 INFO sqlalchemy.engine.base.Engine Thread-120 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:26:17,617 INFO sqlalchemy.engine.base.Engine Thread-120 : ('130', 'locked_event', 130)
2020-05-27 19:26:17,618 INFO sqlalchemy.engine.base.Engine Thread-120 : COMMIT
2020-05-27 19:26:17,657 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-05-27 19:26:17,658 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:26:17,658 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-05-27 19:26:17,659 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:26:17,659 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:26:17,661 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:26:17,661 INFO sqlalchemy.engine.base.Engine Thread-121 : ('philip', 1, 1)
2020-05-27 19:26:17,662 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:26:17,662 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:26:17,664 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:26:17,664 INFO sqlalchemy.engine.base.Engine Thread-121 : (0,)
2020-05-27 19:26:17,665 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:26:17,665 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:26:17,665 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:26:17,665 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:26:17,666 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:26:17,666 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:26:17,666 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:26:17,666 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:26:17,666 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:26:17,666 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:26:17,666 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:26:17,666 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:26:17,666 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:26:17,667 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:26:17,667 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:26:17,667 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:26:17,667 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:26:17,667 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:26:17,667 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:26:17,667 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:26:17,667 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:26:17,667 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:26:17,667 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:26:17,668 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:26:17,670 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:26:17,670 INFO sqlalchemy.engine.base.Engine Thread-121 : (127, 1)
2020-05-27 19:26:17,670 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:26:17,671 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:26:17,672 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:26:17,672 INFO sqlalchemy.engine.base.Engine Thread-121 : (127,)
2020-05-27 19:26:17,673 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:26:17,673 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:26:17,673 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:26:17,673 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:26:17,673 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:26:17,678 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:26:17,678 INFO sqlalchemy.engine.base.Engine Thread-121 : ('philip', 1, 1)
2020-05-27 19:26:17,679 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:26:17,679 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:26:17,683 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-05-27 19:26:21,319 INFO sqlalchemy.engine.base.Engine Thread-131 : BEGIN (implicit)
2020-05-27 19:26:21,321 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:26:21,321 INFO sqlalchemy.engine.base.Engine Thread-131 : ('Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:26:21,322 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:26:21,322 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', '"info_event"', 'Date Event')
2020-05-27 19:26:21,322 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', '"info_event"', 'Date Event')
2020-05-27 19:26:21,322 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:26:21,322 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', '"hap_event"', 'Date Event')
2020-05-27 19:26:21,322 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', '"info_event"', 'Date Event')
2020-05-27 19:26:21,323 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:26:21,323 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', '"hap_event"', 'Date Event')
2020-05-27 19:26:21,323 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Informational', '"info_event"', 'Date Event')
2020-05-27 19:26:21,323 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', '"bau_event"', 'Date Event')
2020-05-27 19:26:21,323 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', '"hap_event"', 'Date Event')
2020-05-27 19:26:21,327 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:26:21,327 INFO sqlalchemy.engine.base.Engine Thread-131 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 19:26:21,328 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:26:21,331 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:26:21,331 INFO sqlalchemy.engine.base.Engine Thread-131 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:26:21,332 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:26:21,333 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:26:21,333 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:26:21,333 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:26:21,333 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:26:21,333 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:26:21,333 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:26:21,333 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:26:21,337 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:26:21,338 INFO sqlalchemy.engine.base.Engine Thread-131 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:26:21,338 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:26:21,339 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:26:21,339 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:26:21,339 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:26:21,339 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:26:21,339 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:26:21,339 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:26:21,340 INFO sqlalchemy.engine.base.Engine Thread-131 : ROLLBACK
2020-05-27 19:26:21,406 INFO sqlalchemy.engine.base.Engine Thread-132 : BEGIN (implicit)
2020-05-27 19:26:21,407 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:26:21,407 INFO sqlalchemy.engine.base.Engine Thread-132 : (1, 1)
2020-05-27 19:26:21,408 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:26:21,408 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:26:21,410 INFO sqlalchemy.engine.base.Engine Thread-132 : ROLLBACK
2020-05-27 19:26:26,773 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-05-27 19:26:26,779 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:26:26,779 INFO sqlalchemy.engine.base.Engine Thread-133 : ()
2020-05-27 19:26:26,780 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:26:26,781 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:26:26,781 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:26:26,782 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:26:26,782 INFO sqlalchemy.engine.base.Engine Thread-133 : (100,)
2020-05-27 19:26:26,783 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:26:26,783 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:26:26,783 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:26:26,783 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:26:26,783 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:26:26,783 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:26:26,785 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:26:26,786 INFO sqlalchemy.engine.base.Engine Thread-133 : (1, 1)
2020-05-27 19:26:26,786 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:26:26,786 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:26:26,802 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:26:26,802 INFO sqlalchemy.engine.base.Engine Thread-133 : ('philip', 1, 1)
2020-05-27 19:26:26,803 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:26:26,803 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:26:26,805 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-05-27 19:26:27,076 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-05-27 19:26:27,077 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:26:27,078 INFO sqlalchemy.engine.base.Engine Thread-143 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:26:27,078 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:26:27,079 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:26:27,079 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', '"hap_event"', 'Date Event')
2020-05-27 19:26:27,079 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', '"bau_event"', 'Date Event')
2020-05-27 19:26:27,082 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:26:27,082 INFO sqlalchemy.engine.base.Engine Thread-143 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:26:27,083 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:26:27,087 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:26:27,087 INFO sqlalchemy.engine.base.Engine Thread-143 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:26:27,088 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:26:27,092 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:26:27,092 INFO sqlalchemy.engine.base.Engine Thread-143 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:26:27,092 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:26:27,093 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:26:27,093 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-05-27 19:26:27,119 INFO sqlalchemy.engine.base.Engine Thread-144 : BEGIN (implicit)
2020-05-27 19:26:27,120 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:26:27,120 INFO sqlalchemy.engine.base.Engine Thread-144 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:26:27,122 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:26:27,122 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:26:27,122 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', '"hap_event"', 'Date Event')
2020-05-27 19:26:27,122 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', '"bau_event"', 'Date Event')
2020-05-27 19:26:27,126 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:26:27,126 INFO sqlalchemy.engine.base.Engine Thread-144 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:26:27,127 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:26:27,131 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:26:27,131 INFO sqlalchemy.engine.base.Engine Thread-144 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:26:27,132 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:26:27,136 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:26:27,137 INFO sqlalchemy.engine.base.Engine Thread-144 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:26:27,137 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:26:27,138 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:26:27,139 INFO sqlalchemy.engine.base.Engine Thread-144 : ROLLBACK
2020-05-27 19:34:23,931 INFO sqlalchemy.engine.base.Engine Thread-145 : BEGIN (implicit)
2020-05-27 19:34:23,933 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:34:23,933 INFO sqlalchemy.engine.base.Engine Thread-145 : (1, 1)
2020-05-27 19:34:23,936 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:34:23,936 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:34:23,939 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:34:23,939 INFO sqlalchemy.engine.base.Engine Thread-145 : ('philip', 1, 1)
2020-05-27 19:34:23,939 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:34:23,940 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:34:23,942 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:34:23,942 INFO sqlalchemy.engine.base.Engine Thread-145 : (0,)
2020-05-27 19:34:23,943 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:34:23,943 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:34:23,943 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:34:23,943 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:34:23,943 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:34:23,943 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:34:23,943 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:34:23,943 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:34:23,943 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:34:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:34:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:34:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:34:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:34:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:34:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:34:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:34:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:34:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:34:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:34:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:34:23,944 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:34:23,945 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:34:23,945 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:34:23,945 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:34:23,947 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-05-27 19:34:23,948 INFO sqlalchemy.engine.base.Engine Thread-145 : (0, 1)
2020-05-27 19:34:23,948 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:34:23,948 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:34:23,949 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:34:23,949 INFO sqlalchemy.engine.base.Engine Thread-145 : (66,)
2020-05-27 19:34:23,950 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:34:23,950 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:34:23,950 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:34:23,954 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:34:23,955 INFO sqlalchemy.engine.base.Engine Thread-145 : ('philip', 1, 1)
2020-05-27 19:34:23,955 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:34:23,955 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:34:23,959 INFO sqlalchemy.engine.base.Engine Thread-145 : ROLLBACK
2020-05-27 19:34:27,447 INFO sqlalchemy.engine.base.Engine Thread-155 : BEGIN (implicit)
2020-05-27 19:34:27,448 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:34:27,448 INFO sqlalchemy.engine.base.Engine Thread-155 : (1, 1)
2020-05-27 19:34:27,449 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:34:27,449 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:34:27,451 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:34:27,451 INFO sqlalchemy.engine.base.Engine Thread-155 : ('philip', 1, 1)
2020-05-27 19:34:27,452 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:34:27,452 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:34:27,454 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:34:27,455 INFO sqlalchemy.engine.base.Engine Thread-155 : (0,)
2020-05-27 19:34:27,455 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:34:27,455 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:34:27,455 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:34:27,456 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:34:27,456 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:34:27,456 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:34:27,456 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:34:27,456 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:34:27,456 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:34:27,456 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:34:27,456 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:34:27,456 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:34:27,456 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:34:27,456 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:34:27,456 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:34:27,456 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:34:27,457 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:34:27,457 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:34:27,457 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:34:27,457 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:34:27,457 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:34:27,457 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:34:27,457 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:34:27,457 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:34:27,462 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:34:27,462 INFO sqlalchemy.engine.base.Engine Thread-155 : ('127',)
2020-05-27 19:34:27,463 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:34:27,463 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:34:27,463 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:34:27,463 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:34:27,463 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:34:27,467 INFO sqlalchemy.engine.base.Engine Thread-155 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:34:27,468 INFO sqlalchemy.engine.base.Engine Thread-155 : ('philip', 1, 1)
2020-05-27 19:34:27,468 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:34:27,468 DEBUG sqlalchemy.engine.base.Engine Thread-155 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:34:27,472 INFO sqlalchemy.engine.base.Engine Thread-155 : ROLLBACK
2020-05-27 19:36:46,296 INFO sqlalchemy.engine.base.Engine Thread-165 : BEGIN (implicit)
2020-05-27 19:36:46,298 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:36:46,298 INFO sqlalchemy.engine.base.Engine Thread-165 : ('Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:36:46,300 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:36:46,300 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', '"info_event"', 'Date Event')
2020-05-27 19:36:46,300 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', '"info_event"', 'Date Event')
2020-05-27 19:36:46,300 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:36:46,300 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', '"hap_event"', 'Date Event')
2020-05-27 19:36:46,300 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', '"info_event"', 'Date Event')
2020-05-27 19:36:46,301 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:36:46,301 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', '"hap_event"', 'Date Event')
2020-05-27 19:36:46,301 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Informational', '"info_event"', 'Date Event')
2020-05-27 19:36:46,301 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', '"bau_event"', 'Date Event')
2020-05-27 19:36:46,301 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', '"hap_event"', 'Date Event')
2020-05-27 19:36:46,305 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:36:46,305 INFO sqlalchemy.engine.base.Engine Thread-165 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 19:36:46,306 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:36:46,310 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:36:46,310 INFO sqlalchemy.engine.base.Engine Thread-165 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:36:46,311 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:36:46,311 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:36:46,311 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:36:46,311 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:36:46,311 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:36:46,312 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:36:46,312 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:36:46,312 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:36:46,316 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:36:46,316 INFO sqlalchemy.engine.base.Engine Thread-165 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:36:46,317 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:36:46,317 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:36:46,317 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:36:46,317 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:36:46,317 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:36:46,317 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:36:46,317 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:36:46,319 INFO sqlalchemy.engine.base.Engine Thread-165 : ROLLBACK
2020-05-27 19:36:46,390 INFO sqlalchemy.engine.base.Engine Thread-166 : BEGIN (implicit)
2020-05-27 19:36:46,391 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:36:46,391 INFO sqlalchemy.engine.base.Engine Thread-166 : (1, 1)
2020-05-27 19:36:46,391 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:36:46,392 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:36:46,393 INFO sqlalchemy.engine.base.Engine Thread-166 : ROLLBACK
2020-05-27 19:36:52,811 INFO sqlalchemy.engine.base.Engine Thread-167 : BEGIN (implicit)
2020-05-27 19:36:52,812 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:36:52,812 INFO sqlalchemy.engine.base.Engine Thread-167 : (1, 1)
2020-05-27 19:36:52,813 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:36:52,813 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:36:52,815 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:36:52,815 INFO sqlalchemy.engine.base.Engine Thread-167 : ('philip', 1, 1)
2020-05-27 19:36:52,816 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:36:52,816 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:36:52,817 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:36:52,818 INFO sqlalchemy.engine.base.Engine Thread-167 : ('128', 1)
2020-05-27 19:36:52,818 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:36:52,818 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:36:52,821 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:36:52,821 INFO sqlalchemy.engine.base.Engine Thread-167 : (0,)
2020-05-27 19:36:52,822 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:36:52,822 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:36:52,822 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:36:52,822 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:36:52,822 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:36:52,822 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:36:52,822 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:36:52,822 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:36:52,823 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:36:52,823 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:36:52,823 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:36:52,823 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:36:52,823 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:36:52,823 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:36:52,823 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:36:52,823 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:36:52,823 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:36:52,823 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:36:52,823 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:36:52,823 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:36:52,824 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:36:52,824 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:36:52,824 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:36:52,824 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:36:52,826 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:36:52,826 INFO sqlalchemy.engine.base.Engine Thread-167 : (0,)
2020-05-27 19:36:52,827 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:36:52,827 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:36:52,827 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:36:52,828 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:36:52,828 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:36:52,828 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:36:52,828 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:36:52,828 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:36:52,828 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:36:52,828 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:36:52,828 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:36:52,828 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:36:52,828 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:36:52,829 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:36:52,829 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:36:52,829 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:36:52,829 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:36:52,829 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:36:52,829 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:36:52,829 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:36:52,829 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:36:52,829 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:36:52,829 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:36:52,830 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:36:52,830 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:36:52,830 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:36:52,830 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:36:52,830 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:36:52,830 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:36:52,830 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:36:52,830 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:36:52,830 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:36:52,830 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:36:52,830 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:36:52,830 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:36:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:36:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:36:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:36:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:36:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:36:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:36:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:36:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:36:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:36:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:36:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:36:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:36:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:36:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:36:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:36:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:36:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:36:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:36:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:36:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:36:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:36:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:36:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:36:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:36:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:36:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:36:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:36:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:36:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:36:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:36:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:36:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:36:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:36:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:36:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:36:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:36:52,834 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:36:52,834 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:36:52,834 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:36:52,834 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:36:52,834 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:36:52,834 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:36:52,834 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:36:52,834 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:36:52,834 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:36:52,834 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:36:52,841 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:36:52,841 INFO sqlalchemy.engine.base.Engine Thread-167 : ('philip', 1, 1)
2020-05-27 19:36:52,842 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:36:52,842 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:36:52,846 INFO sqlalchemy.engine.base.Engine Thread-167 : ROLLBACK
2020-05-27 19:36:59,899 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-05-27 19:36:59,900 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:36:59,900 INFO sqlalchemy.engine.base.Engine Thread-177 : (1, 1)
2020-05-27 19:36:59,901 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:36:59,901 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:36:59,903 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:36:59,903 INFO sqlalchemy.engine.base.Engine Thread-177 : ('philip', 1, 1)
2020-05-27 19:36:59,904 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:36:59,904 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:36:59,906 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:36:59,906 INFO sqlalchemy.engine.base.Engine Thread-177 : ('128', 1)
2020-05-27 19:36:59,906 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:36:59,907 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:36:59,910 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:36:59,910 INFO sqlalchemy.engine.base.Engine Thread-177 : (0,)
2020-05-27 19:36:59,910 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:36:59,911 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:36:59,911 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:36:59,911 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:36:59,911 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:36:59,911 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:36:59,911 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:36:59,911 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:36:59,911 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:36:59,911 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:36:59,911 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:36:59,911 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:36:59,911 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:36:59,912 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:36:59,912 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:36:59,912 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:36:59,912 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:36:59,912 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:36:59,912 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:36:59,912 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:36:59,912 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:36:59,912 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:36:59,912 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:36:59,912 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:36:59,914 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:36:59,915 INFO sqlalchemy.engine.base.Engine Thread-177 : (0,)
2020-05-27 19:36:59,915 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:36:59,916 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:36:59,916 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:36:59,916 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:36:59,916 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:36:59,916 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:36:59,916 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:36:59,916 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:36:59,916 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:36:59,916 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:36:59,916 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:36:59,916 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:36:59,916 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:36:59,917 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:36:59,917 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:36:59,917 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:36:59,917 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:36:59,917 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:36:59,917 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:36:59,917 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:36:59,917 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:36:59,917 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:36:59,917 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:36:59,917 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:36:59,918 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:36:59,918 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:36:59,918 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:36:59,918 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:36:59,918 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:36:59,918 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:36:59,918 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:36:59,918 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:36:59,918 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:36:59,918 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:36:59,918 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:36:59,918 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:36:59,918 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:36:59,919 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:36:59,919 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:36:59,919 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:36:59,919 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:36:59,919 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:36:59,919 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:36:59,919 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:36:59,919 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:36:59,919 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:36:59,919 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:36:59,919 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:36:59,919 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (128, 'Informational', '"info_event"', 127, 0, 0, 1)
2020-05-27 19:36:59,919 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:36:59,920 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:36:59,920 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:36:59,920 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:36:59,920 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:36:59,920 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:36:59,920 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:36:59,920 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:36:59,920 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:36:59,920 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:36:59,920 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:36:59,920 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:36:59,920 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:36:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:36:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:36:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:36:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:36:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:36:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:36:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:36:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:36:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:36:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:36:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:36:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:36:59,922 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:36:59,922 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:36:59,922 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:36:59,922 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:36:59,922 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:36:59,922 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:36:59,922 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:36:59,925 INFO sqlalchemy.engine.base.Engine Thread-177 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:36:59,925 INFO sqlalchemy.engine.base.Engine Thread-177 : ('128', 'info_event', 128)
2020-05-27 19:36:59,926 INFO sqlalchemy.engine.base.Engine Thread-177 : COMMIT
2020-05-27 19:36:59,959 INFO sqlalchemy.engine.base.Engine Thread-178 : BEGIN (implicit)
2020-05-27 19:36:59,960 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:36:59,960 INFO sqlalchemy.engine.base.Engine Thread-178 : (1, 1)
2020-05-27 19:36:59,961 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:36:59,961 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:36:59,964 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:36:59,964 INFO sqlalchemy.engine.base.Engine Thread-178 : ('philip', 1, 1)
2020-05-27 19:36:59,965 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:36:59,965 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:36:59,967 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:36:59,967 INFO sqlalchemy.engine.base.Engine Thread-178 : (0,)
2020-05-27 19:36:59,968 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:36:59,968 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:36:59,968 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:36:59,968 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:36:59,968 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:36:59,969 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:36:59,969 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:36:59,969 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:36:59,969 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:36:59,969 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:36:59,969 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:36:59,969 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:36:59,969 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:36:59,969 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:36:59,969 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:36:59,970 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:36:59,970 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:36:59,970 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:36:59,970 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:36:59,970 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:36:59,970 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:36:59,970 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:36:59,970 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:36:59,970 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:36:59,972 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:36:59,972 INFO sqlalchemy.engine.base.Engine Thread-178 : (127, 1)
2020-05-27 19:36:59,973 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:36:59,973 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:36:59,974 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:36:59,974 INFO sqlalchemy.engine.base.Engine Thread-178 : (127,)
2020-05-27 19:36:59,975 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:36:59,975 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:36:59,975 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:36:59,975 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:36:59,975 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:36:59,979 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:36:59,979 INFO sqlalchemy.engine.base.Engine Thread-178 : ('philip', 1, 1)
2020-05-27 19:36:59,980 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:36:59,980 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:36:59,983 INFO sqlalchemy.engine.base.Engine Thread-178 : ROLLBACK
2020-05-27 19:37:01,413 INFO sqlalchemy.engine.base.Engine Thread-188 : BEGIN (implicit)
2020-05-27 19:37:01,414 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:01,414 INFO sqlalchemy.engine.base.Engine Thread-188 : (1, 1)
2020-05-27 19:37:01,415 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:01,416 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:01,418 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:37:01,418 INFO sqlalchemy.engine.base.Engine Thread-188 : ('philip', 1, 1)
2020-05-27 19:37:01,418 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:01,419 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:01,420 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:37:01,420 INFO sqlalchemy.engine.base.Engine Thread-188 : ('129', 1)
2020-05-27 19:37:01,420 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:01,421 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:37:01,422 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:37:01,423 INFO sqlalchemy.engine.base.Engine Thread-188 : (0,)
2020-05-27 19:37:01,423 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:01,423 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:37:01,423 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:37:01,424 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:37:01,424 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:37:01,424 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:37:01,424 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:37:01,424 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:37:01,424 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:37:01,424 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:37:01,424 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:37:01,424 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:37:01,424 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:37:01,424 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:37:01,424 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:37:01,424 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:37:01,425 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:37:01,425 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:37:01,425 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:37:01,425 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:37:01,425 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:37:01,425 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:37:01,425 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:37:01,425 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:37:01,427 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:37:01,427 INFO sqlalchemy.engine.base.Engine Thread-188 : (0,)
2020-05-27 19:37:01,428 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:01,428 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:37:01,428 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:37:01,428 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:37:01,428 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:37:01,428 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:37:01,428 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:37:01,428 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:37:01,429 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:37:01,429 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:37:01,429 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:37:01,429 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:37:01,429 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:37:01,429 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:37:01,429 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:37:01,429 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:37:01,429 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:37:01,429 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:37:01,430 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:37:01,430 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:37:01,430 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:37:01,430 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:37:01,430 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:37:01,430 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:37:01,430 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:37:01,430 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:37:01,430 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:37:01,430 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:37:01,430 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:37:01,430 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:37:01,431 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:37:01,431 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:37:01,431 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:37:01,431 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:37:01,431 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:37:01,431 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:37:01,431 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:37:01,431 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:37:01,431 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:37:01,431 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:37:01,431 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:37:01,431 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:37:01,432 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:37:01,432 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:37:01,432 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:37:01,432 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:37:01,432 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:37:01,432 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:37:01,432 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:37:01,432 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:37:01,433 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:37:01,433 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:37:01,433 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:37:01,433 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:37:01,433 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:37:01,433 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:37:01,433 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:37:01,433 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:37:01,434 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:37:01,434 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:37:01,434 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:37:01,434 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:37:01,434 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:37:01,434 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:37:01,434 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:37:01,434 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:37:01,434 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:37:01,434 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:37:01,435 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:37:01,435 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:37:01,435 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:37:01,435 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:37:01,435 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:37:01,435 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:37:01,435 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:37:01,435 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:37:01,435 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:37:01,436 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:37:01,436 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:37:01,436 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:37:01,436 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:37:01,443 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:37:01,443 INFO sqlalchemy.engine.base.Engine Thread-188 : ('philip', 1, 1)
2020-05-27 19:37:01,443 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:01,443 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:01,447 INFO sqlalchemy.engine.base.Engine Thread-188 : ROLLBACK
2020-05-27 19:37:05,845 INFO sqlalchemy.engine.base.Engine Thread-198 : BEGIN (implicit)
2020-05-27 19:37:05,846 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:05,846 INFO sqlalchemy.engine.base.Engine Thread-198 : (1, 1)
2020-05-27 19:37:05,847 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:05,847 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:05,849 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:37:05,850 INFO sqlalchemy.engine.base.Engine Thread-198 : ('philip', 1, 1)
2020-05-27 19:37:05,850 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:05,851 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:05,852 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:37:05,852 INFO sqlalchemy.engine.base.Engine Thread-198 : ('129', 1)
2020-05-27 19:37:05,853 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:05,853 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:37:05,856 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:37:05,856 INFO sqlalchemy.engine.base.Engine Thread-198 : (0,)
2020-05-27 19:37:05,857 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:05,857 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:37:05,857 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:37:05,857 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:37:05,857 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:37:05,858 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:37:05,858 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:37:05,858 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:37:05,858 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:37:05,858 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:37:05,858 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:37:05,858 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:37:05,858 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:37:05,858 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:37:05,858 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:37:05,859 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:37:05,859 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:37:05,859 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:37:05,859 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:37:05,859 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:37:05,859 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:37:05,859 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:37:05,859 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:37:05,859 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:37:05,861 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:37:05,862 INFO sqlalchemy.engine.base.Engine Thread-198 : (0,)
2020-05-27 19:37:05,862 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:05,863 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:37:05,863 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:37:05,863 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:37:05,863 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:37:05,863 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:37:05,863 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:37:05,863 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:37:05,863 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:37:05,863 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:37:05,863 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:37:05,863 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:37:05,864 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:37:05,864 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:37:05,864 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:37:05,864 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:37:05,864 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:37:05,864 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:37:05,864 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:37:05,864 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:37:05,864 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:37:05,864 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (129, 'Heightened Awareness Period (HAP)', '"hap_event"', 127, 0, 0, 1)
2020-05-27 19:37:05,864 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:37:05,864 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:37:05,864 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:37:05,865 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:37:05,865 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:37:05,865 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:37:05,865 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:37:05,865 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:37:05,865 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:37:05,865 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:37:05,865 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:37:05,865 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:37:05,865 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:37:05,865 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:37:05,865 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:37:05,866 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:37:05,866 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:37:05,866 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:37:05,866 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:37:05,866 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:37:05,866 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:37:05,866 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:37:05,866 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:37:05,866 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:37:05,866 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:37:05,866 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:37:05,866 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:37:05,867 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:37:05,867 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:37:05,867 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:37:05,867 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:37:05,867 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:37:05,867 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:37:05,867 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:37:05,867 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:37:05,867 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:37:05,867 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:37:05,867 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:37:05,868 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:37:05,868 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:37:05,868 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:37:05,868 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:37:05,868 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:37:05,868 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:37:05,868 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:37:05,868 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:37:05,868 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:37:05,868 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:37:05,868 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:37:05,869 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:37:05,869 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:37:05,869 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:37:05,869 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:37:05,869 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:37:05,869 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:37:05,869 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:37:05,869 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:37:05,869 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:37:05,869 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:37:05,872 INFO sqlalchemy.engine.base.Engine Thread-198 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:37:05,872 INFO sqlalchemy.engine.base.Engine Thread-198 : ('129', 'hap_event', 129)
2020-05-27 19:37:05,873 INFO sqlalchemy.engine.base.Engine Thread-198 : COMMIT
2020-05-27 19:37:05,905 INFO sqlalchemy.engine.base.Engine Thread-199 : BEGIN (implicit)
2020-05-27 19:37:05,906 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:05,906 INFO sqlalchemy.engine.base.Engine Thread-199 : (1, 1)
2020-05-27 19:37:05,906 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:05,907 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:05,909 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:37:05,909 INFO sqlalchemy.engine.base.Engine Thread-199 : ('philip', 1, 1)
2020-05-27 19:37:05,910 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:05,910 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:05,912 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:37:05,912 INFO sqlalchemy.engine.base.Engine Thread-199 : (0,)
2020-05-27 19:37:05,912 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:05,913 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:37:05,913 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:37:05,913 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:37:05,913 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:37:05,913 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:37:05,913 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:37:05,913 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:37:05,913 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:37:05,913 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:37:05,913 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:37:05,913 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:37:05,914 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:37:05,914 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:37:05,914 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:37:05,914 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:37:05,914 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:37:05,914 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:37:05,914 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:37:05,914 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:37:05,914 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:37:05,914 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:37:05,914 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:37:05,914 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:37:05,916 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:37:05,916 INFO sqlalchemy.engine.base.Engine Thread-199 : (127, 1)
2020-05-27 19:37:05,917 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:05,917 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:37:05,918 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:37:05,918 INFO sqlalchemy.engine.base.Engine Thread-199 : (127,)
2020-05-27 19:37:05,919 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:05,919 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:37:05,919 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:37:05,919 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:37:05,919 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:37:05,924 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:37:05,924 INFO sqlalchemy.engine.base.Engine Thread-199 : ('philip', 1, 1)
2020-05-27 19:37:05,924 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:05,925 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:05,929 INFO sqlalchemy.engine.base.Engine Thread-199 : ROLLBACK
2020-05-27 19:37:07,608 INFO sqlalchemy.engine.base.Engine Thread-209 : BEGIN (implicit)
2020-05-27 19:37:07,609 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:07,609 INFO sqlalchemy.engine.base.Engine Thread-209 : (1, 1)
2020-05-27 19:37:07,610 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:07,610 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:07,613 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:37:07,613 INFO sqlalchemy.engine.base.Engine Thread-209 : ('philip', 1, 1)
2020-05-27 19:37:07,614 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:07,614 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:07,616 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:37:07,616 INFO sqlalchemy.engine.base.Engine Thread-209 : ('131', 1)
2020-05-27 19:37:07,616 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:07,616 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:37:07,619 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:37:07,619 INFO sqlalchemy.engine.base.Engine Thread-209 : (0,)
2020-05-27 19:37:07,619 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:07,620 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:37:07,620 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:37:07,620 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:37:07,620 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:37:07,620 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:37:07,620 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:37:07,620 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:37:07,620 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:37:07,621 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:37:07,621 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:37:07,621 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:37:07,621 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:37:07,621 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:37:07,621 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:37:07,621 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:37:07,621 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:37:07,621 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:37:07,621 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:37:07,621 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:37:07,622 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:37:07,622 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:37:07,622 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:37:07,622 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:37:07,624 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:37:07,624 INFO sqlalchemy.engine.base.Engine Thread-209 : (0,)
2020-05-27 19:37:07,625 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:07,625 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:37:07,625 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:37:07,625 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:37:07,625 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:37:07,625 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:37:07,625 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:37:07,625 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:37:07,625 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:37:07,626 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:37:07,626 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:37:07,626 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:37:07,626 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:37:07,626 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:37:07,626 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:37:07,626 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:37:07,626 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:37:07,626 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:37:07,626 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:37:07,627 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:37:07,627 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:37:07,627 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:37:07,627 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:37:07,627 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:37:07,627 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:37:07,627 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:37:07,627 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:37:07,627 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:37:07,627 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:37:07,628 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:37:07,628 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:37:07,628 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:37:07,628 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:37:07,628 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:37:07,628 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:37:07,628 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:37:07,628 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:37:07,628 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:37:07,628 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:37:07,629 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:37:07,629 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:37:07,629 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:37:07,629 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:37:07,629 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:37:07,629 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:37:07,629 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:37:07,629 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:37:07,629 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:37:07,629 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:37:07,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:37:07,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:37:07,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:37:07,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:37:07,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:37:07,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:37:07,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:37:07,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:37:07,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:37:07,630 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:37:07,631 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:37:07,631 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:37:07,631 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:37:07,631 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:37:07,631 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:37:07,631 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:37:07,631 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:37:07,631 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:37:07,631 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:37:07,631 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:37:07,632 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:37:07,632 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:37:07,632 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:37:07,632 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:37:07,632 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:37:07,632 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:37:07,632 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:37:07,632 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:37:07,632 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:37:07,632 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:37:07,633 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:37:07,633 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:37:07,639 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:37:07,639 INFO sqlalchemy.engine.base.Engine Thread-209 : ('philip', 1, 1)
2020-05-27 19:37:07,640 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:07,640 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:07,644 INFO sqlalchemy.engine.base.Engine Thread-209 : ROLLBACK
2020-05-27 19:37:12,363 INFO sqlalchemy.engine.base.Engine Thread-219 : BEGIN (implicit)
2020-05-27 19:37:12,364 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:12,364 INFO sqlalchemy.engine.base.Engine Thread-219 : (1, 1)
2020-05-27 19:37:12,365 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:12,365 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:12,367 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:37:12,367 INFO sqlalchemy.engine.base.Engine Thread-219 : ('philip', 1, 1)
2020-05-27 19:37:12,368 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:12,368 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:12,370 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:37:12,370 INFO sqlalchemy.engine.base.Engine Thread-219 : ('131', 1)
2020-05-27 19:37:12,370 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:12,370 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:37:12,373 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:37:12,373 INFO sqlalchemy.engine.base.Engine Thread-219 : (0,)
2020-05-27 19:37:12,374 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:12,374 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:37:12,374 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:37:12,374 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:37:12,374 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:37:12,374 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:37:12,375 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:37:12,375 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:37:12,375 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:37:12,375 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:37:12,375 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:37:12,375 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:37:12,375 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:37:12,375 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:37:12,375 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:37:12,375 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:37:12,375 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:37:12,376 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:37:12,376 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:37:12,376 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:37:12,376 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:37:12,376 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:37:12,376 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:37:12,376 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:37:12,380 INFO sqlalchemy.engine.base.Engine Thread-219 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:37:12,380 INFO sqlalchemy.engine.base.Engine Thread-219 : (0,)
2020-05-27 19:37:12,381 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:12,381 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:37:12,381 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:37:12,381 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:37:12,381 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:37:12,381 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (131, 'BaU Firewall Change', '"bau_event"', 127, 0, 0, 1)
2020-05-27 19:37:12,381 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:37:12,381 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:37:12,382 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:37:12,382 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:37:12,382 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:37:12,382 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:37:12,382 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:37:12,382 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:37:12,382 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:37:12,382 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:37:12,382 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:37:12,382 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:37:12,382 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:37:12,382 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:37:12,383 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:37:12,383 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:37:12,383 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:37:12,383 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:37:12,383 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:37:12,383 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:37:12,383 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:37:12,383 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:37:12,383 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:37:12,383 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:37:12,383 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:37:12,383 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:37:12,383 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:37:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:37:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:37:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:37:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:37:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:37:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:37:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:37:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:37:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:37:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:37:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:37:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:37:12,384 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:37:12,385 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:37:12,385 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:37:12,385 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:37:12,385 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:37:12,385 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:37:12,385 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:37:12,385 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:37:12,385 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:37:12,385 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:37:12,385 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:37:12,385 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:37:12,385 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:37:12,386 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:37:12,386 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:37:12,386 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:37:12,386 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:37:12,386 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:37:12,386 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:37:12,386 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:37:12,386 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:37:12,386 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:37:12,386 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:37:12,386 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:37:12,386 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:37:12,387 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:37:12,387 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:37:12,387 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:37:12,387 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:37:12,387 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:37:12,387 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:37:12,387 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:37:12,387 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:37:12,387 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:37:12,387 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:37:12,387 DEBUG sqlalchemy.engine.base.Engine Thread-219 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:37:12,390 INFO sqlalchemy.engine.base.Engine Thread-219 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:37:12,390 INFO sqlalchemy.engine.base.Engine Thread-219 : ('131', 'bau_event', 131)
2020-05-27 19:37:12,391 INFO sqlalchemy.engine.base.Engine Thread-219 : COMMIT
2020-05-27 19:37:12,434 INFO sqlalchemy.engine.base.Engine Thread-220 : BEGIN (implicit)
2020-05-27 19:37:12,435 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:12,435 INFO sqlalchemy.engine.base.Engine Thread-220 : (1, 1)
2020-05-27 19:37:12,436 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:12,436 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:12,438 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:37:12,439 INFO sqlalchemy.engine.base.Engine Thread-220 : ('philip', 1, 1)
2020-05-27 19:37:12,439 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:12,440 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:12,442 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:37:12,442 INFO sqlalchemy.engine.base.Engine Thread-220 : (0,)
2020-05-27 19:37:12,442 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:12,443 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:37:12,443 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:37:12,443 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:37:12,443 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:37:12,443 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:37:12,443 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:37:12,443 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:37:12,443 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:37:12,443 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:37:12,443 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:37:12,444 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:37:12,444 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:37:12,444 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:37:12,444 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:37:12,444 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:37:12,444 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:37:12,444 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:37:12,444 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:37:12,444 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:37:12,444 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:37:12,444 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:37:12,444 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:37:12,445 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:37:12,447 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:37:12,447 INFO sqlalchemy.engine.base.Engine Thread-220 : (127, 1)
2020-05-27 19:37:12,448 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:12,448 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:37:12,449 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:37:12,449 INFO sqlalchemy.engine.base.Engine Thread-220 : (127,)
2020-05-27 19:37:12,450 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:12,450 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:37:12,450 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:37:12,450 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:37:12,450 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:37:12,455 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:37:12,455 INFO sqlalchemy.engine.base.Engine Thread-220 : ('philip', 1, 1)
2020-05-27 19:37:12,456 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:12,456 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:12,460 INFO sqlalchemy.engine.base.Engine Thread-220 : ROLLBACK
2020-05-27 19:37:16,626 INFO sqlalchemy.engine.base.Engine Thread-230 : BEGIN (implicit)
2020-05-27 19:37:16,627 INFO sqlalchemy.engine.base.Engine Thread-230 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:37:16,627 INFO sqlalchemy.engine.base.Engine Thread-230 : ('Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:37:16,628 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:37:16,628 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:37:16,629 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:37:16,629 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:37:16,629 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:37:16,629 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:37:16,629 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:37:16,629 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:37:16,629 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:37:16,629 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:37:16,629 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:37:16,633 INFO sqlalchemy.engine.base.Engine Thread-230 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:37:16,633 INFO sqlalchemy.engine.base.Engine Thread-230 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 19:37:16,634 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:37:16,638 INFO sqlalchemy.engine.base.Engine Thread-230 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:37:16,638 INFO sqlalchemy.engine.base.Engine Thread-230 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:37:16,639 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:37:16,639 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:37:16,640 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:37:16,640 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:37:16,640 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:37:16,640 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:37:16,640 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:37:16,640 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:37:16,645 INFO sqlalchemy.engine.base.Engine Thread-230 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:37:16,645 INFO sqlalchemy.engine.base.Engine Thread-230 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:37:16,646 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:37:16,646 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:37:16,646 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:37:16,646 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:37:16,646 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:37:16,646 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:37:16,646 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:37:16,648 INFO sqlalchemy.engine.base.Engine Thread-230 : ROLLBACK
2020-05-27 19:37:16,697 INFO sqlalchemy.engine.base.Engine Thread-231 : BEGIN (implicit)
2020-05-27 19:37:16,698 INFO sqlalchemy.engine.base.Engine Thread-231 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:16,698 INFO sqlalchemy.engine.base.Engine Thread-231 : (1, 1)
2020-05-27 19:37:16,698 DEBUG sqlalchemy.engine.base.Engine Thread-231 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:16,699 DEBUG sqlalchemy.engine.base.Engine Thread-231 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:16,700 INFO sqlalchemy.engine.base.Engine Thread-231 : ROLLBACK
2020-05-27 19:37:25,134 INFO sqlalchemy.engine.base.Engine Thread-232 : BEGIN (implicit)
2020-05-27 19:37:25,135 INFO sqlalchemy.engine.base.Engine Thread-232 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:25,135 INFO sqlalchemy.engine.base.Engine Thread-232 : (1, 1)
2020-05-27 19:37:25,136 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:25,136 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:25,138 INFO sqlalchemy.engine.base.Engine Thread-232 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:37:25,138 INFO sqlalchemy.engine.base.Engine Thread-232 : ('philip', 1, 1)
2020-05-27 19:37:25,139 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:25,139 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:25,141 INFO sqlalchemy.engine.base.Engine Thread-232 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:37:25,141 INFO sqlalchemy.engine.base.Engine Thread-232 : (0,)
2020-05-27 19:37:25,142 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:25,142 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:37:25,142 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:37:25,142 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:37:25,142 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:37:25,142 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:37:25,142 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:37:25,142 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:37:25,143 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:37:25,143 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:37:25,143 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:37:25,143 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:37:25,143 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:37:25,143 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:37:25,143 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:37:25,143 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:37:25,143 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:37:25,143 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:37:25,143 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:37:25,143 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:37:25,143 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:37:25,144 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:37:25,144 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:37:25,144 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:37:25,146 INFO sqlalchemy.engine.base.Engine Thread-232 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:37:25,146 INFO sqlalchemy.engine.base.Engine Thread-232 : (127, 1)
2020-05-27 19:37:25,146 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:25,146 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:37:25,147 INFO sqlalchemy.engine.base.Engine Thread-232 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:37:25,147 INFO sqlalchemy.engine.base.Engine Thread-232 : (127,)
2020-05-27 19:37:25,148 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:25,148 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:37:25,148 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:37:25,148 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:37:25,148 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:37:25,153 INFO sqlalchemy.engine.base.Engine Thread-232 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:37:25,153 INFO sqlalchemy.engine.base.Engine Thread-232 : ('philip', 1, 1)
2020-05-27 19:37:25,153 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:25,154 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:25,157 INFO sqlalchemy.engine.base.Engine Thread-232 : ROLLBACK
2020-05-27 19:37:25,262 INFO sqlalchemy.engine.base.Engine Thread-233 : BEGIN (implicit)
2020-05-27 19:37:25,263 INFO sqlalchemy.engine.base.Engine Thread-233 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:25,263 INFO sqlalchemy.engine.base.Engine Thread-233 : (1, 1)
2020-05-27 19:37:25,263 DEBUG sqlalchemy.engine.base.Engine Thread-233 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:25,264 DEBUG sqlalchemy.engine.base.Engine Thread-233 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:25,265 INFO sqlalchemy.engine.base.Engine Thread-233 : ROLLBACK
2020-05-27 19:37:29,070 INFO sqlalchemy.engine.base.Engine Thread-234 : BEGIN (implicit)
2020-05-27 19:37:29,074 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:29,074 INFO sqlalchemy.engine.base.Engine Thread-234 : (1, 1)
2020-05-27 19:37:29,077 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:29,080 INFO sqlalchemy.engine.base.Engine Thread-235 : BEGIN (implicit)
2020-05-27 19:37:29,080 INFO sqlalchemy.engine.base.Engine Thread-236 : BEGIN (implicit)
2020-05-27 19:37:29,083 INFO sqlalchemy.engine.base.Engine Thread-236 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:29,082 INFO sqlalchemy.engine.base.Engine Thread-235 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:29,082 INFO sqlalchemy.engine.base.Engine Thread-237 : BEGIN (implicit)
2020-05-27 19:37:29,087 INFO sqlalchemy.engine.base.Engine Thread-237 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:29,087 INFO sqlalchemy.engine.base.Engine Thread-237 : (1, 1)
2020-05-27 19:37:29,086 INFO sqlalchemy.engine.base.Engine Thread-235 : (1, 1)
2020-05-27 19:37:29,081 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:29,088 INFO sqlalchemy.engine.base.Engine Thread-234 : ROLLBACK
2020-05-27 19:37:29,083 INFO sqlalchemy.engine.base.Engine Thread-236 : (1, 1)
2020-05-27 19:37:29,089 INFO sqlalchemy.engine.base.Engine Thread-238 : BEGIN (implicit)
2020-05-27 19:37:29,089 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:29,092 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:29,090 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:29,091 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:29,091 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:29,094 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:29,094 INFO sqlalchemy.engine.base.Engine Thread-235 : ROLLBACK
2020-05-27 19:37:29,093 DEBUG sqlalchemy.engine.base.Engine Thread-236 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:29,093 INFO sqlalchemy.engine.base.Engine Thread-238 : (1, 1)
2020-05-27 19:37:29,093 INFO sqlalchemy.engine.base.Engine Thread-237 : ROLLBACK
2020-05-27 19:37:29,096 INFO sqlalchemy.engine.base.Engine Thread-236 : ROLLBACK
2020-05-27 19:37:29,097 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:29,098 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:29,099 INFO sqlalchemy.engine.base.Engine Thread-238 : ROLLBACK
2020-05-27 19:37:33,209 INFO sqlalchemy.engine.base.Engine Thread-239 : BEGIN (implicit)
2020-05-27 19:37:33,211 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:37:33,211 INFO sqlalchemy.engine.base.Engine Thread-239 : ()
2020-05-27 19:37:33,212 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:37:33,212 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:37:33,213 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:37:33,214 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:37:33,214 INFO sqlalchemy.engine.base.Engine Thread-239 : (100,)
2020-05-27 19:37:33,215 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:37:33,215 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:37:33,215 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:37:33,215 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:37:33,215 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:37:33,215 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:37:33,217 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:33,217 INFO sqlalchemy.engine.base.Engine Thread-239 : (1, 1)
2020-05-27 19:37:33,218 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:33,218 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:33,222 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:37:33,222 INFO sqlalchemy.engine.base.Engine Thread-239 : ('philip', 1, 1)
2020-05-27 19:37:33,223 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:33,223 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:33,226 INFO sqlalchemy.engine.base.Engine Thread-239 : ROLLBACK
2020-05-27 19:37:33,470 INFO sqlalchemy.engine.base.Engine Thread-250 : BEGIN (implicit)
2020-05-27 19:37:33,472 INFO sqlalchemy.engine.base.Engine Thread-249 : BEGIN (implicit)
2020-05-27 19:37:33,480 INFO sqlalchemy.engine.base.Engine Thread-249 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:33,476 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:33,479 INFO sqlalchemy.engine.base.Engine Thread-252 : BEGIN (implicit)
2020-05-27 19:37:33,475 INFO sqlalchemy.engine.base.Engine Thread-251 : BEGIN (implicit)
2020-05-27 19:37:33,480 INFO sqlalchemy.engine.base.Engine Thread-249 : (1, 1)
2020-05-27 19:37:33,480 INFO sqlalchemy.engine.base.Engine Thread-250 : (1, 1)
2020-05-27 19:37:33,481 INFO sqlalchemy.engine.base.Engine Thread-252 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:33,482 INFO sqlalchemy.engine.base.Engine Thread-252 : (1, 1)
2020-05-27 19:37:33,482 INFO sqlalchemy.engine.base.Engine Thread-251 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:33,482 INFO sqlalchemy.engine.base.Engine Thread-251 : (1, 1)
2020-05-27 19:37:33,483 DEBUG sqlalchemy.engine.base.Engine Thread-252 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:33,483 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:33,484 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:33,484 DEBUG sqlalchemy.engine.base.Engine Thread-252 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:33,484 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:33,484 DEBUG sqlalchemy.engine.base.Engine Thread-251 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:33,486 INFO sqlalchemy.engine.base.Engine Thread-249 : ROLLBACK
2020-05-27 19:37:33,487 INFO sqlalchemy.engine.base.Engine Thread-252 : ROLLBACK
2020-05-27 19:37:33,487 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:33,489 INFO sqlalchemy.engine.base.Engine Thread-250 : ROLLBACK
2020-05-27 19:37:33,487 DEBUG sqlalchemy.engine.base.Engine Thread-251 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:33,490 INFO sqlalchemy.engine.base.Engine Thread-251 : ROLLBACK
2020-05-27 19:37:33,500 INFO sqlalchemy.engine.base.Engine Thread-253 : BEGIN (implicit)
2020-05-27 19:37:33,501 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:37:33,501 INFO sqlalchemy.engine.base.Engine Thread-253 : (1, 1)
2020-05-27 19:37:33,502 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:37:33,502 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:37:33,503 INFO sqlalchemy.engine.base.Engine Thread-253 : ROLLBACK
2020-05-27 19:37:33,531 INFO sqlalchemy.engine.base.Engine Thread-254 : BEGIN (implicit)
2020-05-27 19:37:33,533 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:37:33,533 INFO sqlalchemy.engine.base.Engine Thread-254 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:37:33,534 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:37:33,534 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:37:33,534 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:37:33,534 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:37:33,537 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:37:33,537 INFO sqlalchemy.engine.base.Engine Thread-254 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:37:33,538 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:37:33,542 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:37:33,542 INFO sqlalchemy.engine.base.Engine Thread-254 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:37:33,543 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:37:33,547 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:37:33,547 INFO sqlalchemy.engine.base.Engine Thread-254 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:37:33,548 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:37:33,548 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:37:33,548 INFO sqlalchemy.engine.base.Engine Thread-254 : ROLLBACK
2020-05-27 19:37:33,606 INFO sqlalchemy.engine.base.Engine Thread-255 : BEGIN (implicit)
2020-05-27 19:37:33,607 INFO sqlalchemy.engine.base.Engine Thread-255 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:37:33,608 INFO sqlalchemy.engine.base.Engine Thread-255 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:37:33,609 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType')
2020-05-27 19:37:33,609 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:37:33,609 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:37:33,609 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:37:33,612 INFO sqlalchemy.engine.base.Engine Thread-255 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.`className` AS `anon_1_className`, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS `className`, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:37:33,612 INFO sqlalchemy.engine.base.Engine Thread-255 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:37:33,613 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_className', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:37:33,617 INFO sqlalchemy.engine.base.Engine Thread-255 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:37:33,617 INFO sqlalchemy.engine.base.Engine Thread-255 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:37:33,618 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:37:33,622 INFO sqlalchemy.engine.base.Engine Thread-255 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:37:33,622 INFO sqlalchemy.engine.base.Engine Thread-255 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:37:33,622 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:37:33,623 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:37:33,623 INFO sqlalchemy.engine.base.Engine Thread-255 : ROLLBACK
2020-05-27 19:38:05,226 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 19:38:05,226 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:38:05,227 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 19:38:05,228 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-27 19:38:05,228 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 19:38:05,228 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:38:05,229 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 19:38:05,229 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-27 19:38:05,230 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-27 19:38:05,230 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:38:05,230 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-27 19:38:05,230 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-27 19:38:05,230 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 19:38:05,230 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:38:05,231 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 19:38:05,231 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 19:38:05,232 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 19:38:05,232 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:38:05,233 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 19:38:05,233 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:38:05,233 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 19:38:05,234 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:38:05,234 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-27 19:38:05,240 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:38:05,240 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:38:05,242 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:38:05,242 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:38:05,242 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:38:05,245 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:38:05,245 INFO sqlalchemy.engine.base.Engine Thread-2 : (100,)
2020-05-27 19:38:05,245 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:38:05,246 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:38:05,246 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:38:05,246 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:38:05,246 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:38:05,246 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:38:05,249 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:38:05,250 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-05-27 19:38:05,250 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:38:05,251 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:38:05,323 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:38:05,323 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-05-27 19:38:05,324 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:38:05,324 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:38:05,326 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-27 19:38:05,575 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-05-27 19:38:05,581 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:38:05,581 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-05-27 19:38:05,582 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-05-27 19:38:05,583 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:38:05,583 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-05-27 19:38:05,584 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:38:05,584 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:38:05,585 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:38:05,584 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:38:05,588 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-05-27 19:38:05,589 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:38:05,589 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-05-27 19:38:05,595 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:38:05,595 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:38:05,600 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-05-27 19:38:05,601 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-05-27 19:38:05,602 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:38:05,602 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-05-27 19:38:05,613 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-05-27 19:38:05,615 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:38:05,647 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:38:05,649 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-05-27 19:38:05,627 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-05-27 19:38:05,640 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-05-27 19:38:05,652 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:38:05,653 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-05-27 19:38:05,651 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-05-27 19:38:05,655 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:38:05,655 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:38:05,656 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:38:05,657 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:38:05,658 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-05-27 19:38:05,658 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:38:05,658 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:38:05,659 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:38:05,659 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:38:05,663 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:38:05,663 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:38:05,664 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:38:05,669 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:38:05,670 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:38:05,671 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:38:05,675 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:38:05,676 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:38:05,678 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:38:05,678 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:38:05,679 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-05-27 19:38:05,702 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-05-27 19:38:05,704 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:38:05,704 INFO sqlalchemy.engine.base.Engine Thread-19 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:38:05,705 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:38:05,705 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:38:05,705 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:38:05,706 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:38:05,709 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:38:05,709 INFO sqlalchemy.engine.base.Engine Thread-19 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:38:05,710 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:38:05,714 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:38:05,714 INFO sqlalchemy.engine.base.Engine Thread-19 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:38:05,715 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:38:05,719 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:38:05,719 INFO sqlalchemy.engine.base.Engine Thread-19 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:38:05,721 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:38:05,721 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:38:05,722 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-05-27 19:38:38,996 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-05-27 19:38:39,000 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:38:39,000 INFO sqlalchemy.engine.base.Engine Thread-20 : ('Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:38:39,001 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:38:39,001 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:38:39,001 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:38:39,001 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:38:39,001 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:38:39,001 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:38:39,002 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:38:39,002 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:38:39,002 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:38:39,002 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:38:39,002 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:38:39,005 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:38:39,005 INFO sqlalchemy.engine.base.Engine Thread-20 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 19:38:39,006 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:38:39,010 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:38:39,011 INFO sqlalchemy.engine.base.Engine Thread-20 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:38:39,012 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:38:39,012 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:38:39,012 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:38:39,012 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:38:39,012 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:38:39,012 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:38:39,012 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:38:39,012 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:38:39,016 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:38:39,016 INFO sqlalchemy.engine.base.Engine Thread-20 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:38:39,017 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:38:39,017 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:38:39,018 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:38:39,018 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:38:39,018 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:38:39,018 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:38:39,018 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:38:39,019 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-05-27 19:38:39,086 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-05-27 19:38:39,087 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:38:39,087 INFO sqlalchemy.engine.base.Engine Thread-21 : (1, 1)
2020-05-27 19:38:39,087 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:38:39,087 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:38:39,088 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-05-27 19:39:11,254 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-05-27 19:39:11,256 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:39:11,256 INFO sqlalchemy.engine.base.Engine Thread-22 : ()
2020-05-27 19:39:11,257 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:39:11,258 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:39:11,258 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:39:11,259 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:39:11,259 INFO sqlalchemy.engine.base.Engine Thread-22 : (100,)
2020-05-27 19:39:11,260 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:39:11,260 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:39:11,260 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:39:11,260 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:39:11,260 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:39:11,260 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:39:11,262 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:39:11,262 INFO sqlalchemy.engine.base.Engine Thread-22 : (1, 1)
2020-05-27 19:39:11,263 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:11,263 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:11,267 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:39:11,267 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', 1, 1)
2020-05-27 19:39:11,268 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:11,268 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:11,270 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-05-27 19:39:11,519 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-05-27 19:39:11,521 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:39:11,521 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-05-27 19:39:11,524 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-05-27 19:39:11,524 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:11,525 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:39:11,531 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-05-27 19:39:11,527 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-05-27 19:39:11,530 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:11,530 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-05-27 19:39:11,534 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:39:11,532 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:11,534 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:11,532 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:39:11,535 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-05-27 19:39:11,535 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-05-27 19:39:11,533 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-05-27 19:39:11,534 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-05-27 19:39:11,536 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:11,538 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:11,539 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-05-27 19:39:11,539 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:11,540 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:11,541 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-05-27 19:39:11,553 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-05-27 19:39:11,554 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:39:11,554 INFO sqlalchemy.engine.base.Engine Thread-36 : (1, 1)
2020-05-27 19:39:11,554 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:11,555 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:11,555 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-05-27 19:39:11,572 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-05-27 19:39:11,574 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:39:11,574 INFO sqlalchemy.engine.base.Engine Thread-37 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:39:11,575 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:39:11,575 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:39:11,575 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:39:11,575 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:39:11,579 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:39:11,579 INFO sqlalchemy.engine.base.Engine Thread-37 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:39:11,580 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:39:11,583 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:39:11,584 INFO sqlalchemy.engine.base.Engine Thread-37 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:39:11,584 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:39:11,588 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:39:11,589 INFO sqlalchemy.engine.base.Engine Thread-37 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:39:11,589 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:39:11,589 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:39:11,590 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-05-27 19:39:11,613 INFO sqlalchemy.engine.base.Engine Thread-38 : BEGIN (implicit)
2020-05-27 19:39:11,614 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:39:11,615 INFO sqlalchemy.engine.base.Engine Thread-38 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:39:11,617 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:39:11,617 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:39:11,617 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:39:11,617 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:39:11,621 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:39:11,621 INFO sqlalchemy.engine.base.Engine Thread-38 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:39:11,622 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:39:11,626 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:39:11,626 INFO sqlalchemy.engine.base.Engine Thread-38 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:39:11,627 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:39:11,631 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:39:11,631 INFO sqlalchemy.engine.base.Engine Thread-38 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:39:11,632 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:39:11,632 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:39:11,633 INFO sqlalchemy.engine.base.Engine Thread-38 : ROLLBACK
2020-05-27 19:39:54,763 INFO sqlalchemy.engine.base.Engine Thread-40 : BEGIN (implicit)
2020-05-27 19:39:54,765 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:39:54,765 INFO sqlalchemy.engine.base.Engine Thread-40 : ()
2020-05-27 19:39:54,767 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:39:54,768 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:39:54,768 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:39:54,769 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:39:54,769 INFO sqlalchemy.engine.base.Engine Thread-40 : (100,)
2020-05-27 19:39:54,770 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:39:54,770 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:39:54,770 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:39:54,770 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:39:54,771 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:39:54,771 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:39:54,772 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:39:54,773 INFO sqlalchemy.engine.base.Engine Thread-40 : (1, 1)
2020-05-27 19:39:54,773 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:54,773 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:54,778 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:39:54,778 INFO sqlalchemy.engine.base.Engine Thread-40 : ('philip', 1, 1)
2020-05-27 19:39:54,778 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:54,779 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:54,781 INFO sqlalchemy.engine.base.Engine Thread-40 : ROLLBACK
2020-05-27 19:39:55,029 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-05-27 19:39:55,031 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-05-27 19:39:55,032 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:39:55,039 INFO sqlalchemy.engine.base.Engine Thread-51 : (1, 1)
2020-05-27 19:39:55,038 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:39:55,040 INFO sqlalchemy.engine.base.Engine Thread-50 : (1, 1)
2020-05-27 19:39:55,039 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-05-27 19:39:55,035 INFO sqlalchemy.engine.base.Engine Thread-52 : BEGIN (implicit)
2020-05-27 19:39:55,040 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:55,041 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:39:55,043 INFO sqlalchemy.engine.base.Engine Thread-53 : (1, 1)
2020-05-27 19:39:55,042 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:39:55,043 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:55,041 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:55,043 INFO sqlalchemy.engine.base.Engine Thread-52 : (1, 1)
2020-05-27 19:39:55,044 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:55,046 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:55,047 INFO sqlalchemy.engine.base.Engine Thread-53 : ROLLBACK
2020-05-27 19:39:55,046 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:55,045 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-05-27 19:39:55,045 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:55,047 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:55,049 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-05-27 19:39:55,051 INFO sqlalchemy.engine.base.Engine Thread-52 : ROLLBACK
2020-05-27 19:39:55,064 INFO sqlalchemy.engine.base.Engine Thread-54 : BEGIN (implicit)
2020-05-27 19:39:55,065 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:39:55,065 INFO sqlalchemy.engine.base.Engine Thread-54 : (1, 1)
2020-05-27 19:39:55,072 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:39:55,078 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:39:55,084 INFO sqlalchemy.engine.base.Engine Thread-54 : ROLLBACK
2020-05-27 19:39:55,086 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-05-27 19:39:55,087 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:39:55,087 INFO sqlalchemy.engine.base.Engine Thread-55 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:39:55,088 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:39:55,088 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:39:55,088 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:39:55,089 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:39:55,092 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:39:55,093 INFO sqlalchemy.engine.base.Engine Thread-55 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:39:55,094 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:39:55,098 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:39:55,098 INFO sqlalchemy.engine.base.Engine Thread-55 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:39:55,099 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:39:55,103 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:39:55,103 INFO sqlalchemy.engine.base.Engine Thread-55 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:39:55,104 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:39:55,104 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:39:55,105 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-05-27 19:39:55,132 INFO sqlalchemy.engine.base.Engine Thread-56 : BEGIN (implicit)
2020-05-27 19:39:55,135 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:39:55,135 INFO sqlalchemy.engine.base.Engine Thread-56 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:39:55,137 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:39:55,137 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:39:55,137 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:39:55,138 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:39:55,142 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:39:55,142 INFO sqlalchemy.engine.base.Engine Thread-56 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:39:55,143 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:39:55,147 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:39:55,147 INFO sqlalchemy.engine.base.Engine Thread-56 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:39:55,148 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:39:55,152 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:39:55,152 INFO sqlalchemy.engine.base.Engine Thread-56 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:39:55,153 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:39:55,153 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:39:55,154 INFO sqlalchemy.engine.base.Engine Thread-56 : ROLLBACK
2020-05-27 19:45:42,932 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-05-27 19:45:42,935 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:45:42,935 INFO sqlalchemy.engine.base.Engine Thread-58 : ()
2020-05-27 19:45:42,938 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:45:42,938 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:45:42,938 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:45:42,940 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:45:42,940 INFO sqlalchemy.engine.base.Engine Thread-58 : (100,)
2020-05-27 19:45:42,941 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:45:42,941 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:45:42,942 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:45:42,942 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:45:42,942 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:45:42,942 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:45:42,944 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:45:42,944 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-05-27 19:45:42,945 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:42,946 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:42,951 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:45:42,951 INFO sqlalchemy.engine.base.Engine Thread-58 : ('philip', 1, 1)
2020-05-27 19:45:42,952 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:42,952 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:42,954 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-05-27 19:45:43,252 INFO sqlalchemy.engine.base.Engine Thread-68 : BEGIN (implicit)
2020-05-27 19:45:43,253 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:45:43,253 INFO sqlalchemy.engine.base.Engine Thread-68 : (1, 1)
2020-05-27 19:45:43,254 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:43,254 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:43,257 INFO sqlalchemy.engine.base.Engine Thread-68 : ROLLBACK
2020-05-27 19:45:43,259 INFO sqlalchemy.engine.base.Engine Thread-69 : BEGIN (implicit)
2020-05-27 19:45:43,260 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:45:43,260 INFO sqlalchemy.engine.base.Engine Thread-69 : (1, 1)
2020-05-27 19:45:43,262 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-05-27 19:45:43,263 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:45:43,263 INFO sqlalchemy.engine.base.Engine Thread-70 : (1, 1)
2020-05-27 19:45:43,265 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:43,269 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:43,269 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:43,268 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-05-27 19:45:43,270 INFO sqlalchemy.engine.base.Engine Thread-69 : ROLLBACK
2020-05-27 19:45:43,271 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:43,272 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:45:43,273 INFO sqlalchemy.engine.base.Engine Thread-71 : (1, 1)
2020-05-27 19:45:43,274 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-05-27 19:45:43,274 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:43,274 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:43,276 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-05-27 19:45:43,289 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-05-27 19:45:43,290 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:45:43,290 INFO sqlalchemy.engine.base.Engine Thread-72 : (1, 1)
2020-05-27 19:45:43,291 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:43,291 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:43,292 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-05-27 19:45:43,313 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-05-27 19:45:43,315 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:45:43,315 INFO sqlalchemy.engine.base.Engine Thread-73 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:45:43,316 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:45:43,316 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:45:43,316 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:45:43,316 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:45:43,320 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:45:43,320 INFO sqlalchemy.engine.base.Engine Thread-73 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:45:43,321 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:45:43,326 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:45:43,326 INFO sqlalchemy.engine.base.Engine Thread-73 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:45:43,327 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:45:43,331 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:45:43,331 INFO sqlalchemy.engine.base.Engine Thread-73 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:45:43,332 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:45:43,333 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:45:43,334 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-05-27 19:45:43,362 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-05-27 19:45:43,364 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:45:43,364 INFO sqlalchemy.engine.base.Engine Thread-74 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:45:43,366 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:45:43,366 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:45:43,366 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:45:43,366 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:45:43,370 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:45:43,370 INFO sqlalchemy.engine.base.Engine Thread-74 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:45:43,371 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:45:43,375 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:45:43,375 INFO sqlalchemy.engine.base.Engine Thread-74 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:45:43,376 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:45:43,380 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:45:43,380 INFO sqlalchemy.engine.base.Engine Thread-74 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:45:43,381 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:45:43,381 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:45:43,382 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-05-27 19:45:59,511 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-05-27 19:45:59,513 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:45:59,513 INFO sqlalchemy.engine.base.Engine Thread-76 : ()
2020-05-27 19:45:59,514 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:45:59,515 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:45:59,515 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:45:59,516 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:45:59,516 INFO sqlalchemy.engine.base.Engine Thread-76 : (100,)
2020-05-27 19:45:59,517 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:45:59,517 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:45:59,517 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:45:59,517 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:45:59,518 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:45:59,518 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:45:59,520 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:45:59,520 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-05-27 19:45:59,521 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:59,521 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:59,525 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:45:59,525 INFO sqlalchemy.engine.base.Engine Thread-76 : ('philip', 1, 1)
2020-05-27 19:45:59,526 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:59,526 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:59,528 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-05-27 19:45:59,810 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-05-27 19:45:59,811 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:45:59,812 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-05-27 19:45:59,815 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-05-27 19:45:59,815 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:59,820 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:59,818 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:45:59,822 INFO sqlalchemy.engine.base.Engine Thread-86 : (1, 1)
2020-05-27 19:45:59,817 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-05-27 19:45:59,823 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:45:59,823 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-05-27 19:45:59,821 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-05-27 19:45:59,823 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:59,824 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:59,824 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:59,820 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-05-27 19:45:59,826 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-05-27 19:45:59,826 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:59,827 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:45:59,829 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-05-27 19:45:59,829 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-05-27 19:45:59,831 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:59,831 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:59,832 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-05-27 19:45:59,843 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-05-27 19:45:59,844 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:45:59,844 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-05-27 19:45:59,845 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:45:59,845 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:45:59,846 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-05-27 19:45:59,865 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-05-27 19:45:59,867 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:45:59,867 INFO sqlalchemy.engine.base.Engine Thread-91 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:45:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:45:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:45:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:45:59,868 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:45:59,872 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:45:59,872 INFO sqlalchemy.engine.base.Engine Thread-91 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:45:59,872 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:45:59,876 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:45:59,876 INFO sqlalchemy.engine.base.Engine Thread-91 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:45:59,877 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:45:59,881 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:45:59,881 INFO sqlalchemy.engine.base.Engine Thread-91 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:45:59,882 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:45:59,882 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:45:59,883 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-05-27 19:45:59,905 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-05-27 19:45:59,908 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:45:59,908 INFO sqlalchemy.engine.base.Engine Thread-92 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:45:59,910 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:45:59,910 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:45:59,910 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:45:59,911 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:45:59,915 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:45:59,915 INFO sqlalchemy.engine.base.Engine Thread-92 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:45:59,916 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:45:59,920 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:45:59,920 INFO sqlalchemy.engine.base.Engine Thread-92 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:45:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:45:59,925 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:45:59,925 INFO sqlalchemy.engine.base.Engine Thread-92 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:45:59,926 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:45:59,926 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:45:59,927 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-05-27 19:46:32,351 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-05-27 19:46:32,354 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:46:32,354 INFO sqlalchemy.engine.base.Engine Thread-94 : ()
2020-05-27 19:46:32,356 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:46:32,356 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:46:32,356 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:46:32,358 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:46:32,358 INFO sqlalchemy.engine.base.Engine Thread-94 : (100,)
2020-05-27 19:46:32,358 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:46:32,359 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:46:32,359 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:46:32,359 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:46:32,359 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:46:32,359 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:46:32,361 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:46:32,361 INFO sqlalchemy.engine.base.Engine Thread-94 : (1, 1)
2020-05-27 19:46:32,362 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:32,362 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:32,367 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:46:32,367 INFO sqlalchemy.engine.base.Engine Thread-94 : ('philip', 1, 1)
2020-05-27 19:46:32,367 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:32,368 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:32,369 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-05-27 19:46:32,621 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-05-27 19:46:32,624 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-05-27 19:46:32,625 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:46:32,629 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-05-27 19:46:32,629 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:46:32,630 INFO sqlalchemy.engine.base.Engine Thread-105 : (1, 1)
2020-05-27 19:46:32,628 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-05-27 19:46:32,630 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:32,634 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:32,634 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:46:32,633 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-05-27 19:46:32,634 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-05-27 19:46:32,635 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:32,636 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-05-27 19:46:32,637 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:46:32,637 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:32,638 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:32,640 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:32,640 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-05-27 19:46:32,638 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-05-27 19:46:32,641 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-05-27 19:46:32,643 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:32,644 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:32,645 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-05-27 19:46:32,651 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-05-27 19:46:32,652 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:46:32,652 INFO sqlalchemy.engine.base.Engine Thread-108 : (1, 1)
2020-05-27 19:46:32,653 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:32,653 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:32,655 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-05-27 19:46:32,679 INFO sqlalchemy.engine.base.Engine Thread-109 : BEGIN (implicit)
2020-05-27 19:46:32,681 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:46:32,681 INFO sqlalchemy.engine.base.Engine Thread-109 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:46:32,682 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:46:32,682 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:46:32,682 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:46:32,683 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:46:32,687 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:46:32,687 INFO sqlalchemy.engine.base.Engine Thread-109 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:46:32,688 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:46:32,692 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:46:32,693 INFO sqlalchemy.engine.base.Engine Thread-109 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:46:32,693 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:46:32,697 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:46:32,697 INFO sqlalchemy.engine.base.Engine Thread-109 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:46:32,698 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:46:32,698 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:46:32,699 INFO sqlalchemy.engine.base.Engine Thread-109 : ROLLBACK
2020-05-27 19:46:32,729 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-05-27 19:46:32,730 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:46:32,730 INFO sqlalchemy.engine.base.Engine Thread-110 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:46:32,733 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:46:32,733 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:46:32,733 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:46:32,733 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:46:32,737 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:46:32,737 INFO sqlalchemy.engine.base.Engine Thread-110 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:46:32,738 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:46:32,742 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:46:32,743 INFO sqlalchemy.engine.base.Engine Thread-110 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:46:32,745 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:46:32,749 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:46:32,749 INFO sqlalchemy.engine.base.Engine Thread-110 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:46:32,750 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:46:32,750 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:46:32,751 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-05-27 19:46:58,238 INFO sqlalchemy.engine.base.Engine Thread-112 : BEGIN (implicit)
2020-05-27 19:46:58,240 INFO sqlalchemy.engine.base.Engine Thread-112 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:46:58,240 INFO sqlalchemy.engine.base.Engine Thread-112 : ()
2020-05-27 19:46:58,241 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:46:58,242 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:46:58,242 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:46:58,244 INFO sqlalchemy.engine.base.Engine Thread-112 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:46:58,244 INFO sqlalchemy.engine.base.Engine Thread-112 : (100,)
2020-05-27 19:46:58,245 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:46:58,245 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:46:58,245 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:46:58,245 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:46:58,245 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:46:58,245 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:46:58,247 INFO sqlalchemy.engine.base.Engine Thread-112 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:46:58,248 INFO sqlalchemy.engine.base.Engine Thread-112 : (1, 1)
2020-05-27 19:46:58,248 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:58,248 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:58,253 INFO sqlalchemy.engine.base.Engine Thread-112 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:46:58,253 INFO sqlalchemy.engine.base.Engine Thread-112 : ('philip', 1, 1)
2020-05-27 19:46:58,254 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:58,254 DEBUG sqlalchemy.engine.base.Engine Thread-112 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:58,256 INFO sqlalchemy.engine.base.Engine Thread-112 : ROLLBACK
2020-05-27 19:46:58,497 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-05-27 19:46:58,500 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-05-27 19:46:58,501 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:46:58,503 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:46:58,503 INFO sqlalchemy.engine.base.Engine Thread-122 : (1, 1)
2020-05-27 19:46:58,506 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-05-27 19:46:58,511 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:46:58,511 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-05-27 19:46:58,510 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:58,511 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:58,513 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-05-27 19:46:58,506 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-05-27 19:46:58,509 INFO sqlalchemy.engine.base.Engine Thread-125 : BEGIN (implicit)
2020-05-27 19:46:58,515 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:46:58,514 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:58,515 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:58,515 INFO sqlalchemy.engine.base.Engine Thread-125 : (1, 1)
2020-05-27 19:46:58,516 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-05-27 19:46:58,513 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:58,517 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:58,518 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:58,519 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:58,520 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-05-27 19:46:58,521 INFO sqlalchemy.engine.base.Engine Thread-125 : ROLLBACK
2020-05-27 19:46:58,536 INFO sqlalchemy.engine.base.Engine Thread-126 : BEGIN (implicit)
2020-05-27 19:46:58,537 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:46:58,538 INFO sqlalchemy.engine.base.Engine Thread-126 : (1, 1)
2020-05-27 19:46:58,538 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:46:58,538 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:46:58,539 INFO sqlalchemy.engine.base.Engine Thread-126 : ROLLBACK
2020-05-27 19:46:58,556 INFO sqlalchemy.engine.base.Engine Thread-127 : BEGIN (implicit)
2020-05-27 19:46:58,557 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:46:58,557 INFO sqlalchemy.engine.base.Engine Thread-127 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:46:58,558 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:46:58,558 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:46:58,558 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:46:58,558 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:46:58,562 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:46:58,562 INFO sqlalchemy.engine.base.Engine Thread-127 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:46:58,563 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:46:58,567 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:46:58,567 INFO sqlalchemy.engine.base.Engine Thread-127 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:46:58,568 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:46:58,572 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:46:58,572 INFO sqlalchemy.engine.base.Engine Thread-127 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:46:58,573 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:46:58,573 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:46:58,574 INFO sqlalchemy.engine.base.Engine Thread-127 : ROLLBACK
2020-05-27 19:46:58,603 INFO sqlalchemy.engine.base.Engine Thread-128 : BEGIN (implicit)
2020-05-27 19:46:58,604 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:46:58,604 INFO sqlalchemy.engine.base.Engine Thread-128 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:46:58,607 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:46:58,607 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:46:58,607 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:46:58,607 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:46:58,611 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:46:58,611 INFO sqlalchemy.engine.base.Engine Thread-128 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:46:58,611 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:46:58,619 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:46:58,619 INFO sqlalchemy.engine.base.Engine Thread-128 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:46:58,620 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:46:58,624 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:46:58,625 INFO sqlalchemy.engine.base.Engine Thread-128 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:46:58,625 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:46:58,626 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:46:58,627 INFO sqlalchemy.engine.base.Engine Thread-128 : ROLLBACK
2020-05-27 19:47:28,106 INFO sqlalchemy.engine.base.Engine Thread-130 : BEGIN (implicit)
2020-05-27 19:47:28,108 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:47:28,108 INFO sqlalchemy.engine.base.Engine Thread-130 : ()
2020-05-27 19:47:28,109 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:47:28,110 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:47:28,110 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:47:28,112 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:47:28,112 INFO sqlalchemy.engine.base.Engine Thread-130 : (100,)
2020-05-27 19:47:28,112 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:47:28,113 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:47:28,113 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:47:28,113 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:47:28,113 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:47:28,113 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:47:28,115 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:47:28,115 INFO sqlalchemy.engine.base.Engine Thread-130 : (1, 1)
2020-05-27 19:47:28,115 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:47:28,115 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:47:28,119 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:47:28,120 INFO sqlalchemy.engine.base.Engine Thread-130 : ('philip', 1, 1)
2020-05-27 19:47:28,120 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:47:28,121 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:47:28,122 INFO sqlalchemy.engine.base.Engine Thread-130 : ROLLBACK
2020-05-27 19:47:28,408 INFO sqlalchemy.engine.base.Engine Thread-140 : BEGIN (implicit)
2020-05-27 19:47:28,411 INFO sqlalchemy.engine.base.Engine Thread-141 : BEGIN (implicit)
2020-05-27 19:47:28,413 INFO sqlalchemy.engine.base.Engine Thread-142 : BEGIN (implicit)
2020-05-27 19:47:28,414 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:47:28,416 INFO sqlalchemy.engine.base.Engine Thread-140 : (1, 1)
2020-05-27 19:47:28,416 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:47:28,415 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:47:28,419 INFO sqlalchemy.engine.base.Engine Thread-141 : (1, 1)
2020-05-27 19:47:28,419 INFO sqlalchemy.engine.base.Engine Thread-142 : (1, 1)
2020-05-27 19:47:28,420 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:47:28,421 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:47:28,421 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:47:28,421 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:47:28,423 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:47:28,422 INFO sqlalchemy.engine.base.Engine Thread-141 : ROLLBACK
2020-05-27 19:47:28,423 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:47:28,426 INFO sqlalchemy.engine.base.Engine Thread-142 : ROLLBACK
2020-05-27 19:47:28,419 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-05-27 19:47:28,424 INFO sqlalchemy.engine.base.Engine Thread-140 : ROLLBACK
2020-05-27 19:47:28,427 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:47:28,429 INFO sqlalchemy.engine.base.Engine Thread-143 : (1, 1)
2020-05-27 19:47:28,430 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:47:28,430 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:47:28,431 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-05-27 19:47:28,442 INFO sqlalchemy.engine.base.Engine Thread-144 : BEGIN (implicit)
2020-05-27 19:47:28,443 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:47:28,443 INFO sqlalchemy.engine.base.Engine Thread-144 : (1, 1)
2020-05-27 19:47:28,444 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:47:28,444 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:47:28,445 INFO sqlalchemy.engine.base.Engine Thread-144 : ROLLBACK
2020-05-27 19:47:28,468 INFO sqlalchemy.engine.base.Engine Thread-145 : BEGIN (implicit)
2020-05-27 19:47:28,470 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:47:28,470 INFO sqlalchemy.engine.base.Engine Thread-145 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:47:28,471 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:47:28,471 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:47:28,471 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:47:28,471 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:47:28,475 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:47:28,475 INFO sqlalchemy.engine.base.Engine Thread-145 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:47:28,476 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:47:28,481 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:47:28,481 INFO sqlalchemy.engine.base.Engine Thread-145 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:47:28,482 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:47:28,486 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:47:28,487 INFO sqlalchemy.engine.base.Engine Thread-145 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:47:28,487 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:47:28,488 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:47:28,488 INFO sqlalchemy.engine.base.Engine Thread-145 : ROLLBACK
2020-05-27 19:47:28,512 INFO sqlalchemy.engine.base.Engine Thread-146 : BEGIN (implicit)
2020-05-27 19:47:28,517 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:47:28,517 INFO sqlalchemy.engine.base.Engine Thread-146 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:47:28,518 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:47:28,518 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:47:28,519 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:47:28,519 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:47:28,523 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:47:28,523 INFO sqlalchemy.engine.base.Engine Thread-146 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:47:28,524 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:47:28,528 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:47:28,528 INFO sqlalchemy.engine.base.Engine Thread-146 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:47:28,529 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:47:28,533 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:47:28,533 INFO sqlalchemy.engine.base.Engine Thread-146 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:47:28,534 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:47:28,534 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:47:28,535 INFO sqlalchemy.engine.base.Engine Thread-146 : ROLLBACK
2020-05-27 19:48:02,554 INFO sqlalchemy.engine.base.Engine Thread-148 : BEGIN (implicit)
2020-05-27 19:48:02,556 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:48:02,556 INFO sqlalchemy.engine.base.Engine Thread-148 : ()
2020-05-27 19:48:02,558 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:48:02,558 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:48:02,558 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:48:02,560 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:48:02,560 INFO sqlalchemy.engine.base.Engine Thread-148 : (100,)
2020-05-27 19:48:02,561 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:48:02,561 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:48:02,561 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:48:02,561 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:48:02,561 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:48:02,561 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:48:02,563 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:48:02,564 INFO sqlalchemy.engine.base.Engine Thread-148 : (1, 1)
2020-05-27 19:48:02,564 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:48:02,564 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:48:02,569 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:48:02,569 INFO sqlalchemy.engine.base.Engine Thread-148 : ('philip', 1, 1)
2020-05-27 19:48:02,570 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:48:02,570 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:48:02,572 INFO sqlalchemy.engine.base.Engine Thread-148 : ROLLBACK
2020-05-27 19:48:02,825 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-05-27 19:48:02,826 INFO sqlalchemy.engine.base.Engine Thread-158 : BEGIN (implicit)
2020-05-27 19:48:02,828 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:48:02,835 INFO sqlalchemy.engine.base.Engine Thread-159 : (1, 1)
2020-05-27 19:48:02,831 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-05-27 19:48:02,835 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:48:02,836 INFO sqlalchemy.engine.base.Engine Thread-158 : (1, 1)
2020-05-27 19:48:02,836 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:48:02,837 INFO sqlalchemy.engine.base.Engine Thread-160 : (1, 1)
2020-05-27 19:48:02,834 INFO sqlalchemy.engine.base.Engine Thread-161 : BEGIN (implicit)
2020-05-27 19:48:02,837 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:48:02,838 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:48:02,839 INFO sqlalchemy.engine.base.Engine Thread-161 : (1, 1)
2020-05-27 19:48:02,839 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:48:02,839 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:48:02,837 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:48:02,839 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:48:02,840 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:48:02,841 INFO sqlalchemy.engine.base.Engine Thread-158 : ROLLBACK
2020-05-27 19:48:02,842 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-05-27 19:48:02,843 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:48:02,844 INFO sqlalchemy.engine.base.Engine Thread-159 : ROLLBACK
2020-05-27 19:48:02,845 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:48:02,847 INFO sqlalchemy.engine.base.Engine Thread-161 : ROLLBACK
2020-05-27 19:48:02,857 INFO sqlalchemy.engine.base.Engine Thread-162 : BEGIN (implicit)
2020-05-27 19:48:02,858 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:48:02,858 INFO sqlalchemy.engine.base.Engine Thread-162 : (1, 1)
2020-05-27 19:48:02,859 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:48:02,859 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:48:02,860 INFO sqlalchemy.engine.base.Engine Thread-162 : ROLLBACK
2020-05-27 19:48:02,880 INFO sqlalchemy.engine.base.Engine Thread-163 : BEGIN (implicit)
2020-05-27 19:48:02,881 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:48:02,881 INFO sqlalchemy.engine.base.Engine Thread-163 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:48:02,882 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:48:02,883 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:48:02,883 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:48:02,883 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:48:02,887 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:48:02,887 INFO sqlalchemy.engine.base.Engine Thread-163 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:48:02,888 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:48:02,892 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:48:02,892 INFO sqlalchemy.engine.base.Engine Thread-163 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:48:02,893 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:48:02,896 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:48:02,896 INFO sqlalchemy.engine.base.Engine Thread-163 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:48:02,897 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:48:02,897 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:48:02,898 INFO sqlalchemy.engine.base.Engine Thread-163 : ROLLBACK
2020-05-27 19:48:02,924 INFO sqlalchemy.engine.base.Engine Thread-164 : BEGIN (implicit)
2020-05-27 19:48:02,926 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:48:02,926 INFO sqlalchemy.engine.base.Engine Thread-164 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:48:02,928 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:48:02,929 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'locked_event', 'Date Event')
2020-05-27 19:48:02,929 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:48:02,929 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:48:02,933 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:48:02,933 INFO sqlalchemy.engine.base.Engine Thread-164 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:48:02,935 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:48:02,939 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:48:02,939 INFO sqlalchemy.engine.base.Engine Thread-164 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:48:02,940 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:48:02,944 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:48:02,944 INFO sqlalchemy.engine.base.Engine Thread-164 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:48:02,945 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:48:02,946 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:48:02,946 INFO sqlalchemy.engine.base.Engine Thread-164 : ROLLBACK
2020-05-27 19:50:08,045 INFO sqlalchemy.engine.base.Engine Thread-166 : BEGIN (implicit)
2020-05-27 19:50:08,046 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:08,046 INFO sqlalchemy.engine.base.Engine Thread-166 : (1, 1)
2020-05-27 19:50:08,047 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:08,047 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:08,050 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:08,050 INFO sqlalchemy.engine.base.Engine Thread-166 : ('philip', 1, 1)
2020-05-27 19:50:08,050 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:08,051 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:08,053 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:50:08,053 INFO sqlalchemy.engine.base.Engine Thread-166 : (0,)
2020-05-27 19:50:08,054 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:08,054 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:50:08,054 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:50:08,055 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:50:08,055 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:50:08,055 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:50:08,055 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:50:08,055 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:50:08,055 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:50:08,055 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:50:08,055 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:50:08,055 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:50:08,055 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:50:08,055 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:50:08,055 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:50:08,056 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:50:08,056 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:50:08,056 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:50:08,056 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:50:08,056 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:50:08,056 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:50:08,056 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:50:08,056 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:50:08,056 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:50:08,058 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-05-27 19:50:08,058 INFO sqlalchemy.engine.base.Engine Thread-166 : (0, 1)
2020-05-27 19:50:08,059 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:08,059 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:50:08,060 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:50:08,060 INFO sqlalchemy.engine.base.Engine Thread-166 : (66,)
2020-05-27 19:50:08,061 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:08,061 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:50:08,061 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:50:08,081 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:08,081 INFO sqlalchemy.engine.base.Engine Thread-166 : ('philip', 1, 1)
2020-05-27 19:50:08,082 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:08,082 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:08,085 INFO sqlalchemy.engine.base.Engine Thread-166 : ROLLBACK
2020-05-27 19:50:08,347 INFO sqlalchemy.engine.base.Engine Thread-176 : BEGIN (implicit)
2020-05-27 19:50:08,348 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:08,355 INFO sqlalchemy.engine.base.Engine Thread-176 : (1, 1)
2020-05-27 19:50:08,350 INFO sqlalchemy.engine.base.Engine Thread-178 : BEGIN (implicit)
2020-05-27 19:50:08,354 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-05-27 19:50:08,353 INFO sqlalchemy.engine.base.Engine Thread-179 : BEGIN (implicit)
2020-05-27 19:50:08,356 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:08,358 INFO sqlalchemy.engine.base.Engine Thread-178 : (1, 1)
2020-05-27 19:50:08,358 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:08,359 INFO sqlalchemy.engine.base.Engine Thread-179 : (1, 1)
2020-05-27 19:50:08,357 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:08,359 INFO sqlalchemy.engine.base.Engine Thread-177 : (1, 1)
2020-05-27 19:50:08,359 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:08,358 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:08,360 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:08,360 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:08,360 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:08,360 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:08,361 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:08,364 INFO sqlalchemy.engine.base.Engine Thread-179 : ROLLBACK
2020-05-27 19:50:08,362 INFO sqlalchemy.engine.base.Engine Thread-178 : ROLLBACK
2020-05-27 19:50:08,363 INFO sqlalchemy.engine.base.Engine Thread-176 : ROLLBACK
2020-05-27 19:50:08,362 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:08,366 INFO sqlalchemy.engine.base.Engine Thread-177 : ROLLBACK
2020-05-27 19:50:08,375 INFO sqlalchemy.engine.base.Engine Thread-180 : BEGIN (implicit)
2020-05-27 19:50:08,376 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:08,376 INFO sqlalchemy.engine.base.Engine Thread-180 : (1, 1)
2020-05-27 19:50:08,377 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:08,377 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:08,378 INFO sqlalchemy.engine.base.Engine Thread-180 : ROLLBACK
2020-05-27 19:50:10,843 INFO sqlalchemy.engine.base.Engine Thread-181 : BEGIN (implicit)
2020-05-27 19:50:10,844 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:10,844 INFO sqlalchemy.engine.base.Engine Thread-181 : (1, 1)
2020-05-27 19:50:10,845 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:10,845 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:10,847 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:10,848 INFO sqlalchemy.engine.base.Engine Thread-181 : ('philip', 1, 1)
2020-05-27 19:50:10,848 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:10,849 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:10,851 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:50:10,852 INFO sqlalchemy.engine.base.Engine Thread-181 : (0,)
2020-05-27 19:50:10,852 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:10,852 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:50:10,853 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:50:10,853 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:50:10,853 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:50:10,853 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:50:10,853 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:50:10,853 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:50:10,853 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:50:10,853 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:50:10,853 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:50:10,853 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:50:10,853 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:50:10,853 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:50:10,853 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:50:10,854 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:50:10,854 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:50:10,854 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:50:10,854 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:50:10,854 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:50:10,854 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:50:10,854 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:50:10,854 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:50:10,854 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:50:10,856 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:50:10,856 INFO sqlalchemy.engine.base.Engine Thread-181 : ('127',)
2020-05-27 19:50:10,857 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:10,857 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:50:10,857 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:50:10,857 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:50:10,857 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:50:10,861 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:10,861 INFO sqlalchemy.engine.base.Engine Thread-181 : ('philip', 1, 1)
2020-05-27 19:50:10,862 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:10,862 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:10,866 INFO sqlalchemy.engine.base.Engine Thread-181 : ROLLBACK
2020-05-27 19:50:11,120 INFO sqlalchemy.engine.base.Engine Thread-191 : BEGIN (implicit)
2020-05-27 19:50:11,121 INFO sqlalchemy.engine.base.Engine Thread-192 : BEGIN (implicit)
2020-05-27 19:50:11,122 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:11,129 INFO sqlalchemy.engine.base.Engine Thread-191 : (1, 1)
2020-05-27 19:50:11,125 INFO sqlalchemy.engine.base.Engine Thread-193 : BEGIN (implicit)
2020-05-27 19:50:11,129 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:11,128 INFO sqlalchemy.engine.base.Engine Thread-194 : BEGIN (implicit)
2020-05-27 19:50:11,130 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:11,131 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:11,131 INFO sqlalchemy.engine.base.Engine Thread-192 : (1, 1)
2020-05-27 19:50:11,132 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:11,132 INFO sqlalchemy.engine.base.Engine Thread-193 : (1, 1)
2020-05-27 19:50:11,132 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:11,132 INFO sqlalchemy.engine.base.Engine Thread-194 : (1, 1)
2020-05-27 19:50:11,135 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:11,134 INFO sqlalchemy.engine.base.Engine Thread-191 : ROLLBACK
2020-05-27 19:50:11,135 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:11,133 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:11,137 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:11,137 INFO sqlalchemy.engine.base.Engine Thread-193 : ROLLBACK
2020-05-27 19:50:11,138 INFO sqlalchemy.engine.base.Engine Thread-192 : ROLLBACK
2020-05-27 19:50:11,135 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:11,139 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:11,140 INFO sqlalchemy.engine.base.Engine Thread-194 : ROLLBACK
2020-05-27 19:50:11,156 INFO sqlalchemy.engine.base.Engine Thread-195 : BEGIN (implicit)
2020-05-27 19:50:11,157 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:11,157 INFO sqlalchemy.engine.base.Engine Thread-195 : (1, 1)
2020-05-27 19:50:11,157 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:11,158 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:11,159 INFO sqlalchemy.engine.base.Engine Thread-195 : ROLLBACK
2020-05-27 19:50:12,692 INFO sqlalchemy.engine.base.Engine Thread-196 : BEGIN (implicit)
2020-05-27 19:50:12,693 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:12,693 INFO sqlalchemy.engine.base.Engine Thread-196 : (1, 1)
2020-05-27 19:50:12,694 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:12,694 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:12,696 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:12,696 INFO sqlalchemy.engine.base.Engine Thread-196 : ('philip', 1, 1)
2020-05-27 19:50:12,697 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:12,697 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:12,698 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:50:12,698 INFO sqlalchemy.engine.base.Engine Thread-196 : ('130', 1)
2020-05-27 19:50:12,699 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:12,699 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:50:12,701 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:50:12,701 INFO sqlalchemy.engine.base.Engine Thread-196 : (0,)
2020-05-27 19:50:12,701 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:12,702 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:50:12,702 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:50:12,702 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:50:12,702 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:50:12,702 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:50:12,702 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:50:12,702 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:50:12,702 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:50:12,702 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:50:12,702 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:50:12,702 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:50:12,703 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:50:12,703 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:50:12,703 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:50:12,703 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:50:12,703 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:50:12,703 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:50:12,703 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:50:12,703 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:50:12,703 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:50:12,703 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:50:12,703 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:50:12,703 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:50:12,706 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:50:12,706 INFO sqlalchemy.engine.base.Engine Thread-196 : (0,)
2020-05-27 19:50:12,707 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:12,707 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:50:12,707 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:50:12,707 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:50:12,707 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:50:12,707 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:50:12,708 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:50:12,709 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:50:12,709 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:50:12,709 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:50:12,709 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:50:12,709 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:50:12,709 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:50:12,709 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:50:12,709 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:50:12,709 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:50:12,709 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:50:12,709 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:50:12,709 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:50:12,710 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:50:12,710 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:50:12,710 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:50:12,710 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:50:12,710 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:50:12,710 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:50:12,710 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:50:12,710 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:50:12,710 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:50:12,710 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:50:12,710 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:50:12,710 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:50:12,710 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:50:12,711 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:50:12,711 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:50:12,711 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:50:12,711 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:50:12,711 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:50:12,711 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:50:12,711 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:50:12,711 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:50:12,711 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:50:12,711 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:50:12,711 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:50:12,711 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:50:12,711 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:50:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:50:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:50:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:50:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:50:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:50:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:50:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:50:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:50:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:50:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:50:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:50:12,712 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:50:12,713 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:50:12,713 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:50:12,713 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:50:12,713 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:50:12,713 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:50:12,713 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:50:12,713 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:50:12,713 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:50:12,713 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:50:12,713 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:50:12,713 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:50:12,745 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:12,745 INFO sqlalchemy.engine.base.Engine Thread-196 : ('philip', 1, 1)
2020-05-27 19:50:12,746 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:12,746 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:12,750 INFO sqlalchemy.engine.base.Engine Thread-196 : ROLLBACK
2020-05-27 19:50:12,991 INFO sqlalchemy.engine.base.Engine Thread-207 : BEGIN (implicit)
2020-05-27 19:50:12,992 INFO sqlalchemy.engine.base.Engine Thread-207 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:12,992 INFO sqlalchemy.engine.base.Engine Thread-207 : (1, 1)
2020-05-27 19:50:12,993 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:12,993 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:12,995 INFO sqlalchemy.engine.base.Engine Thread-207 : ROLLBACK
2020-05-27 19:50:12,998 INFO sqlalchemy.engine.base.Engine Thread-206 : BEGIN (implicit)
2020-05-27 19:50:13,001 INFO sqlalchemy.engine.base.Engine Thread-208 : BEGIN (implicit)
2020-05-27 19:50:13,002 INFO sqlalchemy.engine.base.Engine Thread-206 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:13,004 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:13,008 INFO sqlalchemy.engine.base.Engine Thread-209 : BEGIN (implicit)
2020-05-27 19:50:13,008 INFO sqlalchemy.engine.base.Engine Thread-206 : (1, 1)
2020-05-27 19:50:13,008 INFO sqlalchemy.engine.base.Engine Thread-208 : (1, 1)
2020-05-27 19:50:13,009 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:13,010 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:13,010 INFO sqlalchemy.engine.base.Engine Thread-209 : (1, 1)
2020-05-27 19:50:13,010 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:13,011 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:13,011 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:13,012 INFO sqlalchemy.engine.base.Engine Thread-206 : ROLLBACK
2020-05-27 19:50:13,013 INFO sqlalchemy.engine.base.Engine Thread-208 : ROLLBACK
2020-05-27 19:50:13,014 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:13,015 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:13,016 INFO sqlalchemy.engine.base.Engine Thread-209 : ROLLBACK
2020-05-27 19:50:13,023 INFO sqlalchemy.engine.base.Engine Thread-210 : BEGIN (implicit)
2020-05-27 19:50:13,024 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:13,024 INFO sqlalchemy.engine.base.Engine Thread-210 : (1, 1)
2020-05-27 19:50:13,024 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:13,025 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:13,026 INFO sqlalchemy.engine.base.Engine Thread-210 : ROLLBACK
2020-05-27 19:50:22,001 INFO sqlalchemy.engine.base.Engine Thread-211 : BEGIN (implicit)
2020-05-27 19:50:22,002 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:22,002 INFO sqlalchemy.engine.base.Engine Thread-211 : (1, 1)
2020-05-27 19:50:22,003 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:22,003 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:22,006 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:22,006 INFO sqlalchemy.engine.base.Engine Thread-211 : ('philip', 1, 1)
2020-05-27 19:50:22,006 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:22,006 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:22,008 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:50:22,008 INFO sqlalchemy.engine.base.Engine Thread-211 : ('130', 1)
2020-05-27 19:50:22,008 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:22,009 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:50:22,011 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:50:22,012 INFO sqlalchemy.engine.base.Engine Thread-211 : (0,)
2020-05-27 19:50:22,012 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:22,012 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:50:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:50:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:50:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:50:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:50:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:50:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:50:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:50:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:50:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:50:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:50:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:50:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:50:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:50:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:50:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:50:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:50:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:50:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:50:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:50:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:50:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:50:22,014 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:50:22,017 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:50:22,017 INFO sqlalchemy.engine.base.Engine Thread-211 : (0,)
2020-05-27 19:50:22,018 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:22,018 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:50:22,018 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:50:22,018 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:50:22,018 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:50:22,018 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:50:22,018 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:50:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:50:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:50:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:50:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:50:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:50:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:50:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:50:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:50:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:50:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:50:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:50:22,019 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:50:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:50:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:50:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:50:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:50:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:50:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:50:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:50:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:50:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:50:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:50:22,020 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:50:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:50:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:50:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:50:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:50:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:50:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:50:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:50:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:50:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:50:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:50:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:50:22,021 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:50:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:50:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:50:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:50:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:50:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:50:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:50:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:50:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:50:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:50:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:50:22,022 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:50:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:50:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:50:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:50:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:50:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:50:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:50:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:50:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:50:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:50:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (130, 'No Changes Allowed', 'locked_event', 127, 0, 0, 1)
2020-05-27 19:50:22,023 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:50:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:50:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:50:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:50:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:50:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:50:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:50:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:50:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:50:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:50:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:50:22,024 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:50:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:50:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:50:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:50:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:50:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:50:22,025 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:50:22,029 INFO sqlalchemy.engine.base.Engine Thread-211 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:50:22,029 INFO sqlalchemy.engine.base.Engine Thread-211 : ('130', '  background-color: #48D1CC;\r\n  color: #000000;', 130)
2020-05-27 19:50:22,030 INFO sqlalchemy.engine.base.Engine Thread-211 : COMMIT
2020-05-27 19:50:22,072 INFO sqlalchemy.engine.base.Engine Thread-212 : BEGIN (implicit)
2020-05-27 19:50:22,073 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:22,073 INFO sqlalchemy.engine.base.Engine Thread-212 : (1, 1)
2020-05-27 19:50:22,074 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:22,074 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:22,076 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:22,076 INFO sqlalchemy.engine.base.Engine Thread-212 : ('philip', 1, 1)
2020-05-27 19:50:22,077 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:22,077 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:22,079 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:50:22,079 INFO sqlalchemy.engine.base.Engine Thread-212 : (0,)
2020-05-27 19:50:22,079 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:22,080 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:50:22,080 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:50:22,080 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:50:22,080 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:50:22,080 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:50:22,080 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:50:22,080 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:50:22,080 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:50:22,080 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:50:22,080 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:50:22,081 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:50:22,081 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:50:22,081 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:50:22,081 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:50:22,081 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:50:22,081 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:50:22,081 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:50:22,081 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:50:22,081 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:50:22,081 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:50:22,081 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:50:22,082 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:50:22,082 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:50:22,083 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:50:22,084 INFO sqlalchemy.engine.base.Engine Thread-212 : (127, 1)
2020-05-27 19:50:22,084 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:22,084 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:50:22,085 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:50:22,085 INFO sqlalchemy.engine.base.Engine Thread-212 : (127,)
2020-05-27 19:50:22,086 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:22,086 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:50:22,086 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:50:22,086 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (130, 'No Changes Allowed', '  background-color: #48D1CC;\r\n  color: #000000;', 127, 0, 0, 1)
2020-05-27 19:50:22,086 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:50:22,090 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:22,090 INFO sqlalchemy.engine.base.Engine Thread-212 : ('philip', 1, 1)
2020-05-27 19:50:22,091 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:22,091 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:22,094 INFO sqlalchemy.engine.base.Engine Thread-212 : ROLLBACK
2020-05-27 19:50:22,359 INFO sqlalchemy.engine.base.Engine Thread-222 : BEGIN (implicit)
2020-05-27 19:50:22,362 INFO sqlalchemy.engine.base.Engine Thread-223 : BEGIN (implicit)
2020-05-27 19:50:22,363 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:22,367 INFO sqlalchemy.engine.base.Engine Thread-224 : BEGIN (implicit)
2020-05-27 19:50:22,368 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:22,371 INFO sqlalchemy.engine.base.Engine Thread-225 : BEGIN (implicit)
2020-05-27 19:50:22,371 INFO sqlalchemy.engine.base.Engine Thread-222 : (1, 1)
2020-05-27 19:50:22,372 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:22,374 INFO sqlalchemy.engine.base.Engine Thread-224 : (1, 1)
2020-05-27 19:50:22,372 INFO sqlalchemy.engine.base.Engine Thread-223 : (1, 1)
2020-05-27 19:50:22,374 INFO sqlalchemy.engine.base.Engine Thread-225 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:22,374 INFO sqlalchemy.engine.base.Engine Thread-225 : (1, 1)
2020-05-27 19:50:22,375 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:22,376 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:22,377 INFO sqlalchemy.engine.base.Engine Thread-224 : ROLLBACK
2020-05-27 19:50:22,377 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:22,378 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:22,379 INFO sqlalchemy.engine.base.Engine Thread-222 : ROLLBACK
2020-05-27 19:50:22,377 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:22,379 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:22,380 INFO sqlalchemy.engine.base.Engine Thread-223 : ROLLBACK
2020-05-27 19:50:22,383 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:22,383 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:22,384 INFO sqlalchemy.engine.base.Engine Thread-225 : ROLLBACK
2020-05-27 19:50:22,392 INFO sqlalchemy.engine.base.Engine Thread-226 : BEGIN (implicit)
2020-05-27 19:50:22,393 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:22,393 INFO sqlalchemy.engine.base.Engine Thread-226 : (1, 1)
2020-05-27 19:50:22,394 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:22,394 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:22,395 INFO sqlalchemy.engine.base.Engine Thread-226 : ROLLBACK
2020-05-27 19:50:33,153 INFO sqlalchemy.engine.base.Engine Thread-227 : BEGIN (implicit)
2020-05-27 19:50:33,155 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:50:33,155 INFO sqlalchemy.engine.base.Engine Thread-227 : ('Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:50:33,156 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:50:33,157 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:50:33,157 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:50:33,157 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', '  background-color: #48D1CC;\r\n  color: #000000;', 'Date Event')
2020-05-27 19:50:33,157 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:50:33,157 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:50:33,157 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', '  background-color: #48D1CC;\r\n  color: #000000;', 'Date Event')
2020-05-27 19:50:33,157 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:50:33,157 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:50:33,157 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:50:33,157 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:50:33,161 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:50:33,161 INFO sqlalchemy.engine.base.Engine Thread-227 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 19:50:33,162 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:50:33,166 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:50:33,166 INFO sqlalchemy.engine.base.Engine Thread-227 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:50:33,167 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:50:33,168 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:33,168 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:33,168 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:33,168 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:33,168 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:33,168 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:33,168 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:33,173 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:50:33,173 INFO sqlalchemy.engine.base.Engine Thread-227 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:50:33,174 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:50:33,175 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:50:33,175 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:50:33,175 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:50:33,175 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:50:33,175 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:50:33,175 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:50:33,177 INFO sqlalchemy.engine.base.Engine Thread-227 : ROLLBACK
2020-05-27 19:50:33,255 INFO sqlalchemy.engine.base.Engine Thread-228 : BEGIN (implicit)
2020-05-27 19:50:33,256 INFO sqlalchemy.engine.base.Engine Thread-228 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:33,256 INFO sqlalchemy.engine.base.Engine Thread-228 : (1, 1)
2020-05-27 19:50:33,256 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:33,257 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:33,258 INFO sqlalchemy.engine.base.Engine Thread-228 : ROLLBACK
2020-05-27 19:50:39,597 INFO sqlalchemy.engine.base.Engine Thread-229 : BEGIN (implicit)
2020-05-27 19:50:39,598 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:39,598 INFO sqlalchemy.engine.base.Engine Thread-229 : (1, 1)
2020-05-27 19:50:39,599 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:39,599 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:39,602 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:39,602 INFO sqlalchemy.engine.base.Engine Thread-229 : ('philip', 1, 1)
2020-05-27 19:50:39,603 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:39,603 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:39,604 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:50:39,604 INFO sqlalchemy.engine.base.Engine Thread-229 : ('130', 1)
2020-05-27 19:50:39,605 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:39,606 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (130, 'No Changes Allowed', '  background-color: #48D1CC;\r\n  color: #000000;', 127, 0, 0, 1)
2020-05-27 19:50:39,608 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:50:39,608 INFO sqlalchemy.engine.base.Engine Thread-229 : (0,)
2020-05-27 19:50:39,608 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:39,609 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:50:39,609 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:50:39,609 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:50:39,609 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:50:39,609 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:50:39,609 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:50:39,609 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:50:39,609 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:50:39,609 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:50:39,610 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:50:39,610 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:50:39,610 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:50:39,610 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:50:39,610 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:50:39,610 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:50:39,610 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:50:39,610 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:50:39,610 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:50:39,610 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:50:39,610 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:50:39,611 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:50:39,611 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:50:39,611 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:50:39,613 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:50:39,613 INFO sqlalchemy.engine.base.Engine Thread-229 : (0,)
2020-05-27 19:50:39,614 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:39,614 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:50:39,614 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:50:39,614 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:50:39,614 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:50:39,615 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:50:39,615 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:50:39,615 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:50:39,615 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:50:39,615 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:50:39,615 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:50:39,615 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:50:39,615 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:50:39,615 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:50:39,615 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:50:39,616 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:50:39,616 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:50:39,616 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:50:39,616 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:50:39,616 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:50:39,616 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:50:39,616 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:50:39,616 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:50:39,616 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:50:39,616 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:50:39,617 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:50:39,617 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:50:39,617 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:50:39,617 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:50:39,617 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:50:39,617 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:50:39,617 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:50:39,617 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:50:39,617 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:50:39,617 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:50:39,618 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:50:39,618 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:50:39,618 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:50:39,618 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:50:39,618 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:50:39,618 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:50:39,618 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:50:39,618 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:50:39,618 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:50:39,618 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:50:39,618 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:50:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:50:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:50:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:50:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:50:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:50:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:50:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:50:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:50:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:50:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:50:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:50:39,619 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:50:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:50:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:50:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:50:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:50:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (130, 'No Changes Allowed', '  background-color: #48D1CC;\r\n  color: #000000;', 127, 0, 0, 1)
2020-05-27 19:50:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:50:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:50:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:50:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:50:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:50:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:50:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:50:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:50:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:50:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:50:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:50:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:50:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:50:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:50:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:50:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:50:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:50:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:50:39,627 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:39,627 INFO sqlalchemy.engine.base.Engine Thread-229 : ('philip', 1, 1)
2020-05-27 19:50:39,628 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:39,628 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:39,632 INFO sqlalchemy.engine.base.Engine Thread-229 : ROLLBACK
2020-05-27 19:50:39,894 INFO sqlalchemy.engine.base.Engine Thread-239 : BEGIN (implicit)
2020-05-27 19:50:39,895 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:39,898 INFO sqlalchemy.engine.base.Engine Thread-241 : BEGIN (implicit)
2020-05-27 19:50:39,901 INFO sqlalchemy.engine.base.Engine Thread-240 : BEGIN (implicit)
2020-05-27 19:50:39,901 INFO sqlalchemy.engine.base.Engine Thread-239 : (1, 1)
2020-05-27 19:50:39,902 INFO sqlalchemy.engine.base.Engine Thread-241 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:39,907 INFO sqlalchemy.engine.base.Engine Thread-241 : (1, 1)
2020-05-27 19:50:39,904 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:39,907 INFO sqlalchemy.engine.base.Engine Thread-240 : (1, 1)
2020-05-27 19:50:39,906 INFO sqlalchemy.engine.base.Engine Thread-242 : BEGIN (implicit)
2020-05-27 19:50:39,907 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:39,908 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:39,910 INFO sqlalchemy.engine.base.Engine Thread-242 : (1, 1)
2020-05-27 19:50:39,909 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:39,910 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:39,909 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:39,911 INFO sqlalchemy.engine.base.Engine Thread-241 : ROLLBACK
2020-05-27 19:50:39,911 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:39,912 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:39,914 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:39,913 INFO sqlalchemy.engine.base.Engine Thread-240 : ROLLBACK
2020-05-27 19:50:39,912 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:39,915 INFO sqlalchemy.engine.base.Engine Thread-242 : ROLLBACK
2020-05-27 19:50:39,916 INFO sqlalchemy.engine.base.Engine Thread-239 : ROLLBACK
2020-05-27 19:50:39,929 INFO sqlalchemy.engine.base.Engine Thread-243 : BEGIN (implicit)
2020-05-27 19:50:39,930 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:39,930 INFO sqlalchemy.engine.base.Engine Thread-243 : (1, 1)
2020-05-27 19:50:39,931 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:39,931 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:39,932 INFO sqlalchemy.engine.base.Engine Thread-243 : ROLLBACK
2020-05-27 19:50:46,893 INFO sqlalchemy.engine.base.Engine Thread-244 : BEGIN (implicit)
2020-05-27 19:50:46,894 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:46,894 INFO sqlalchemy.engine.base.Engine Thread-244 : (1, 1)
2020-05-27 19:50:46,895 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:46,895 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:46,897 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:46,897 INFO sqlalchemy.engine.base.Engine Thread-244 : ('philip', 1, 1)
2020-05-27 19:50:46,898 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:46,898 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:46,900 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:50:46,900 INFO sqlalchemy.engine.base.Engine Thread-244 : ('130', 1)
2020-05-27 19:50:46,900 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:46,901 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (130, 'No Changes Allowed', '  background-color: #48D1CC;\r\n  color: #000000;', 127, 0, 0, 1)
2020-05-27 19:50:46,903 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:50:46,903 INFO sqlalchemy.engine.base.Engine Thread-244 : (0,)
2020-05-27 19:50:46,904 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:46,904 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:50:46,904 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:50:46,904 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:50:46,905 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:50:46,905 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:50:46,905 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:50:46,905 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:50:46,905 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:50:46,905 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:50:46,905 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:50:46,905 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:50:46,905 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:50:46,905 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:50:46,905 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:50:46,905 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:50:46,906 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:50:46,906 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:50:46,906 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:50:46,906 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:50:46,906 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:50:46,906 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:50:46,906 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:50:46,906 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:50:46,908 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:50:46,908 INFO sqlalchemy.engine.base.Engine Thread-244 : (0,)
2020-05-27 19:50:46,909 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:46,909 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:50:46,909 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:50:46,909 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:50:46,909 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:50:46,909 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:50:46,909 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:50:46,909 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:50:46,909 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:50:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:50:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:50:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:50:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:50:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:50:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:50:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:50:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:50:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:50:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:50:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:50:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:50:46,911 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:50:46,911 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:50:46,911 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:50:46,911 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:50:46,911 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:50:46,911 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:50:46,911 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:50:46,911 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:50:46,911 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:50:46,911 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:50:46,911 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:50:46,911 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:50:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:50:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:50:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:50:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:50:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:50:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:50:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:50:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:50:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:50:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:50:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:50:46,913 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:50:46,913 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:50:46,913 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:50:46,913 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:50:46,913 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:50:46,913 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:50:46,913 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:50:46,913 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:50:46,913 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:50:46,913 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:50:46,913 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:50:46,913 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:50:46,914 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:50:46,914 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:50:46,914 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:50:46,914 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:50:46,914 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:50:46,914 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:50:46,914 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (130, 'No Changes Allowed', '  background-color: #48D1CC;\r\n  color: #000000;', 127, 0, 0, 1)
2020-05-27 19:50:46,914 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:50:46,914 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:50:46,914 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:50:46,914 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:50:46,914 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:50:46,914 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:50:46,915 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:50:46,915 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:50:46,915 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:50:46,915 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:50:46,915 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:50:46,915 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:50:46,915 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:50:46,915 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:50:46,915 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:50:46,915 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:50:46,915 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:50:46,915 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:50:46,918 INFO sqlalchemy.engine.base.Engine Thread-244 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:50:46,918 INFO sqlalchemy.engine.base.Engine Thread-244 : ('130', '  background-color: #48D1CC; color: #000000;', 130)
2020-05-27 19:50:46,919 INFO sqlalchemy.engine.base.Engine Thread-244 : COMMIT
2020-05-27 19:50:46,961 INFO sqlalchemy.engine.base.Engine Thread-245 : BEGIN (implicit)
2020-05-27 19:50:46,962 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:46,963 INFO sqlalchemy.engine.base.Engine Thread-245 : (1, 1)
2020-05-27 19:50:46,963 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:46,963 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:46,966 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:46,966 INFO sqlalchemy.engine.base.Engine Thread-245 : ('philip', 1, 1)
2020-05-27 19:50:46,967 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:46,967 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:46,969 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:50:46,969 INFO sqlalchemy.engine.base.Engine Thread-245 : (0,)
2020-05-27 19:50:46,970 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:46,970 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:50:46,970 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:50:46,970 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:50:46,970 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:50:46,970 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:50:46,970 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:50:46,970 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:50:46,970 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:50:46,970 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:50:46,971 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:50:46,971 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:50:46,971 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:50:46,971 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:50:46,971 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:50:46,971 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:50:46,971 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:50:46,971 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:50:46,971 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:50:46,971 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:50:46,971 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:50:46,971 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:50:46,972 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:50:46,972 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:50:46,974 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:50:46,974 INFO sqlalchemy.engine.base.Engine Thread-245 : (127, 1)
2020-05-27 19:50:46,974 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:46,974 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:50:46,976 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:50:46,976 INFO sqlalchemy.engine.base.Engine Thread-245 : (127,)
2020-05-27 19:50:46,976 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:50:46,977 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:50:46,977 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:50:46,977 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (130, 'No Changes Allowed', '  background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:50:46,977 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:50:46,982 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:50:46,982 INFO sqlalchemy.engine.base.Engine Thread-245 : ('philip', 1, 1)
2020-05-27 19:50:46,983 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:46,983 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:46,987 INFO sqlalchemy.engine.base.Engine Thread-245 : ROLLBACK
2020-05-27 19:50:47,252 INFO sqlalchemy.engine.base.Engine Thread-255 : BEGIN (implicit)
2020-05-27 19:50:47,253 INFO sqlalchemy.engine.base.Engine Thread-255 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:47,253 INFO sqlalchemy.engine.base.Engine Thread-255 : (1, 1)
2020-05-27 19:50:47,256 INFO sqlalchemy.engine.base.Engine Thread-256 : BEGIN (implicit)
2020-05-27 19:50:47,257 INFO sqlalchemy.engine.base.Engine Thread-256 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:47,257 INFO sqlalchemy.engine.base.Engine Thread-256 : (1, 1)
2020-05-27 19:50:47,257 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:47,257 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:47,258 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:47,258 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:47,261 INFO sqlalchemy.engine.base.Engine Thread-257 : BEGIN (implicit)
2020-05-27 19:50:47,268 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:47,268 INFO sqlalchemy.engine.base.Engine Thread-257 : (1, 1)
2020-05-27 19:50:47,267 INFO sqlalchemy.engine.base.Engine Thread-258 : BEGIN (implicit)
2020-05-27 19:50:47,262 INFO sqlalchemy.engine.base.Engine Thread-256 : ROLLBACK
2020-05-27 19:50:47,263 INFO sqlalchemy.engine.base.Engine Thread-255 : ROLLBACK
2020-05-27 19:50:47,269 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:47,271 INFO sqlalchemy.engine.base.Engine Thread-258 : (1, 1)
2020-05-27 19:50:47,270 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:47,272 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:47,273 INFO sqlalchemy.engine.base.Engine Thread-257 : ROLLBACK
2020-05-27 19:50:47,272 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:47,274 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:47,275 INFO sqlalchemy.engine.base.Engine Thread-258 : ROLLBACK
2020-05-27 19:50:47,284 INFO sqlalchemy.engine.base.Engine Thread-259 : BEGIN (implicit)
2020-05-27 19:50:47,285 INFO sqlalchemy.engine.base.Engine Thread-259 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:47,285 INFO sqlalchemy.engine.base.Engine Thread-259 : (1, 1)
2020-05-27 19:50:47,285 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:47,286 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:47,287 INFO sqlalchemy.engine.base.Engine Thread-259 : ROLLBACK
2020-05-27 19:50:49,471 INFO sqlalchemy.engine.base.Engine Thread-260 : BEGIN (implicit)
2020-05-27 19:50:49,472 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:50:49,472 INFO sqlalchemy.engine.base.Engine Thread-260 : ('Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:50:49,473 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:50:49,473 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:50:49,473 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:50:49,473 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', '  background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:50:49,473 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:50:49,474 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:50:49,474 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', '  background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:50:49,474 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:50:49,474 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Informational', 'info_event', 'Date Event')
2020-05-27 19:50:49,474 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:50:49,474 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:50:49,478 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:50:49,478 INFO sqlalchemy.engine.base.Engine Thread-260 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 19:50:49,479 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:50:49,483 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:50:49,483 INFO sqlalchemy.engine.base.Engine Thread-260 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:50:49,484 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:50:49,484 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:49,484 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:49,484 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:49,484 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:49,484 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:49,484 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:49,485 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:50:49,489 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:50:49,489 INFO sqlalchemy.engine.base.Engine Thread-260 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:50:49,490 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:50:49,490 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:50:49,490 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:50:49,490 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:50:49,490 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:50:49,490 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:50:49,490 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:50:49,492 INFO sqlalchemy.engine.base.Engine Thread-260 : ROLLBACK
2020-05-27 19:50:49,558 INFO sqlalchemy.engine.base.Engine Thread-261 : BEGIN (implicit)
2020-05-27 19:50:49,559 INFO sqlalchemy.engine.base.Engine Thread-261 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:50:49,559 INFO sqlalchemy.engine.base.Engine Thread-261 : (1, 1)
2020-05-27 19:50:49,560 DEBUG sqlalchemy.engine.base.Engine Thread-261 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:50:49,560 DEBUG sqlalchemy.engine.base.Engine Thread-261 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:50:49,561 INFO sqlalchemy.engine.base.Engine Thread-261 : ROLLBACK
2020-05-27 19:51:39,377 INFO sqlalchemy.engine.base.Engine Thread-262 : BEGIN (implicit)
2020-05-27 19:51:39,380 INFO sqlalchemy.engine.base.Engine Thread-262 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:51:39,380 INFO sqlalchemy.engine.base.Engine Thread-262 : ()
2020-05-27 19:51:39,381 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:51:39,381 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:51:39,382 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:51:39,383 INFO sqlalchemy.engine.base.Engine Thread-262 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:51:39,383 INFO sqlalchemy.engine.base.Engine Thread-262 : (100,)
2020-05-27 19:51:39,384 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:51:39,384 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:51:39,384 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:51:39,384 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:51:39,385 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:51:39,385 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:51:39,387 INFO sqlalchemy.engine.base.Engine Thread-262 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:39,387 INFO sqlalchemy.engine.base.Engine Thread-262 : (1, 1)
2020-05-27 19:51:39,387 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:39,388 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:39,393 INFO sqlalchemy.engine.base.Engine Thread-262 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:51:39,393 INFO sqlalchemy.engine.base.Engine Thread-262 : ('philip', 1, 1)
2020-05-27 19:51:39,394 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:39,394 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:39,396 INFO sqlalchemy.engine.base.Engine Thread-262 : ROLLBACK
2020-05-27 19:51:39,633 INFO sqlalchemy.engine.base.Engine Thread-273 : BEGIN (implicit)
2020-05-27 19:51:39,634 INFO sqlalchemy.engine.base.Engine Thread-273 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:39,634 INFO sqlalchemy.engine.base.Engine Thread-273 : (1, 1)
2020-05-27 19:51:39,638 INFO sqlalchemy.engine.base.Engine Thread-274 : BEGIN (implicit)
2020-05-27 19:51:39,639 INFO sqlalchemy.engine.base.Engine Thread-274 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:39,639 INFO sqlalchemy.engine.base.Engine Thread-274 : (1, 1)
2020-05-27 19:51:39,639 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:39,640 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:39,640 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:39,642 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:39,643 INFO sqlalchemy.engine.base.Engine Thread-274 : ROLLBACK
2020-05-27 19:51:39,642 INFO sqlalchemy.engine.base.Engine Thread-272 : BEGIN (implicit)
2020-05-27 19:51:39,644 INFO sqlalchemy.engine.base.Engine Thread-273 : ROLLBACK
2020-05-27 19:51:39,647 INFO sqlalchemy.engine.base.Engine Thread-275 : BEGIN (implicit)
2020-05-27 19:51:39,648 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:39,649 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:39,650 INFO sqlalchemy.engine.base.Engine Thread-272 : (1, 1)
2020-05-27 19:51:39,650 INFO sqlalchemy.engine.base.Engine Thread-275 : (1, 1)
2020-05-27 19:51:39,651 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:39,651 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:39,652 INFO sqlalchemy.engine.base.Engine Thread-275 : ROLLBACK
2020-05-27 19:51:39,653 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:39,653 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:39,654 INFO sqlalchemy.engine.base.Engine Thread-272 : ROLLBACK
2020-05-27 19:51:39,670 INFO sqlalchemy.engine.base.Engine Thread-276 : BEGIN (implicit)
2020-05-27 19:51:39,671 INFO sqlalchemy.engine.base.Engine Thread-276 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:39,671 INFO sqlalchemy.engine.base.Engine Thread-276 : (1, 1)
2020-05-27 19:51:39,672 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:39,672 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:39,673 INFO sqlalchemy.engine.base.Engine Thread-276 : ROLLBACK
2020-05-27 19:51:39,689 INFO sqlalchemy.engine.base.Engine Thread-277 : BEGIN (implicit)
2020-05-27 19:51:39,691 INFO sqlalchemy.engine.base.Engine Thread-277 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:51:39,691 INFO sqlalchemy.engine.base.Engine Thread-277 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:51:39,692 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:51:39,692 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', '  background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:51:39,692 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:51:39,692 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:51:39,695 INFO sqlalchemy.engine.base.Engine Thread-277 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:51:39,696 INFO sqlalchemy.engine.base.Engine Thread-277 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:51:39,696 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:51:39,700 INFO sqlalchemy.engine.base.Engine Thread-277 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:51:39,701 INFO sqlalchemy.engine.base.Engine Thread-277 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:51:39,701 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:51:39,705 INFO sqlalchemy.engine.base.Engine Thread-277 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:51:39,705 INFO sqlalchemy.engine.base.Engine Thread-277 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:51:39,706 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:51:39,706 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:51:39,707 INFO sqlalchemy.engine.base.Engine Thread-277 : ROLLBACK
2020-05-27 19:51:39,733 INFO sqlalchemy.engine.base.Engine Thread-278 : BEGIN (implicit)
2020-05-27 19:51:39,734 INFO sqlalchemy.engine.base.Engine Thread-278 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:51:39,734 INFO sqlalchemy.engine.base.Engine Thread-278 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:51:39,735 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:51:39,735 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', '  background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:51:39,735 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'hap_event', 'Date Event')
2020-05-27 19:51:39,735 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'bau_event', 'Date Event')
2020-05-27 19:51:39,739 INFO sqlalchemy.engine.base.Engine Thread-278 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:51:39,739 INFO sqlalchemy.engine.base.Engine Thread-278 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:51:39,740 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:51:39,744 INFO sqlalchemy.engine.base.Engine Thread-278 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:51:39,744 INFO sqlalchemy.engine.base.Engine Thread-278 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:51:39,745 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:51:39,748 INFO sqlalchemy.engine.base.Engine Thread-278 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:51:39,749 INFO sqlalchemy.engine.base.Engine Thread-278 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:51:39,749 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:51:39,750 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:51:39,750 INFO sqlalchemy.engine.base.Engine Thread-278 : ROLLBACK
2020-05-27 19:51:57,217 INFO sqlalchemy.engine.base.Engine Thread-279 : BEGIN (implicit)
2020-05-27 19:51:57,218 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:57,218 INFO sqlalchemy.engine.base.Engine Thread-279 : (1, 1)
2020-05-27 19:51:57,218 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:57,219 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:57,221 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:51:57,221 INFO sqlalchemy.engine.base.Engine Thread-279 : ('philip', 1, 1)
2020-05-27 19:51:57,222 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:57,222 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:57,224 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:51:57,224 INFO sqlalchemy.engine.base.Engine Thread-279 : (0,)
2020-05-27 19:51:57,225 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:51:57,225 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:51:57,225 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:51:57,226 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:51:57,226 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:51:57,226 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:51:57,226 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:51:57,226 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:51:57,226 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:51:57,226 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:51:57,226 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:51:57,226 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:51:57,226 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:51:57,227 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:51:57,227 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:51:57,227 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:51:57,227 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:51:57,227 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:51:57,227 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:51:57,227 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:51:57,227 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:51:57,227 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:51:57,227 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:51:57,227 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:51:57,229 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-05-27 19:51:57,230 INFO sqlalchemy.engine.base.Engine Thread-279 : (0, 1)
2020-05-27 19:51:57,230 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:51:57,230 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:51:57,232 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:51:57,232 INFO sqlalchemy.engine.base.Engine Thread-279 : (66,)
2020-05-27 19:51:57,232 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:51:57,232 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:51:57,232 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:51:57,240 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:51:57,240 INFO sqlalchemy.engine.base.Engine Thread-279 : ('philip', 1, 1)
2020-05-27 19:51:57,241 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:57,241 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:57,244 INFO sqlalchemy.engine.base.Engine Thread-279 : ROLLBACK
2020-05-27 19:51:57,527 INFO sqlalchemy.engine.base.Engine Thread-290 : BEGIN (implicit)
2020-05-27 19:51:57,530 INFO sqlalchemy.engine.base.Engine Thread-291 : BEGIN (implicit)
2020-05-27 19:51:57,533 INFO sqlalchemy.engine.base.Engine Thread-289 : BEGIN (implicit)
2020-05-27 19:51:57,535 INFO sqlalchemy.engine.base.Engine Thread-292 : BEGIN (implicit)
2020-05-27 19:51:57,537 INFO sqlalchemy.engine.base.Engine Thread-290 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:57,538 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:57,539 INFO sqlalchemy.engine.base.Engine Thread-289 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:57,540 INFO sqlalchemy.engine.base.Engine Thread-292 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:57,540 INFO sqlalchemy.engine.base.Engine Thread-290 : (1, 1)
2020-05-27 19:51:57,540 INFO sqlalchemy.engine.base.Engine Thread-291 : (1, 1)
2020-05-27 19:51:57,540 INFO sqlalchemy.engine.base.Engine Thread-289 : (1, 1)
2020-05-27 19:51:57,541 INFO sqlalchemy.engine.base.Engine Thread-292 : (1, 1)
2020-05-27 19:51:57,541 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:57,542 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:57,543 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:57,543 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:57,548 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:57,544 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:57,549 INFO sqlalchemy.engine.base.Engine Thread-290 : ROLLBACK
2020-05-27 19:51:57,545 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:57,544 INFO sqlalchemy.engine.base.Engine Thread-291 : ROLLBACK
2020-05-27 19:51:57,548 INFO sqlalchemy.engine.base.Engine Thread-293 : BEGIN (implicit)
2020-05-27 19:51:57,550 INFO sqlalchemy.engine.base.Engine Thread-292 : ROLLBACK
2020-05-27 19:51:57,550 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:57,553 INFO sqlalchemy.engine.base.Engine Thread-293 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:57,555 INFO sqlalchemy.engine.base.Engine Thread-293 : (1, 1)
2020-05-27 19:51:57,555 INFO sqlalchemy.engine.base.Engine Thread-289 : ROLLBACK
2020-05-27 19:51:57,557 DEBUG sqlalchemy.engine.base.Engine Thread-293 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:57,557 DEBUG sqlalchemy.engine.base.Engine Thread-293 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:57,558 INFO sqlalchemy.engine.base.Engine Thread-293 : ROLLBACK
2020-05-27 19:51:59,629 INFO sqlalchemy.engine.base.Engine Thread-294 : BEGIN (implicit)
2020-05-27 19:51:59,631 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:59,631 INFO sqlalchemy.engine.base.Engine Thread-294 : (1, 1)
2020-05-27 19:51:59,632 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:59,632 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:59,634 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:51:59,634 INFO sqlalchemy.engine.base.Engine Thread-294 : ('philip', 1, 1)
2020-05-27 19:51:59,635 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:59,635 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:59,638 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:51:59,638 INFO sqlalchemy.engine.base.Engine Thread-294 : (0,)
2020-05-27 19:51:59,638 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:51:59,639 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:51:59,639 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:51:59,639 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:51:59,639 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:51:59,639 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:51:59,639 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:51:59,639 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:51:59,639 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:51:59,639 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:51:59,640 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:51:59,640 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:51:59,640 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:51:59,640 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:51:59,640 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:51:59,640 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:51:59,640 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:51:59,640 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:51:59,640 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:51:59,641 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:51:59,641 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:51:59,641 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:51:59,641 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:51:59,641 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:51:59,643 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:51:59,643 INFO sqlalchemy.engine.base.Engine Thread-294 : ('127',)
2020-05-27 19:51:59,644 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:51:59,644 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:51:59,644 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:51:59,644 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (130, 'No Changes Allowed', '  background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:51:59,644 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:51:59,649 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:51:59,649 INFO sqlalchemy.engine.base.Engine Thread-294 : ('philip', 1, 1)
2020-05-27 19:51:59,649 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:59,649 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:59,653 INFO sqlalchemy.engine.base.Engine Thread-294 : ROLLBACK
2020-05-27 19:51:59,897 INFO sqlalchemy.engine.base.Engine Thread-304 : BEGIN (implicit)
2020-05-27 19:51:59,898 INFO sqlalchemy.engine.base.Engine Thread-304 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:59,898 INFO sqlalchemy.engine.base.Engine Thread-304 : (1, 1)
2020-05-27 19:51:59,902 INFO sqlalchemy.engine.base.Engine Thread-305 : BEGIN (implicit)
2020-05-27 19:51:59,902 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:59,903 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:59,906 INFO sqlalchemy.engine.base.Engine Thread-306 : BEGIN (implicit)
2020-05-27 19:51:59,907 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:59,909 INFO sqlalchemy.engine.base.Engine Thread-307 : BEGIN (implicit)
2020-05-27 19:51:59,909 INFO sqlalchemy.engine.base.Engine Thread-305 : (1, 1)
2020-05-27 19:51:59,910 INFO sqlalchemy.engine.base.Engine Thread-306 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:59,912 INFO sqlalchemy.engine.base.Engine Thread-306 : (1, 1)
2020-05-27 19:51:59,912 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:59,913 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:59,913 DEBUG sqlalchemy.engine.base.Engine Thread-306 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:59,915 DEBUG sqlalchemy.engine.base.Engine Thread-306 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:59,914 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:59,914 INFO sqlalchemy.engine.base.Engine Thread-304 : ROLLBACK
2020-05-27 19:51:59,918 INFO sqlalchemy.engine.base.Engine Thread-305 : ROLLBACK
2020-05-27 19:51:59,917 INFO sqlalchemy.engine.base.Engine Thread-306 : ROLLBACK
2020-05-27 19:51:59,913 INFO sqlalchemy.engine.base.Engine Thread-307 : (1, 1)
2020-05-27 19:51:59,921 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:59,922 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:59,923 INFO sqlalchemy.engine.base.Engine Thread-307 : ROLLBACK
2020-05-27 19:51:59,932 INFO sqlalchemy.engine.base.Engine Thread-308 : BEGIN (implicit)
2020-05-27 19:51:59,933 INFO sqlalchemy.engine.base.Engine Thread-308 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:51:59,933 INFO sqlalchemy.engine.base.Engine Thread-308 : (1, 1)
2020-05-27 19:51:59,934 DEBUG sqlalchemy.engine.base.Engine Thread-308 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:51:59,934 DEBUG sqlalchemy.engine.base.Engine Thread-308 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:51:59,935 INFO sqlalchemy.engine.base.Engine Thread-308 : ROLLBACK
2020-05-27 19:52:01,807 INFO sqlalchemy.engine.base.Engine Thread-309 : BEGIN (implicit)
2020-05-27 19:52:01,808 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:01,808 INFO sqlalchemy.engine.base.Engine Thread-309 : (1, 1)
2020-05-27 19:52:01,809 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:01,809 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:01,811 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:01,811 INFO sqlalchemy.engine.base.Engine Thread-309 : ('philip', 1, 1)
2020-05-27 19:52:01,812 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:01,812 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:01,813 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:52:01,814 INFO sqlalchemy.engine.base.Engine Thread-309 : ('130', 1)
2020-05-27 19:52:01,814 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:01,814 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (130, 'No Changes Allowed', '  background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:52:01,816 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:52:01,816 INFO sqlalchemy.engine.base.Engine Thread-309 : (0,)
2020-05-27 19:52:01,817 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:01,818 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:52:01,818 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:52:01,818 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:52:01,818 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:52:01,818 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:52:01,818 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:52:01,818 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:52:01,818 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:52:01,818 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:52:01,818 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:52:01,819 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:52:01,819 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:52:01,819 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:52:01,819 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:52:01,819 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:52:01,819 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:52:01,819 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:52:01,819 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:52:01,819 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:52:01,819 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:52:01,819 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:52:01,819 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:52:01,819 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:52:01,821 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:52:01,821 INFO sqlalchemy.engine.base.Engine Thread-309 : (0,)
2020-05-27 19:52:01,822 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:01,822 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:52:01,822 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:52:01,822 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:52:01,822 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:01,822 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:52:01,823 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:52:01,823 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:52:01,823 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:52:01,823 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:52:01,823 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:52:01,823 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:01,823 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:52:01,823 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:52:01,823 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:52:01,823 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:52:01,823 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:52:01,823 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:52:01,824 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:52:01,824 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:52:01,824 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:52:01,824 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:52:01,824 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:52:01,824 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:52:01,824 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:52:01,824 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:52:01,824 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:52:01,824 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:52:01,824 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:52:01,824 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:52:01,825 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:52:01,825 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:52:01,825 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:52:01,825 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:52:01,825 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:52:01,825 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:52:01,825 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:52:01,825 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:52:01,825 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:52:01,825 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:52:01,825 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:52:01,825 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:52:01,825 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:52:01,826 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:52:01,826 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:52:01,826 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:52:01,826 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:52:01,826 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:52:01,826 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:52:01,826 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:52:01,826 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:52:01,826 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:52:01,826 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:52:01,826 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:52:01,826 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:52:01,826 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:52:01,827 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:52:01,827 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:52:01,827 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:52:01,827 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:52:01,827 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:52:01,827 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:52:01,827 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (130, 'No Changes Allowed', '  background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:52:01,827 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:52:01,827 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:52:01,827 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:52:01,827 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:52:01,827 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:52:01,828 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:52:01,828 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:52:01,828 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:52:01,828 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:52:01,828 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:52:01,828 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:52:01,828 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:52:01,828 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:52:01,828 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:52:01,828 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:52:01,828 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:52:01,828 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:52:01,829 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:52:01,834 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:01,834 INFO sqlalchemy.engine.base.Engine Thread-309 : ('philip', 1, 1)
2020-05-27 19:52:01,835 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:01,835 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:01,838 INFO sqlalchemy.engine.base.Engine Thread-309 : ROLLBACK
2020-05-27 19:52:02,091 INFO sqlalchemy.engine.base.Engine Thread-319 : BEGIN (implicit)
2020-05-27 19:52:02,094 INFO sqlalchemy.engine.base.Engine Thread-320 : BEGIN (implicit)
2020-05-27 19:52:02,095 INFO sqlalchemy.engine.base.Engine Thread-319 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:02,097 INFO sqlalchemy.engine.base.Engine Thread-321 : BEGIN (implicit)
2020-05-27 19:52:02,098 INFO sqlalchemy.engine.base.Engine Thread-320 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:02,101 INFO sqlalchemy.engine.base.Engine Thread-322 : BEGIN (implicit)
2020-05-27 19:52:02,102 INFO sqlalchemy.engine.base.Engine Thread-319 : (1, 1)
2020-05-27 19:52:02,103 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:02,104 INFO sqlalchemy.engine.base.Engine Thread-321 : (1, 1)
2020-05-27 19:52:02,103 INFO sqlalchemy.engine.base.Engine Thread-320 : (1, 1)
2020-05-27 19:52:02,105 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:02,104 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:02,106 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:02,105 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:02,104 INFO sqlalchemy.engine.base.Engine Thread-322 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:02,108 INFO sqlalchemy.engine.base.Engine Thread-322 : (1, 1)
2020-05-27 19:52:02,108 INFO sqlalchemy.engine.base.Engine Thread-321 : ROLLBACK
2020-05-27 19:52:02,108 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:02,109 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:02,107 INFO sqlalchemy.engine.base.Engine Thread-319 : ROLLBACK
2020-05-27 19:52:02,110 INFO sqlalchemy.engine.base.Engine Thread-320 : ROLLBACK
2020-05-27 19:52:02,110 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:02,112 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:02,113 INFO sqlalchemy.engine.base.Engine Thread-322 : ROLLBACK
2020-05-27 19:52:02,122 INFO sqlalchemy.engine.base.Engine Thread-323 : BEGIN (implicit)
2020-05-27 19:52:02,123 INFO sqlalchemy.engine.base.Engine Thread-323 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:02,123 INFO sqlalchemy.engine.base.Engine Thread-323 : (1, 1)
2020-05-27 19:52:02,124 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:02,124 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:02,125 INFO sqlalchemy.engine.base.Engine Thread-323 : ROLLBACK
2020-05-27 19:52:20,180 INFO sqlalchemy.engine.base.Engine Thread-324 : BEGIN (implicit)
2020-05-27 19:52:20,181 INFO sqlalchemy.engine.base.Engine Thread-324 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:20,182 INFO sqlalchemy.engine.base.Engine Thread-324 : (1, 1)
2020-05-27 19:52:20,182 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:20,182 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:20,185 INFO sqlalchemy.engine.base.Engine Thread-324 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:20,185 INFO sqlalchemy.engine.base.Engine Thread-324 : ('philip', 1, 1)
2020-05-27 19:52:20,185 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:20,185 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:20,187 INFO sqlalchemy.engine.base.Engine Thread-324 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:52:20,187 INFO sqlalchemy.engine.base.Engine Thread-324 : ('130', 1)
2020-05-27 19:52:20,188 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:20,188 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (130, 'No Changes Allowed', '  background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:52:20,190 INFO sqlalchemy.engine.base.Engine Thread-324 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:52:20,190 INFO sqlalchemy.engine.base.Engine Thread-324 : (0,)
2020-05-27 19:52:20,191 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:20,191 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:52:20,191 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:52:20,191 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:52:20,191 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:52:20,192 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:52:20,192 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:52:20,192 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:52:20,192 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:52:20,192 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:52:20,192 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:52:20,192 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:52:20,192 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:52:20,192 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:52:20,192 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:52:20,192 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:52:20,192 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:52:20,192 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:52:20,193 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:52:20,193 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:52:20,193 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:52:20,193 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:52:20,193 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:52:20,193 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:52:20,195 INFO sqlalchemy.engine.base.Engine Thread-324 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:52:20,195 INFO sqlalchemy.engine.base.Engine Thread-324 : (0,)
2020-05-27 19:52:20,196 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:20,196 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:52:20,197 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:52:20,197 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:52:20,197 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:20,197 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:52:20,197 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:52:20,197 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:52:20,197 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:52:20,197 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:52:20,197 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:52:20,197 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:20,197 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:52:20,197 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:52:20,197 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:52:20,198 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:52:20,198 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:52:20,198 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:52:20,198 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:52:20,198 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:52:20,198 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:52:20,198 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:52:20,198 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:52:20,198 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:52:20,198 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:52:20,198 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:52:20,198 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:52:20,199 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:52:20,199 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:52:20,199 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:52:20,199 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:52:20,199 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:52:20,199 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:52:20,199 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:52:20,199 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:52:20,199 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:52:20,199 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:52:20,199 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:52:20,199 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:52:20,200 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:52:20,200 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:52:20,200 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:52:20,200 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:52:20,200 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:52:20,200 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:52:20,200 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:52:20,200 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:52:20,200 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:52:20,200 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:52:20,200 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:52:20,200 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:52:20,200 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:52:20,201 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:52:20,201 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:52:20,201 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:52:20,201 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:52:20,201 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:52:20,201 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:52:20,201 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:52:20,201 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:52:20,201 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:52:20,201 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:52:20,201 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (130, 'No Changes Allowed', '  background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:52:20,201 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:52:20,201 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:52:20,202 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:52:20,202 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:52:20,202 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:52:20,202 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:52:20,202 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:52:20,202 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:52:20,202 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:52:20,202 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:52:20,202 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:52:20,202 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:52:20,202 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:52:20,202 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:52:20,203 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:52:20,203 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:52:20,203 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:52:20,203 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:52:20,206 INFO sqlalchemy.engine.base.Engine Thread-324 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:52:20,206 INFO sqlalchemy.engine.base.Engine Thread-324 : ('130', 'background-color: #FFE4E1; color: #FF0000;', 130)
2020-05-27 19:52:20,206 INFO sqlalchemy.engine.base.Engine Thread-324 : COMMIT
2020-05-27 19:52:20,256 INFO sqlalchemy.engine.base.Engine Thread-325 : BEGIN (implicit)
2020-05-27 19:52:20,257 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:20,258 INFO sqlalchemy.engine.base.Engine Thread-325 : (1, 1)
2020-05-27 19:52:20,258 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:20,258 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:20,260 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:20,261 INFO sqlalchemy.engine.base.Engine Thread-325 : ('philip', 1, 1)
2020-05-27 19:52:20,261 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:20,261 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:20,263 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:52:20,263 INFO sqlalchemy.engine.base.Engine Thread-325 : (0,)
2020-05-27 19:52:20,264 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:20,264 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:52:20,264 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:52:20,264 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:52:20,264 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:52:20,264 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:52:20,264 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:52:20,265 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:52:20,265 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:52:20,265 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:52:20,265 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:52:20,265 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:52:20,265 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:52:20,265 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:52:20,265 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:52:20,265 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:52:20,265 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:52:20,265 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:52:20,265 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:52:20,266 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:52:20,266 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:52:20,266 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:52:20,266 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:52:20,266 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:52:20,268 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:52:20,268 INFO sqlalchemy.engine.base.Engine Thread-325 : (127, 1)
2020-05-27 19:52:20,269 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:20,269 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:52:20,270 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:52:20,270 INFO sqlalchemy.engine.base.Engine Thread-325 : (127,)
2020-05-27 19:52:20,270 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:20,271 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:52:20,271 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:52:20,271 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 19:52:20,271 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:52:20,275 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:20,275 INFO sqlalchemy.engine.base.Engine Thread-325 : ('philip', 1, 1)
2020-05-27 19:52:20,276 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:20,276 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:20,279 INFO sqlalchemy.engine.base.Engine Thread-325 : ROLLBACK
2020-05-27 19:52:20,550 INFO sqlalchemy.engine.base.Engine Thread-335 : BEGIN (implicit)
2020-05-27 19:52:20,551 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:20,552 INFO sqlalchemy.engine.base.Engine Thread-335 : (1, 1)
2020-05-27 19:52:20,552 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:20,553 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:20,554 INFO sqlalchemy.engine.base.Engine Thread-335 : ROLLBACK
2020-05-27 19:52:20,557 INFO sqlalchemy.engine.base.Engine Thread-336 : BEGIN (implicit)
2020-05-27 19:52:20,560 INFO sqlalchemy.engine.base.Engine Thread-337 : BEGIN (implicit)
2020-05-27 19:52:20,561 INFO sqlalchemy.engine.base.Engine Thread-336 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:20,562 INFO sqlalchemy.engine.base.Engine Thread-337 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:20,562 INFO sqlalchemy.engine.base.Engine Thread-336 : (1, 1)
2020-05-27 19:52:20,562 INFO sqlalchemy.engine.base.Engine Thread-337 : (1, 1)
2020-05-27 19:52:20,565 INFO sqlalchemy.engine.base.Engine Thread-338 : BEGIN (implicit)
2020-05-27 19:52:20,567 INFO sqlalchemy.engine.base.Engine Thread-338 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:20,567 INFO sqlalchemy.engine.base.Engine Thread-338 : (1, 1)
2020-05-27 19:52:20,567 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:20,567 DEBUG sqlalchemy.engine.base.Engine Thread-336 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:20,568 DEBUG sqlalchemy.engine.base.Engine Thread-338 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:20,569 INFO sqlalchemy.engine.base.Engine Thread-336 : ROLLBACK
2020-05-27 19:52:20,569 DEBUG sqlalchemy.engine.base.Engine Thread-337 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:20,570 DEBUG sqlalchemy.engine.base.Engine Thread-337 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:20,571 INFO sqlalchemy.engine.base.Engine Thread-337 : ROLLBACK
2020-05-27 19:52:20,569 DEBUG sqlalchemy.engine.base.Engine Thread-338 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:20,572 INFO sqlalchemy.engine.base.Engine Thread-338 : ROLLBACK
2020-05-27 19:52:20,583 INFO sqlalchemy.engine.base.Engine Thread-339 : BEGIN (implicit)
2020-05-27 19:52:20,584 INFO sqlalchemy.engine.base.Engine Thread-339 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:20,584 INFO sqlalchemy.engine.base.Engine Thread-339 : (1, 1)
2020-05-27 19:52:20,585 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:20,585 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:20,586 INFO sqlalchemy.engine.base.Engine Thread-339 : ROLLBACK
2020-05-27 19:52:22,719 INFO sqlalchemy.engine.base.Engine Thread-340 : BEGIN (implicit)
2020-05-27 19:52:22,720 INFO sqlalchemy.engine.base.Engine Thread-340 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:22,720 INFO sqlalchemy.engine.base.Engine Thread-340 : (1, 1)
2020-05-27 19:52:22,721 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:22,721 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:22,724 INFO sqlalchemy.engine.base.Engine Thread-340 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:22,724 INFO sqlalchemy.engine.base.Engine Thread-340 : ('philip', 1, 1)
2020-05-27 19:52:22,725 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:22,725 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:22,726 INFO sqlalchemy.engine.base.Engine Thread-340 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:52:22,727 INFO sqlalchemy.engine.base.Engine Thread-340 : ('128', 1)
2020-05-27 19:52:22,727 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:22,728 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:52:22,730 INFO sqlalchemy.engine.base.Engine Thread-340 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:52:22,730 INFO sqlalchemy.engine.base.Engine Thread-340 : (0,)
2020-05-27 19:52:22,730 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:22,731 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:52:22,731 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:52:22,731 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:52:22,731 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:52:22,731 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:52:22,731 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:52:22,731 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:52:22,731 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:52:22,731 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:52:22,731 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:52:22,731 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:52:22,731 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:52:22,732 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:52:22,732 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:52:22,732 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:52:22,732 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:52:22,732 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:52:22,732 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:52:22,732 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:52:22,732 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:52:22,732 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:52:22,732 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:52:22,732 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:52:22,734 INFO sqlalchemy.engine.base.Engine Thread-340 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:52:22,734 INFO sqlalchemy.engine.base.Engine Thread-340 : (0,)
2020-05-27 19:52:22,735 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:22,735 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:52:22,735 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:52:22,736 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:52:22,736 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:22,736 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:52:22,736 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:52:22,736 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:52:22,736 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:52:22,736 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:52:22,736 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:52:22,736 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:22,736 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:52:22,736 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:52:22,736 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:52:22,737 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:52:22,737 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:52:22,737 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:52:22,737 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:52:22,737 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:52:22,737 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:52:22,737 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:52:22,737 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:52:22,737 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:52:22,737 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:52:22,737 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:52:22,738 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:52:22,738 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:52:22,738 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:52:22,738 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:52:22,738 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:52:22,738 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:52:22,738 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:52:22,738 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:52:22,738 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:52:22,738 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:52:22,738 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:52:22,739 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:52:22,739 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:52:22,739 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:52:22,739 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:52:22,739 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:52:22,739 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:52:22,739 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:52:22,739 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:52:22,739 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:52:22,739 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:52:22,739 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:52:22,739 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:52:22,740 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:52:22,740 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:52:22,740 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:52:22,740 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:52:22,740 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:52:22,740 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:52:22,740 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:52:22,740 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:52:22,740 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:52:22,740 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:52:22,740 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:52:22,740 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:52:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:52:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 19:52:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:52:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:52:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:52:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:52:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:52:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:52:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:52:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:52:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:52:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:52:22,741 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:52:22,742 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:52:22,742 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:52:22,742 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:52:22,742 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:52:22,742 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:52:22,742 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:52:22,742 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:52:22,748 INFO sqlalchemy.engine.base.Engine Thread-340 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:22,748 INFO sqlalchemy.engine.base.Engine Thread-340 : ('philip', 1, 1)
2020-05-27 19:52:22,748 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:22,748 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:22,752 INFO sqlalchemy.engine.base.Engine Thread-340 : ROLLBACK
2020-05-27 19:52:23,001 INFO sqlalchemy.engine.base.Engine Thread-350 : BEGIN (implicit)
2020-05-27 19:52:23,002 INFO sqlalchemy.engine.base.Engine Thread-350 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:23,002 INFO sqlalchemy.engine.base.Engine Thread-350 : (1, 1)
2020-05-27 19:52:23,005 INFO sqlalchemy.engine.base.Engine Thread-351 : BEGIN (implicit)
2020-05-27 19:52:23,006 INFO sqlalchemy.engine.base.Engine Thread-351 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:23,006 INFO sqlalchemy.engine.base.Engine Thread-351 : (1, 1)
2020-05-27 19:52:23,009 INFO sqlalchemy.engine.base.Engine Thread-352 : BEGIN (implicit)
2020-05-27 19:52:23,009 DEBUG sqlalchemy.engine.base.Engine Thread-350 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:23,010 INFO sqlalchemy.engine.base.Engine Thread-352 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:23,011 DEBUG sqlalchemy.engine.base.Engine Thread-351 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:23,014 INFO sqlalchemy.engine.base.Engine Thread-353 : BEGIN (implicit)
2020-05-27 19:52:23,014 DEBUG sqlalchemy.engine.base.Engine Thread-350 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:23,014 INFO sqlalchemy.engine.base.Engine Thread-352 : (1, 1)
2020-05-27 19:52:23,015 DEBUG sqlalchemy.engine.base.Engine Thread-351 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:23,015 INFO sqlalchemy.engine.base.Engine Thread-353 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:23,017 INFO sqlalchemy.engine.base.Engine Thread-351 : ROLLBACK
2020-05-27 19:52:23,017 INFO sqlalchemy.engine.base.Engine Thread-353 : (1, 1)
2020-05-27 19:52:23,017 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:23,020 DEBUG sqlalchemy.engine.base.Engine Thread-352 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:23,018 INFO sqlalchemy.engine.base.Engine Thread-350 : ROLLBACK
2020-05-27 19:52:23,020 DEBUG sqlalchemy.engine.base.Engine Thread-353 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:23,020 DEBUG sqlalchemy.engine.base.Engine Thread-353 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:23,022 INFO sqlalchemy.engine.base.Engine Thread-353 : ROLLBACK
2020-05-27 19:52:23,023 INFO sqlalchemy.engine.base.Engine Thread-352 : ROLLBACK
2020-05-27 19:52:23,033 INFO sqlalchemy.engine.base.Engine Thread-354 : BEGIN (implicit)
2020-05-27 19:52:23,034 INFO sqlalchemy.engine.base.Engine Thread-354 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:23,034 INFO sqlalchemy.engine.base.Engine Thread-354 : (1, 1)
2020-05-27 19:52:23,034 DEBUG sqlalchemy.engine.base.Engine Thread-354 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:23,034 DEBUG sqlalchemy.engine.base.Engine Thread-354 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:23,035 INFO sqlalchemy.engine.base.Engine Thread-354 : ROLLBACK
2020-05-27 19:52:35,653 INFO sqlalchemy.engine.base.Engine Thread-355 : BEGIN (implicit)
2020-05-27 19:52:35,654 INFO sqlalchemy.engine.base.Engine Thread-355 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:35,654 INFO sqlalchemy.engine.base.Engine Thread-355 : (1, 1)
2020-05-27 19:52:35,655 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:35,655 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:35,658 INFO sqlalchemy.engine.base.Engine Thread-355 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:35,658 INFO sqlalchemy.engine.base.Engine Thread-355 : ('philip', 1, 1)
2020-05-27 19:52:35,658 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:35,659 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:35,660 INFO sqlalchemy.engine.base.Engine Thread-355 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:52:35,660 INFO sqlalchemy.engine.base.Engine Thread-355 : ('128', 1)
2020-05-27 19:52:35,661 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:35,661 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:52:35,664 INFO sqlalchemy.engine.base.Engine Thread-355 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:52:35,664 INFO sqlalchemy.engine.base.Engine Thread-355 : (0,)
2020-05-27 19:52:35,665 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:35,665 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:52:35,665 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:52:35,665 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:52:35,665 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:52:35,665 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:52:35,665 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:52:35,665 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:52:35,665 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:52:35,666 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:52:35,666 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:52:35,666 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:52:35,666 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:52:35,666 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:52:35,666 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:52:35,666 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:52:35,666 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:52:35,666 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:52:35,666 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:52:35,666 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:52:35,667 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:52:35,667 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:52:35,667 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:52:35,667 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:52:35,669 INFO sqlalchemy.engine.base.Engine Thread-355 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:52:35,669 INFO sqlalchemy.engine.base.Engine Thread-355 : (0,)
2020-05-27 19:52:35,670 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:35,670 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:52:35,671 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:52:35,671 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:52:35,671 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:35,671 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:52:35,671 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:52:35,671 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:52:35,671 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:52:35,671 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:52:35,671 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:52:35,671 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:35,672 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:52:35,672 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:52:35,672 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:52:35,672 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:52:35,672 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:52:35,672 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:52:35,672 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:52:35,672 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:52:35,672 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:52:35,672 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:52:35,672 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:52:35,673 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:52:35,673 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:52:35,673 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:52:35,673 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:52:35,673 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:52:35,673 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:52:35,673 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:52:35,673 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:52:35,673 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:52:35,673 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:52:35,673 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:52:35,674 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:52:35,674 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:52:35,674 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:52:35,674 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:52:35,674 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:52:35,674 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:52:35,674 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:52:35,674 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:52:35,674 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:52:35,674 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:52:35,674 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:52:35,675 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:52:35,675 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:52:35,675 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:52:35,675 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (128, 'Informational', 'info_event', 127, 0, 0, 1)
2020-05-27 19:52:35,675 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:52:35,675 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:52:35,675 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:52:35,675 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:52:35,675 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:52:35,675 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:52:35,675 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:52:35,676 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:52:35,676 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:52:35,676 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:52:35,676 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:52:35,676 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:52:35,676 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:52:35,676 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 19:52:35,676 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:52:35,676 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:52:35,676 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:52:35,676 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:52:35,677 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:52:35,677 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:52:35,677 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:52:35,677 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:52:35,677 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:52:35,677 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:52:35,677 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:52:35,677 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:52:35,677 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:52:35,677 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:52:35,677 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:52:35,678 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:52:35,678 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:52:35,678 DEBUG sqlalchemy.engine.base.Engine Thread-355 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:52:35,681 INFO sqlalchemy.engine.base.Engine Thread-355 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:52:35,681 INFO sqlalchemy.engine.base.Engine Thread-355 : ('128', 'background-color: #ADD8E6; color: #000000;', 128)
2020-05-27 19:52:35,682 INFO sqlalchemy.engine.base.Engine Thread-355 : COMMIT
2020-05-27 19:52:35,717 INFO sqlalchemy.engine.base.Engine Thread-356 : BEGIN (implicit)
2020-05-27 19:52:35,718 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:35,718 INFO sqlalchemy.engine.base.Engine Thread-356 : (1, 1)
2020-05-27 19:52:35,719 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:35,719 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:35,722 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:35,722 INFO sqlalchemy.engine.base.Engine Thread-356 : ('philip', 1, 1)
2020-05-27 19:52:35,722 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:35,723 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:35,725 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:52:35,725 INFO sqlalchemy.engine.base.Engine Thread-356 : (0,)
2020-05-27 19:52:35,725 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:35,726 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:52:35,726 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:52:35,726 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:52:35,726 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:52:35,726 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:52:35,726 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:52:35,726 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:52:35,726 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:52:35,726 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:52:35,727 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:52:35,727 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:52:35,727 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:52:35,727 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:52:35,727 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:52:35,727 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:52:35,727 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:52:35,727 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:52:35,727 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:52:35,727 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:52:35,727 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:52:35,728 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:52:35,728 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:52:35,728 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:52:35,730 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:52:35,730 INFO sqlalchemy.engine.base.Engine Thread-356 : (127, 1)
2020-05-27 19:52:35,730 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:35,731 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:52:35,732 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:52:35,732 INFO sqlalchemy.engine.base.Engine Thread-356 : (127,)
2020-05-27 19:52:35,732 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:35,733 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:52:35,733 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:52:35,733 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 19:52:35,733 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:52:35,737 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:35,737 INFO sqlalchemy.engine.base.Engine Thread-356 : ('philip', 1, 1)
2020-05-27 19:52:35,738 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:35,738 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:35,742 INFO sqlalchemy.engine.base.Engine Thread-356 : ROLLBACK
2020-05-27 19:52:36,001 INFO sqlalchemy.engine.base.Engine Thread-366 : BEGIN (implicit)
2020-05-27 19:52:36,004 INFO sqlalchemy.engine.base.Engine Thread-366 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:36,004 INFO sqlalchemy.engine.base.Engine Thread-366 : (1, 1)
2020-05-27 19:52:36,006 INFO sqlalchemy.engine.base.Engine Thread-369 : BEGIN (implicit)
2020-05-27 19:52:36,007 INFO sqlalchemy.engine.base.Engine Thread-369 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:36,007 INFO sqlalchemy.engine.base.Engine Thread-369 : (1, 1)
2020-05-27 19:52:36,008 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:36,008 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:36,009 INFO sqlalchemy.engine.base.Engine Thread-366 : ROLLBACK
2020-05-27 19:52:36,010 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:36,010 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:36,011 INFO sqlalchemy.engine.base.Engine Thread-369 : ROLLBACK
2020-05-27 19:52:36,014 INFO sqlalchemy.engine.base.Engine Thread-367 : BEGIN (implicit)
2020-05-27 19:52:36,015 INFO sqlalchemy.engine.base.Engine Thread-367 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:36,015 INFO sqlalchemy.engine.base.Engine Thread-367 : (1, 1)
2020-05-27 19:52:36,018 INFO sqlalchemy.engine.base.Engine Thread-368 : BEGIN (implicit)
2020-05-27 19:52:36,019 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:36,020 INFO sqlalchemy.engine.base.Engine Thread-368 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:36,021 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:36,021 INFO sqlalchemy.engine.base.Engine Thread-368 : (1, 1)
2020-05-27 19:52:36,022 INFO sqlalchemy.engine.base.Engine Thread-367 : ROLLBACK
2020-05-27 19:52:36,023 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:36,023 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:36,024 INFO sqlalchemy.engine.base.Engine Thread-368 : ROLLBACK
2020-05-27 19:52:36,038 INFO sqlalchemy.engine.base.Engine Thread-370 : BEGIN (implicit)
2020-05-27 19:52:36,039 INFO sqlalchemy.engine.base.Engine Thread-370 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:36,039 INFO sqlalchemy.engine.base.Engine Thread-370 : (1, 1)
2020-05-27 19:52:36,040 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:36,040 DEBUG sqlalchemy.engine.base.Engine Thread-370 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:36,041 INFO sqlalchemy.engine.base.Engine Thread-370 : ROLLBACK
2020-05-27 19:52:37,344 INFO sqlalchemy.engine.base.Engine Thread-371 : BEGIN (implicit)
2020-05-27 19:52:37,345 INFO sqlalchemy.engine.base.Engine Thread-371 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:37,345 INFO sqlalchemy.engine.base.Engine Thread-371 : (1, 1)
2020-05-27 19:52:37,345 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:37,346 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:37,349 INFO sqlalchemy.engine.base.Engine Thread-371 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:37,349 INFO sqlalchemy.engine.base.Engine Thread-371 : ('philip', 1, 1)
2020-05-27 19:52:37,350 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:37,350 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:37,351 INFO sqlalchemy.engine.base.Engine Thread-371 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:52:37,352 INFO sqlalchemy.engine.base.Engine Thread-371 : ('129', 1)
2020-05-27 19:52:37,352 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:37,352 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:52:37,354 INFO sqlalchemy.engine.base.Engine Thread-371 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:52:37,354 INFO sqlalchemy.engine.base.Engine Thread-371 : (0,)
2020-05-27 19:52:37,355 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:37,355 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:52:37,355 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:52:37,355 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:52:37,355 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:52:37,355 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:52:37,355 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:52:37,355 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:52:37,356 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:52:37,356 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:52:37,356 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:52:37,356 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:52:37,356 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:52:37,356 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:52:37,356 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:52:37,356 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:52:37,356 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:52:37,356 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:52:37,356 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:52:37,356 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:52:37,357 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:52:37,357 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:52:37,357 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:52:37,357 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:52:37,358 INFO sqlalchemy.engine.base.Engine Thread-371 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:52:37,359 INFO sqlalchemy.engine.base.Engine Thread-371 : (0,)
2020-05-27 19:52:37,359 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:37,360 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:52:37,360 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:52:37,360 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:52:37,360 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:37,360 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:52:37,360 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:52:37,360 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:52:37,360 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:52:37,360 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:52:37,360 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:52:37,360 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:37,360 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:52:37,360 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:52:37,361 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:52:37,361 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:52:37,361 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:52:37,361 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:52:37,361 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:52:37,361 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:52:37,361 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:52:37,361 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:52:37,361 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:52:37,361 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:52:37,361 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:52:37,361 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:52:37,361 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:52:37,362 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:52:37,362 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:52:37,362 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:52:37,362 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:52:37,362 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:52:37,362 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:52:37,362 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:52:37,362 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:52:37,362 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:52:37,362 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:52:37,362 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:52:37,362 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:52:37,363 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:52:37,363 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:52:37,363 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:52:37,363 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:52:37,363 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:52:37,363 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:52:37,363 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:52:37,363 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:52:37,363 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:52:37,363 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:52:37,363 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:52:37,363 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:52:37,364 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:52:37,364 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:52:37,364 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:52:37,364 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:52:37,364 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:52:37,364 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:52:37,364 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:52:37,364 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:52:37,364 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:52:37,364 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:52:37,364 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:52:37,364 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 19:52:37,364 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:52:37,365 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:52:37,365 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:52:37,365 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:52:37,365 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:52:37,365 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:52:37,365 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:52:37,365 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:52:37,365 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:52:37,365 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:52:37,365 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:52:37,365 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:52:37,365 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:52:37,366 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:52:37,366 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:52:37,366 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:52:37,366 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:52:37,366 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:52:37,372 INFO sqlalchemy.engine.base.Engine Thread-371 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:37,372 INFO sqlalchemy.engine.base.Engine Thread-371 : ('philip', 1, 1)
2020-05-27 19:52:37,373 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:37,373 DEBUG sqlalchemy.engine.base.Engine Thread-371 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:37,376 INFO sqlalchemy.engine.base.Engine Thread-371 : ROLLBACK
2020-05-27 19:52:37,610 INFO sqlalchemy.engine.base.Engine Thread-381 : BEGIN (implicit)
2020-05-27 19:52:37,612 INFO sqlalchemy.engine.base.Engine Thread-382 : BEGIN (implicit)
2020-05-27 19:52:37,613 INFO sqlalchemy.engine.base.Engine Thread-381 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:37,620 INFO sqlalchemy.engine.base.Engine Thread-381 : (1, 1)
2020-05-27 19:52:37,616 INFO sqlalchemy.engine.base.Engine Thread-383 : BEGIN (implicit)
2020-05-27 19:52:37,620 INFO sqlalchemy.engine.base.Engine Thread-382 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:37,621 INFO sqlalchemy.engine.base.Engine Thread-382 : (1, 1)
2020-05-27 19:52:37,621 INFO sqlalchemy.engine.base.Engine Thread-383 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:37,622 INFO sqlalchemy.engine.base.Engine Thread-383 : (1, 1)
2020-05-27 19:52:37,619 INFO sqlalchemy.engine.base.Engine Thread-384 : BEGIN (implicit)
2020-05-27 19:52:37,621 DEBUG sqlalchemy.engine.base.Engine Thread-381 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:37,623 INFO sqlalchemy.engine.base.Engine Thread-384 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:37,623 DEBUG sqlalchemy.engine.base.Engine Thread-383 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:37,624 DEBUG sqlalchemy.engine.base.Engine Thread-383 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:37,624 DEBUG sqlalchemy.engine.base.Engine Thread-381 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:37,626 INFO sqlalchemy.engine.base.Engine Thread-381 : ROLLBACK
2020-05-27 19:52:37,625 INFO sqlalchemy.engine.base.Engine Thread-383 : ROLLBACK
2020-05-27 19:52:37,624 INFO sqlalchemy.engine.base.Engine Thread-384 : (1, 1)
2020-05-27 19:52:37,623 DEBUG sqlalchemy.engine.base.Engine Thread-382 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:37,628 DEBUG sqlalchemy.engine.base.Engine Thread-382 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:37,629 INFO sqlalchemy.engine.base.Engine Thread-382 : ROLLBACK
2020-05-27 19:52:37,629 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:37,630 DEBUG sqlalchemy.engine.base.Engine Thread-384 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:37,631 INFO sqlalchemy.engine.base.Engine Thread-384 : ROLLBACK
2020-05-27 19:52:37,645 INFO sqlalchemy.engine.base.Engine Thread-385 : BEGIN (implicit)
2020-05-27 19:52:37,646 INFO sqlalchemy.engine.base.Engine Thread-385 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:37,646 INFO sqlalchemy.engine.base.Engine Thread-385 : (1, 1)
2020-05-27 19:52:37,647 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:37,647 DEBUG sqlalchemy.engine.base.Engine Thread-385 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:37,648 INFO sqlalchemy.engine.base.Engine Thread-385 : ROLLBACK
2020-05-27 19:52:49,097 INFO sqlalchemy.engine.base.Engine Thread-386 : BEGIN (implicit)
2020-05-27 19:52:49,098 INFO sqlalchemy.engine.base.Engine Thread-386 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:49,098 INFO sqlalchemy.engine.base.Engine Thread-386 : (1, 1)
2020-05-27 19:52:49,099 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:49,100 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:49,102 INFO sqlalchemy.engine.base.Engine Thread-386 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:49,102 INFO sqlalchemy.engine.base.Engine Thread-386 : ('philip', 1, 1)
2020-05-27 19:52:49,103 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:49,103 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:49,104 INFO sqlalchemy.engine.base.Engine Thread-386 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:52:49,105 INFO sqlalchemy.engine.base.Engine Thread-386 : ('129', 1)
2020-05-27 19:52:49,105 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:49,105 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:52:49,108 INFO sqlalchemy.engine.base.Engine Thread-386 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:52:49,108 INFO sqlalchemy.engine.base.Engine Thread-386 : (0,)
2020-05-27 19:52:49,109 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:49,109 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:52:49,109 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:52:49,109 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:52:49,109 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:52:49,109 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:52:49,109 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:52:49,110 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:52:49,110 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:52:49,110 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:52:49,110 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:52:49,110 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:52:49,110 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:52:49,110 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:52:49,110 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:52:49,110 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:52:49,110 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:52:49,110 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:52:49,111 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:52:49,111 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:52:49,111 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:52:49,111 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:52:49,111 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:52:49,111 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:52:49,113 INFO sqlalchemy.engine.base.Engine Thread-386 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:52:49,113 INFO sqlalchemy.engine.base.Engine Thread-386 : (0,)
2020-05-27 19:52:49,114 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:49,115 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:52:49,115 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:52:49,115 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:52:49,115 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:49,115 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:52:49,115 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:52:49,115 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:52:49,115 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:52:49,115 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:52:49,115 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:52:49,115 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:49,116 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:52:49,116 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:52:49,116 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:52:49,116 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:52:49,116 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:52:49,116 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:52:49,116 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:52:49,116 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:52:49,116 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:52:49,116 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (129, 'Heightened Awareness Period (HAP)', 'hap_event', 127, 0, 0, 1)
2020-05-27 19:52:49,116 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:52:49,117 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:52:49,117 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:52:49,117 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:52:49,117 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:52:49,117 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:52:49,117 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:52:49,117 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:52:49,117 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:52:49,117 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:52:49,117 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:52:49,117 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:52:49,118 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:52:49,118 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:52:49,118 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:52:49,118 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:52:49,118 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:52:49,118 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:52:49,118 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:52:49,118 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:52:49,118 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:52:49,118 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:52:49,118 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:52:49,119 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:52:49,119 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:52:49,119 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:52:49,119 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:52:49,119 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:52:49,119 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:52:49,119 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:52:49,119 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:52:49,119 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:52:49,119 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:52:49,119 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:52:49,120 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:52:49,120 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:52:49,120 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:52:49,120 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:52:49,120 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:52:49,120 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:52:49,120 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 19:52:49,120 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:52:49,120 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:52:49,120 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:52:49,120 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:52:49,121 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:52:49,121 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:52:49,121 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:52:49,121 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:52:49,121 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:52:49,121 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:52:49,121 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:52:49,121 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:52:49,121 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:52:49,121 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:52:49,122 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:52:49,122 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:52:49,122 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:52:49,122 DEBUG sqlalchemy.engine.base.Engine Thread-386 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:52:49,125 INFO sqlalchemy.engine.base.Engine Thread-386 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:52:49,125 INFO sqlalchemy.engine.base.Engine Thread-386 : ('129', 'background-color: #48D1CC; color: #000000;', 129)
2020-05-27 19:52:49,126 INFO sqlalchemy.engine.base.Engine Thread-386 : COMMIT
2020-05-27 19:52:49,171 INFO sqlalchemy.engine.base.Engine Thread-387 : BEGIN (implicit)
2020-05-27 19:52:49,171 INFO sqlalchemy.engine.base.Engine Thread-387 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:49,172 INFO sqlalchemy.engine.base.Engine Thread-387 : (1, 1)
2020-05-27 19:52:49,172 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:49,172 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:49,174 INFO sqlalchemy.engine.base.Engine Thread-387 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:49,175 INFO sqlalchemy.engine.base.Engine Thread-387 : ('philip', 1, 1)
2020-05-27 19:52:49,175 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:49,175 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:49,177 INFO sqlalchemy.engine.base.Engine Thread-387 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:52:49,177 INFO sqlalchemy.engine.base.Engine Thread-387 : (0,)
2020-05-27 19:52:49,178 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:49,178 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:52:49,178 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:52:49,178 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:52:49,178 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:52:49,179 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:52:49,179 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:52:49,179 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:52:49,179 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:52:49,179 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:52:49,179 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:52:49,179 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:52:49,179 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:52:49,179 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:52:49,179 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:52:49,179 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:52:49,180 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:52:49,180 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:52:49,180 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:52:49,180 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:52:49,180 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:52:49,180 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:52:49,180 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:52:49,180 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:52:49,183 INFO sqlalchemy.engine.base.Engine Thread-387 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:52:49,183 INFO sqlalchemy.engine.base.Engine Thread-387 : (127, 1)
2020-05-27 19:52:49,183 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:49,184 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:52:49,185 INFO sqlalchemy.engine.base.Engine Thread-387 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:52:49,185 INFO sqlalchemy.engine.base.Engine Thread-387 : (127,)
2020-05-27 19:52:49,186 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:49,186 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:52:49,186 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:52:49,186 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 19:52:49,186 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:52:49,190 INFO sqlalchemy.engine.base.Engine Thread-387 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:49,190 INFO sqlalchemy.engine.base.Engine Thread-387 : ('philip', 1, 1)
2020-05-27 19:52:49,191 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:49,191 DEBUG sqlalchemy.engine.base.Engine Thread-387 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:49,195 INFO sqlalchemy.engine.base.Engine Thread-387 : ROLLBACK
2020-05-27 19:52:49,465 INFO sqlalchemy.engine.base.Engine Thread-397 : BEGIN (implicit)
2020-05-27 19:52:49,466 INFO sqlalchemy.engine.base.Engine Thread-397 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:49,466 INFO sqlalchemy.engine.base.Engine Thread-397 : (1, 1)
2020-05-27 19:52:49,470 INFO sqlalchemy.engine.base.Engine Thread-398 : BEGIN (implicit)
2020-05-27 19:52:49,471 INFO sqlalchemy.engine.base.Engine Thread-398 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:49,471 INFO sqlalchemy.engine.base.Engine Thread-398 : (1, 1)
2020-05-27 19:52:49,472 DEBUG sqlalchemy.engine.base.Engine Thread-397 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:49,472 DEBUG sqlalchemy.engine.base.Engine Thread-397 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:49,473 INFO sqlalchemy.engine.base.Engine Thread-397 : ROLLBACK
2020-05-27 19:52:49,474 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:49,474 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:49,475 INFO sqlalchemy.engine.base.Engine Thread-398 : ROLLBACK
2020-05-27 19:52:49,479 INFO sqlalchemy.engine.base.Engine Thread-399 : BEGIN (implicit)
2020-05-27 19:52:49,481 INFO sqlalchemy.engine.base.Engine Thread-400 : BEGIN (implicit)
2020-05-27 19:52:49,483 INFO sqlalchemy.engine.base.Engine Thread-399 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:49,484 INFO sqlalchemy.engine.base.Engine Thread-400 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:49,484 INFO sqlalchemy.engine.base.Engine Thread-399 : (1, 1)
2020-05-27 19:52:49,484 INFO sqlalchemy.engine.base.Engine Thread-400 : (1, 1)
2020-05-27 19:52:49,485 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:49,485 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:49,485 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:49,486 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:49,487 INFO sqlalchemy.engine.base.Engine Thread-399 : ROLLBACK
2020-05-27 19:52:49,488 INFO sqlalchemy.engine.base.Engine Thread-400 : ROLLBACK
2020-05-27 19:52:49,498 INFO sqlalchemy.engine.base.Engine Thread-401 : BEGIN (implicit)
2020-05-27 19:52:49,499 INFO sqlalchemy.engine.base.Engine Thread-401 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:49,499 INFO sqlalchemy.engine.base.Engine Thread-401 : (1, 1)
2020-05-27 19:52:49,500 DEBUG sqlalchemy.engine.base.Engine Thread-401 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:49,500 DEBUG sqlalchemy.engine.base.Engine Thread-401 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:49,501 INFO sqlalchemy.engine.base.Engine Thread-401 : ROLLBACK
2020-05-27 19:52:50,705 INFO sqlalchemy.engine.base.Engine Thread-402 : BEGIN (implicit)
2020-05-27 19:52:50,707 INFO sqlalchemy.engine.base.Engine Thread-402 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:50,707 INFO sqlalchemy.engine.base.Engine Thread-402 : (1, 1)
2020-05-27 19:52:50,707 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:50,708 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:50,710 INFO sqlalchemy.engine.base.Engine Thread-402 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:50,710 INFO sqlalchemy.engine.base.Engine Thread-402 : ('philip', 1, 1)
2020-05-27 19:52:50,711 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:50,711 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:50,713 INFO sqlalchemy.engine.base.Engine Thread-402 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:52:50,713 INFO sqlalchemy.engine.base.Engine Thread-402 : ('131', 1)
2020-05-27 19:52:50,713 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:50,714 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:52:50,717 INFO sqlalchemy.engine.base.Engine Thread-402 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:52:50,717 INFO sqlalchemy.engine.base.Engine Thread-402 : (0,)
2020-05-27 19:52:50,717 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:50,718 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:52:50,718 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:52:50,718 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:52:50,718 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:52:50,718 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:52:50,718 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:52:50,718 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:52:50,718 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:52:50,718 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:52:50,719 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:52:50,719 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:52:50,719 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:52:50,719 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:52:50,719 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:52:50,719 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:52:50,719 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:52:50,719 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:52:50,719 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:52:50,719 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:52:50,720 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:52:50,720 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:52:50,720 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:52:50,720 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:52:50,722 INFO sqlalchemy.engine.base.Engine Thread-402 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:52:50,722 INFO sqlalchemy.engine.base.Engine Thread-402 : (0,)
2020-05-27 19:52:50,723 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:52:50,723 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:52:50,723 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:52:50,723 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:52:50,724 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:50,724 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:52:50,724 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:52:50,724 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:52:50,724 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:52:50,724 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:52:50,724 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:52:50,724 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:52:50,724 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:52:50,724 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:52:50,724 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:52:50,725 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:52:50,725 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:52:50,725 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:52:50,725 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:52:50,725 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:52:50,725 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:52:50,725 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:52:50,725 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:52:50,725 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:52:50,725 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:52:50,725 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:52:50,726 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:52:50,726 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:52:50,726 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:52:50,726 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:52:50,726 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:52:50,726 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:52:50,726 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:52:50,726 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:52:50,726 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:52:50,726 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:52:50,726 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:52:50,726 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:52:50,726 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:52:50,727 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:52:50,727 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:52:50,727 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:52:50,727 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:52:50,727 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:52:50,727 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:52:50,727 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:52:50,727 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:52:50,727 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:52:50,727 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:52:50,727 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:52:50,727 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:52:50,728 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:52:50,728 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:52:50,728 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:52:50,728 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:52:50,728 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:52:50,728 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:52:50,728 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:52:50,728 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:52:50,728 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:52:50,728 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:52:50,728 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:52:50,728 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 19:52:50,729 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:52:50,729 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:52:50,729 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:52:50,729 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:52:50,729 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:52:50,729 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:52:50,729 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:52:50,729 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:52:50,729 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:52:50,729 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:52:50,729 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:52:50,729 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:52:50,730 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:52:50,730 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:52:50,730 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:52:50,730 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:52:50,730 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:52:50,730 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:52:50,735 INFO sqlalchemy.engine.base.Engine Thread-402 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:52:50,736 INFO sqlalchemy.engine.base.Engine Thread-402 : ('philip', 1, 1)
2020-05-27 19:52:50,736 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:50,736 DEBUG sqlalchemy.engine.base.Engine Thread-402 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:50,740 INFO sqlalchemy.engine.base.Engine Thread-402 : ROLLBACK
2020-05-27 19:52:50,991 INFO sqlalchemy.engine.base.Engine Thread-412 : BEGIN (implicit)
2020-05-27 19:52:50,994 INFO sqlalchemy.engine.base.Engine Thread-413 : BEGIN (implicit)
2020-05-27 19:52:50,997 INFO sqlalchemy.engine.base.Engine Thread-414 : BEGIN (implicit)
2020-05-27 19:52:51,000 INFO sqlalchemy.engine.base.Engine Thread-415 : BEGIN (implicit)
2020-05-27 19:52:51,001 INFO sqlalchemy.engine.base.Engine Thread-412 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:51,002 INFO sqlalchemy.engine.base.Engine Thread-413 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:51,003 INFO sqlalchemy.engine.base.Engine Thread-414 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:51,004 INFO sqlalchemy.engine.base.Engine Thread-415 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:51,004 INFO sqlalchemy.engine.base.Engine Thread-412 : (1, 1)
2020-05-27 19:52:51,004 INFO sqlalchemy.engine.base.Engine Thread-413 : (1, 1)
2020-05-27 19:52:51,005 INFO sqlalchemy.engine.base.Engine Thread-414 : (1, 1)
2020-05-27 19:52:51,005 INFO sqlalchemy.engine.base.Engine Thread-415 : (1, 1)
2020-05-27 19:52:51,006 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:51,007 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:51,006 DEBUG sqlalchemy.engine.base.Engine Thread-412 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:51,006 DEBUG sqlalchemy.engine.base.Engine Thread-414 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:51,008 DEBUG sqlalchemy.engine.base.Engine Thread-412 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:51,008 DEBUG sqlalchemy.engine.base.Engine Thread-414 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:51,009 INFO sqlalchemy.engine.base.Engine Thread-413 : ROLLBACK
2020-05-27 19:52:51,010 INFO sqlalchemy.engine.base.Engine Thread-412 : ROLLBACK
2020-05-27 19:52:51,011 INFO sqlalchemy.engine.base.Engine Thread-414 : ROLLBACK
2020-05-27 19:52:51,012 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:51,014 DEBUG sqlalchemy.engine.base.Engine Thread-415 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:51,015 INFO sqlalchemy.engine.base.Engine Thread-415 : ROLLBACK
2020-05-27 19:52:51,020 INFO sqlalchemy.engine.base.Engine Thread-416 : BEGIN (implicit)
2020-05-27 19:52:51,021 INFO sqlalchemy.engine.base.Engine Thread-416 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:52:51,021 INFO sqlalchemy.engine.base.Engine Thread-416 : (1, 1)
2020-05-27 19:52:51,022 DEBUG sqlalchemy.engine.base.Engine Thread-416 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:52:51,022 DEBUG sqlalchemy.engine.base.Engine Thread-416 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:52:51,023 INFO sqlalchemy.engine.base.Engine Thread-416 : ROLLBACK
2020-05-27 19:53:03,173 INFO sqlalchemy.engine.base.Engine Thread-417 : BEGIN (implicit)
2020-05-27 19:53:03,174 INFO sqlalchemy.engine.base.Engine Thread-417 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:03,174 INFO sqlalchemy.engine.base.Engine Thread-417 : (1, 1)
2020-05-27 19:53:03,175 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:03,175 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:03,178 INFO sqlalchemy.engine.base.Engine Thread-417 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:53:03,178 INFO sqlalchemy.engine.base.Engine Thread-417 : ('philip', 1, 1)
2020-05-27 19:53:03,178 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:03,179 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:03,180 INFO sqlalchemy.engine.base.Engine Thread-417 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:53:03,180 INFO sqlalchemy.engine.base.Engine Thread-417 : ('131', 1)
2020-05-27 19:53:03,181 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:53:03,181 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:53:03,184 INFO sqlalchemy.engine.base.Engine Thread-417 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:53:03,184 INFO sqlalchemy.engine.base.Engine Thread-417 : (0,)
2020-05-27 19:53:03,184 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:53:03,185 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:53:03,185 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:53:03,185 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:53:03,185 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:53:03,185 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:53:03,185 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:53:03,185 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:53:03,185 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:53:03,185 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:53:03,186 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:53:03,186 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:53:03,186 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:53:03,186 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:53:03,186 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:53:03,186 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:53:03,186 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:53:03,186 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:53:03,186 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:53:03,186 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:53:03,186 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:53:03,187 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:53:03,187 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:53:03,187 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:53:03,189 INFO sqlalchemy.engine.base.Engine Thread-417 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group != %s ORDER BY parameters.param_name
2020-05-27 19:53:03,189 INFO sqlalchemy.engine.base.Engine Thread-417 : (0,)
2020-05-27 19:53:03,190 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:53:03,190 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (114, '1. Logging in & Registration', 'To register, click on the link called "Register for access to secFBA".  <br/>Fill in the fields as required and press Register to submit the request.  <br/>Once the request is received, the team managing user requests will approve the access to allow you to login and start booking changes.', 113, 0, 0, 1)
2020-05-27 19:53:03,190 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (115, '2. Interface', 'Once you have logged in, the interface is as follows:<br/>\r\n<ul>\r\n<li><strong>Dashboard: </strong>your bookings in a table format you can sort/se ... (280 characters truncated) ... ils</li>\r\n<li><strong>Search: </strong>Simple search facility allowing keyword matching and links back to the booking calendar event.</li>\r\n</ul>', 113, 0, 0, 1)
2020-05-27 19:53:03,191 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 19:53:03,191 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:53:03,191 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (131, 'BaU Firewall Change', 'bau_event', 127, 0, 0, 1)
2020-05-27 19:53:03,191 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (123, 'Check Email', 'Please check your changes are ready to implement<br/>\r\nmore text<br/>\r\neven more text<br/>\r\nlast bit of text<br/>\r\n\r\n', 122, 117, 0, 0)
2020-05-27 19:53:03,191 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (117, 'Check Ready', 'CHECK', 116, 0, 0, 1)
2020-05-27 19:53:03,191 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:53:03,191 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-05-27 19:53:03,191 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:53:03,191 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-05-27 19:53:03,191 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (111, 'DIFFERENT_COMPLEXES_PER_DAY', '8', 109, 0, 0, 1)
2020-05-27 19:53:03,191 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-05-27 19:53:03,192 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (118, 'Entry Email', 'ENTRY', 116, 0, 0, 1)
2020-05-27 19:53:03,192 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (74, 'Everything', "{ \r\n'name' : 'Everything', \r\n'id' : 1, \r\n'query' : '' \r\n}", 71, 0, 0, 1)
2020-05-27 19:53:03,192 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (119, 'Exit Email', 'EXIT', 116, 0, 0, 1)
2020-05-27 19:53:03,192 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:53:03,192 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:53:03,192 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-05-27 19:53:03,192 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-05-27 19:53:03,192 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:53:03,192 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 19:53:03,192 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (29, 'Hour 00', '00', 3, 0, 0, 0)
2020-05-27 19:53:03,192 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (30, 'Hour 01', '01', 3, 0, 0, 0)
2020-05-27 19:53:03,193 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (31, 'Hour 02', '02', 3, 0, 0, 0)
2020-05-27 19:53:03,193 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (32, 'Hour 03', '03', 3, 0, 0, 0)
2020-05-27 19:53:03,193 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (33, 'Hour 04', '04', 3, 0, 0, 0)
2020-05-27 19:53:03,193 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (34, 'Hour 05', '05', 3, 0, 0, 0)
2020-05-27 19:53:03,193 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (35, 'Hour 06', '06', 3, 0, 0, 0)
2020-05-27 19:53:03,193 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (36, 'Hour 07', '07', 3, 0, 0, 0)
2020-05-27 19:53:03,193 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (37, 'Hour 08', '08', 3, 0, 0, 0)
2020-05-27 19:53:03,193 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (38, 'Hour 09', '09', 3, 0, 0, 0)
2020-05-27 19:53:03,193 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (39, 'Hour 10', '10', 3, 0, 0, 0)
2020-05-27 19:53:03,193 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (40, 'Hour 11', '11', 3, 0, 0, 0)
2020-05-27 19:53:03,194 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (41, 'Hour 12', '12', 3, 0, 0, 0)
2020-05-27 19:53:03,194 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (42, 'Hour 13', '13', 3, 0, 0, 0)
2020-05-27 19:53:03,194 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (43, 'Hour 14', '14', 3, 0, 0, 0)
2020-05-27 19:53:03,194 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (44, 'Hour 15', '15', 3, 0, 0, 0)
2020-05-27 19:53:03,194 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (45, 'Hour 16', '16', 3, 0, 0, 0)
2020-05-27 19:53:03,194 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (46, 'Hour 17', '17', 3, 0, 0, 0)
2020-05-27 19:53:03,194 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (47, 'Hour 18', '18', 3, 0, 0, 0)
2020-05-27 19:53:03,194 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (48, 'Hour 19', '19', 3, 0, 0, 0)
2020-05-27 19:53:03,194 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (49, 'Hour 20', '20', 3, 0, 0, 0)
2020-05-27 19:53:03,194 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (50, 'Hour 21', '21', 3, 0, 0, 0)
2020-05-27 19:53:03,194 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (51, 'Hour 22', '22', 3, 0, 0, 0)
2020-05-27 19:53:03,194 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (52, 'Hour 23', '23', 3, 0, 0, 0)
2020-05-27 19:53:03,195 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 19:53:03,195 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:53:03,195 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-05-27 19:53:03,195 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-05-27 19:53:03,195 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:53:03,195 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 19:53:03,195 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-05-27 19:53:03,195 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 19:53:03,195 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (53, 'Minute 00', '00', 4, 0, 0, 0)
2020-05-27 19:53:03,195 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (54, 'Minute 15', '15', 4, 0, 0, 0)
2020-05-27 19:53:03,195 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (55, 'Minute 30', '30', 4, 0, 0, 0)
2020-05-27 19:53:03,196 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (56, 'Minute 45', '45', 4, 0, 0, 0)
2020-05-27 19:53:03,196 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (57, 'Minute 59', '59', 4, 0, 0, 0)
2020-05-27 19:53:03,196 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-05-27 19:53:03,196 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 19:53:03,196 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 19:53:03,196 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 19:53:03,196 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (121, 'OPERATIONS_EMAILS', 'test@test.com; test2@test.com; test3@test.com', 120, 0, 0, 1)
2020-05-27 19:53:03,196 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-05-27 19:53:03,196 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (72, 'Parameters', '{\r\n\'name\' : \'Parameters\',\r\n\'id\' : 2,\r\n\'query\' : \'parameter.param_name.like("%{}%")\'\r\n}', 71, 0, 0, 1)
2020-05-27 19:53:03,196 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-05-27 19:53:03,196 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-05-27 19:53:03,197 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-05-27 19:53:03,197 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-05-27 19:53:03,197 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-05-27 19:53:03,197 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-05-27 19:53:03,197 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (110, 'TOTAL_CHANGES_PER_COMPLEX_PER_DAY', '1', 109, 0, 0, 1)
2020-05-27 19:53:03,197 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (112, 'TOTAL_CHANGES_PER_DAY', '16', 109, 0, 0, 1)
2020-05-27 19:53:03,197 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (126, 'TOTAL_SLOTS_PER_CHANGE', '8', 109, 0, 0, 0)
2020-05-27 19:53:03,197 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 19:53:03,197 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (73, 'Users', '{ \r\n\'name\' : \'Users\',\r\n\'id\' : 3,\r\n\'query\' : \'users.forename.like("%{}%") | users.surname.like("%{}%")\' \r\n}', 71, 0, 0, 1)
2020-05-27 19:53:03,197 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-05-27 19:53:03,197 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-05-27 19:53:03,198 DEBUG sqlalchemy.engine.base.Engine Thread-417 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 19:53:03,201 INFO sqlalchemy.engine.base.Engine Thread-417 : UPDATE parameters SET id=%s, param_value=%s WHERE parameters.id = %s
2020-05-27 19:53:03,201 INFO sqlalchemy.engine.base.Engine Thread-417 : ('131', 'background-color: #FFDAB9; color: #000000;', 131)
2020-05-27 19:53:03,201 INFO sqlalchemy.engine.base.Engine Thread-417 : COMMIT
2020-05-27 19:53:03,237 INFO sqlalchemy.engine.base.Engine Thread-418 : BEGIN (implicit)
2020-05-27 19:53:03,238 INFO sqlalchemy.engine.base.Engine Thread-418 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:03,239 INFO sqlalchemy.engine.base.Engine Thread-418 : (1, 1)
2020-05-27 19:53:03,239 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:03,239 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:03,242 INFO sqlalchemy.engine.base.Engine Thread-418 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:53:03,242 INFO sqlalchemy.engine.base.Engine Thread-418 : ('philip', 1, 1)
2020-05-27 19:53:03,243 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:03,243 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:03,245 INFO sqlalchemy.engine.base.Engine Thread-418 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:53:03,245 INFO sqlalchemy.engine.base.Engine Thread-418 : (0,)
2020-05-27 19:53:03,246 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:53:03,246 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:53:03,246 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:53:03,246 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:53:03,246 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:53:03,246 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:53:03,246 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:53:03,247 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:53:03,247 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:53:03,247 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:53:03,247 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:53:03,247 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:53:03,247 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:53:03,247 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:53:03,247 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:53:03,247 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:53:03,247 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:53:03,248 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:53:03,248 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:53:03,248 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:53:03,248 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:53:03,248 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:53:03,248 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:53:03,248 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:53:03,250 INFO sqlalchemy.engine.base.Engine Thread-418 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:53:03,250 INFO sqlalchemy.engine.base.Engine Thread-418 : (127, 1)
2020-05-27 19:53:03,251 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:53:03,251 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:53:03,252 INFO sqlalchemy.engine.base.Engine Thread-418 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:53:03,252 INFO sqlalchemy.engine.base.Engine Thread-418 : (127,)
2020-05-27 19:53:03,253 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:53:03,253 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:53:03,253 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:53:03,253 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 19:53:03,253 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:53:03,257 INFO sqlalchemy.engine.base.Engine Thread-418 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:53:03,257 INFO sqlalchemy.engine.base.Engine Thread-418 : ('philip', 1, 1)
2020-05-27 19:53:03,258 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:03,258 DEBUG sqlalchemy.engine.base.Engine Thread-418 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:03,261 INFO sqlalchemy.engine.base.Engine Thread-418 : ROLLBACK
2020-05-27 19:53:03,528 INFO sqlalchemy.engine.base.Engine Thread-428 : BEGIN (implicit)
2020-05-27 19:53:03,529 INFO sqlalchemy.engine.base.Engine Thread-428 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:03,529 INFO sqlalchemy.engine.base.Engine Thread-428 : (1, 1)
2020-05-27 19:53:03,530 DEBUG sqlalchemy.engine.base.Engine Thread-428 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:03,532 DEBUG sqlalchemy.engine.base.Engine Thread-428 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:03,534 INFO sqlalchemy.engine.base.Engine Thread-429 : BEGIN (implicit)
2020-05-27 19:53:03,535 INFO sqlalchemy.engine.base.Engine Thread-428 : ROLLBACK
2020-05-27 19:53:03,536 INFO sqlalchemy.engine.base.Engine Thread-429 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:03,539 INFO sqlalchemy.engine.base.Engine Thread-429 : (1, 1)
2020-05-27 19:53:03,538 INFO sqlalchemy.engine.base.Engine Thread-430 : BEGIN (implicit)
2020-05-27 19:53:03,540 INFO sqlalchemy.engine.base.Engine Thread-430 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:03,540 INFO sqlalchemy.engine.base.Engine Thread-430 : (1, 1)
2020-05-27 19:53:03,541 DEBUG sqlalchemy.engine.base.Engine Thread-429 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:03,541 DEBUG sqlalchemy.engine.base.Engine Thread-430 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:03,545 DEBUG sqlalchemy.engine.base.Engine Thread-430 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:03,544 DEBUG sqlalchemy.engine.base.Engine Thread-429 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:03,547 INFO sqlalchemy.engine.base.Engine Thread-429 : ROLLBACK
2020-05-27 19:53:03,546 INFO sqlalchemy.engine.base.Engine Thread-430 : ROLLBACK
2020-05-27 19:53:03,544 INFO sqlalchemy.engine.base.Engine Thread-431 : BEGIN (implicit)
2020-05-27 19:53:03,550 INFO sqlalchemy.engine.base.Engine Thread-431 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:03,550 INFO sqlalchemy.engine.base.Engine Thread-431 : (1, 1)
2020-05-27 19:53:03,551 DEBUG sqlalchemy.engine.base.Engine Thread-431 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:03,551 DEBUG sqlalchemy.engine.base.Engine Thread-431 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:03,552 INFO sqlalchemy.engine.base.Engine Thread-431 : ROLLBACK
2020-05-27 19:53:03,561 INFO sqlalchemy.engine.base.Engine Thread-432 : BEGIN (implicit)
2020-05-27 19:53:03,562 INFO sqlalchemy.engine.base.Engine Thread-432 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:03,562 INFO sqlalchemy.engine.base.Engine Thread-432 : (1, 1)
2020-05-27 19:53:03,562 DEBUG sqlalchemy.engine.base.Engine Thread-432 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:03,562 DEBUG sqlalchemy.engine.base.Engine Thread-432 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:03,563 INFO sqlalchemy.engine.base.Engine Thread-432 : ROLLBACK
2020-05-27 19:53:06,388 INFO sqlalchemy.engine.base.Engine Thread-433 : BEGIN (implicit)
2020-05-27 19:53:06,390 INFO sqlalchemy.engine.base.Engine Thread-433 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:53:06,390 INFO sqlalchemy.engine.base.Engine Thread-433 : ('Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:53:06,391 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType')
2020-05-27 19:53:06,391 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', 'background-color: #ADD8E6; color: #000000;', 'Date Event')
2020-05-27 19:53:06,391 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', 'background-color: #ADD8E6; color: #000000;', 'Date Event')
2020-05-27 19:53:06,391 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 19:53:06,391 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:53:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', 'background-color: #ADD8E6; color: #000000;', 'Date Event')
2020-05-27 19:53:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 19:53:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:53:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Informational', 'background-color: #ADD8E6; color: #000000;', 'Date Event')
2020-05-27 19:53:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 19:53:06,392 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:53:06,396 INFO sqlalchemy.engine.base.Engine Thread-433 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.class AS anon_1_class, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS class, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:53:06,396 INFO sqlalchemy.engine.base.Engine Thread-433 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), 'NO')
2020-05-27 19:53:06,397 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_class', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:06,401 INFO sqlalchemy.engine.base.Engine Thread-433 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:53:06,401 INFO sqlalchemy.engine.base.Engine Thread-433 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:53:06,402 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:06,402 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:53:06,402 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:53:06,402 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:53:06,402 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:53:06,402 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:53:06,402 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:53:06,402 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:53:06,407 INFO sqlalchemy.engine.base.Engine Thread-433 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:53:06,407 INFO sqlalchemy.engine.base.Engine Thread-433 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:53:06,408 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:06,408 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:53:06,408 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:53:06,408 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:53:06,408 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:53:06,408 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:53:06,408 DEBUG sqlalchemy.engine.base.Engine Thread-433 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:53:06,410 INFO sqlalchemy.engine.base.Engine Thread-433 : ROLLBACK
2020-05-27 19:53:06,480 INFO sqlalchemy.engine.base.Engine Thread-434 : BEGIN (implicit)
2020-05-27 19:53:06,481 INFO sqlalchemy.engine.base.Engine Thread-434 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:06,481 INFO sqlalchemy.engine.base.Engine Thread-434 : (1, 1)
2020-05-27 19:53:06,482 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:06,482 DEBUG sqlalchemy.engine.base.Engine Thread-434 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:06,483 INFO sqlalchemy.engine.base.Engine Thread-434 : ROLLBACK
2020-05-27 19:53:26,100 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 19:53:26,100 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:53:26,102 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 19:53:26,102 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-27 19:53:26,103 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 19:53:26,103 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:53:26,103 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 19:53:26,103 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-27 19:53:26,104 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-27 19:53:26,104 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:53:26,104 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-27 19:53:26,104 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-27 19:53:26,105 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 19:53:26,105 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:53:26,105 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 19:53:26,105 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 19:53:26,106 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 19:53:26,106 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:53:26,107 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 19:53:26,107 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:53:26,108 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 19:53:26,108 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:53:26,108 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-27 19:53:26,111 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:26,111 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-05-27 19:53:26,112 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:26,112 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:26,115 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:53:26,115 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-05-27 19:53:26,116 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:26,116 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:26,119 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:53:26,119 INFO sqlalchemy.engine.base.Engine Thread-2 : (0,)
2020-05-27 19:53:26,120 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:53:26,120 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 19:53:26,120 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 19:53:26,120 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 19:53:26,120 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 19:53:26,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 19:53:26,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 19:53:26,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 19:53:26,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 19:53:26,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 19:53:26,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:53:26,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 19:53:26,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 19:53:26,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 19:53:26,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 19:53:26,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 19:53:26,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 19:53:26,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 19:53:26,122 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 19:53:26,122 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 19:53:26,122 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 19:53:26,122 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 19:53:26,122 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 19:53:26,122 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 19:53:26,124 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-05-27 19:53:26,124 INFO sqlalchemy.engine.base.Engine Thread-2 : (127, 1)
2020-05-27 19:53:26,125 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:53:26,125 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 19:53:26,126 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 19:53:26,126 INFO sqlalchemy.engine.base.Engine Thread-2 : (127,)
2020-05-27 19:53:26,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:53:26,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:53:26,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:53:26,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 19:53:26,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-05-27 19:53:26,205 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:53:26,205 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-05-27 19:53:26,206 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:26,206 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:26,210 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-27 19:53:26,464 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-05-27 19:53:26,469 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:26,469 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-05-27 19:53:26,473 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:26,474 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:26,479 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-05-27 19:53:26,484 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-05-27 19:53:26,484 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-05-27 19:53:26,485 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-05-27 19:53:26,486 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:26,487 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:26,490 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-05-27 19:53:26,489 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-05-27 19:53:26,489 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:26,490 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-05-27 19:53:26,491 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:26,491 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:26,491 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:26,492 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:26,493 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:26,492 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:26,494 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-05-27 19:53:26,495 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-05-27 19:53:26,496 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-05-27 19:53:26,516 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-05-27 19:53:26,517 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:26,517 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-05-27 19:53:26,518 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:26,518 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:26,519 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-05-27 19:53:27,477 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-05-27 19:53:27,483 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:53:27,483 INFO sqlalchemy.engine.base.Engine Thread-18 : ()
2020-05-27 19:53:27,485 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:53:27,485 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:53:27,485 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:53:27,486 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:53:27,486 INFO sqlalchemy.engine.base.Engine Thread-18 : (100,)
2020-05-27 19:53:27,487 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:53:27,487 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:53:27,487 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:53:27,487 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:53:27,488 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:53:27,488 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:53:27,490 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:27,490 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-05-27 19:53:27,490 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:27,490 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:27,505 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:53:27,505 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-05-27 19:53:27,505 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:27,506 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:27,507 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-05-27 19:53:27,751 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-05-27 19:53:27,754 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-05-27 19:53:27,755 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:27,758 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:27,759 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-05-27 19:53:27,762 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-05-27 19:53:27,762 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-05-27 19:53:27,762 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-05-27 19:53:27,763 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:27,766 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-05-27 19:53:27,765 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:27,765 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:27,767 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:27,766 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:27,771 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-05-27 19:53:27,768 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-05-27 19:53:27,764 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:27,772 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-05-27 19:53:27,767 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:27,773 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:27,773 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:27,774 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-05-27 19:53:27,774 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:27,776 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-05-27 19:53:27,782 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-05-27 19:53:27,784 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:27,784 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-05-27 19:53:27,784 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:27,784 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:27,786 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-05-27 19:53:27,808 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-05-27 19:53:27,811 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:53:27,811 INFO sqlalchemy.engine.base.Engine Thread-33 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:53:27,812 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-05-27 19:53:27,812 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 19:53:27,812 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:53:27,812 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 19:53:27,816 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:53:27,816 INFO sqlalchemy.engine.base.Engine Thread-33 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:53:27,817 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:27,821 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:53:27,822 INFO sqlalchemy.engine.base.Engine Thread-33 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:53:27,822 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:27,827 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:53:27,827 INFO sqlalchemy.engine.base.Engine Thread-33 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:53:27,828 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:27,828 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:53:27,829 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-05-27 19:53:27,854 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-05-27 19:53:27,856 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:53:27,856 INFO sqlalchemy.engine.base.Engine Thread-34 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:53:27,857 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-05-27 19:53:27,857 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 19:53:27,857 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:53:27,857 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 19:53:27,861 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:53:27,861 INFO sqlalchemy.engine.base.Engine Thread-34 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:53:27,862 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:27,866 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:53:27,866 INFO sqlalchemy.engine.base.Engine Thread-34 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:53:27,867 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:27,871 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:53:27,871 INFO sqlalchemy.engine.base.Engine Thread-34 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:53:27,872 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:27,872 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:53:27,873 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-05-27 19:53:52,033 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-05-27 19:53:52,038 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:53:52,038 INFO sqlalchemy.engine.base.Engine Thread-35 : ()
2020-05-27 19:53:52,039 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:53:52,040 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:53:52,040 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:53:52,041 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:53:52,042 INFO sqlalchemy.engine.base.Engine Thread-35 : (100,)
2020-05-27 19:53:52,042 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:53:52,042 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:53:52,043 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:53:52,043 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:53:52,043 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:53:52,043 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:53:52,045 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:52,045 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-05-27 19:53:52,046 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:52,046 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:52,050 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:53:52,050 INFO sqlalchemy.engine.base.Engine Thread-35 : ('philip', 1, 1)
2020-05-27 19:53:52,051 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:52,051 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:52,053 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-05-27 19:53:52,315 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-05-27 19:53:52,316 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:52,316 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-05-27 19:53:52,319 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-05-27 19:53:52,320 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:52,320 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-05-27 19:53:52,321 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:52,322 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:52,322 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:52,325 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-05-27 19:53:52,325 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:52,326 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-05-27 19:53:52,328 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:52,330 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-05-27 19:53:52,331 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-05-27 19:53:52,331 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-05-27 19:53:52,334 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:52,335 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-05-27 19:53:52,335 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:52,335 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:52,336 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-05-27 19:53:52,337 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:52,337 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:52,338 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-05-27 19:53:52,345 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-05-27 19:53:52,346 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:53:52,346 INFO sqlalchemy.engine.base.Engine Thread-49 : (1, 1)
2020-05-27 19:53:52,347 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:53:52,347 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:53:52,348 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-05-27 19:53:52,374 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-05-27 19:53:52,376 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:53:52,376 INFO sqlalchemy.engine.base.Engine Thread-50 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:53:52,376 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-05-27 19:53:52,377 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 19:53:52,377 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:53:52,377 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 19:53:52,381 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:53:52,381 INFO sqlalchemy.engine.base.Engine Thread-50 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:53:52,382 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:52,387 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:53:52,387 INFO sqlalchemy.engine.base.Engine Thread-50 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:53:52,388 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:52,391 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:53:52,392 INFO sqlalchemy.engine.base.Engine Thread-50 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:53:52,392 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:52,393 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:53:52,393 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-05-27 19:53:52,421 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-05-27 19:53:52,422 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:53:52,422 INFO sqlalchemy.engine.base.Engine Thread-51 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:53:52,424 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-05-27 19:53:52,424 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 19:53:52,424 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:53:52,424 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 19:53:52,428 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType`, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.type) LIKE lower(%s)
2020-05-27 19:53:52,428 INFO sqlalchemy.engine.base.Engine Thread-51 : ('Lightblue', 'Darkblue', 'Date Event', 'Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-05-27 19:53:52,429 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:52,433 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:53:52,433 INFO sqlalchemy.engine.base.Engine Thread-51 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:53:52,434 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:52,438 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:53:52,438 INFO sqlalchemy.engine.base.Engine Thread-51 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:53:52,439 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:53:52,439 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:53:52,440 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-05-27 19:59:06,680 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-05-27 19:59:06,680 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:59:06,682 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 19:59:06,682 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-05-27 19:59:06,683 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-05-27 19:59:06,683 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:59:06,683 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-05-27 19:59:06,683 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-05-27 19:59:06,684 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-05-27 19:59:06,684 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:59:06,684 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-05-27 19:59:06,684 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-05-27 19:59:06,685 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-05-27 19:59:06,685 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:59:06,686 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-05-27 19:59:06,686 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-05-27 19:59:06,686 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-05-27 19:59:06,687 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:59:06,687 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-05-27 19:59:06,687 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:59:06,688 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-05-27 19:59:06,688 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-05-27 19:59:06,689 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-05-27 19:59:06,691 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:59:06,691 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Date Event', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:59:06,693 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-05-27 19:59:06,693 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical) that is very important', 'Informational', 'background-color: #ADD8E6; color: #000000;', 'Date Event')
2020-05-27 19:59:06,693 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Informational', 'background-color: #ADD8E6; color: #000000;', 'Date Event')
2020-05-27 19:59:06,693 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 19:59:06,693 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:59:06,693 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Informational', 'background-color: #ADD8E6; color: #000000;', 'Date Event')
2020-05-27 19:59:06,693 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 19:59:06,693 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:59:06,694 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'Informational', 'background-color: #ADD8E6; color: #000000;', 'Date Event')
2020-05-27 19:59:06,694 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 19:59:06,694 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'Change Freeze RED', '', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:59:06,699 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:59:06,699 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:59:06,700 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:59:06,701 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 1, 2, 0), datetime.datetime(2020, 3, 1, 4, 0), 'Test Booking 6', 'Philip Troon', 'test', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 13), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:59:06,701 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 9, 2, 0), datetime.datetime(2020, 2, 9, 4, 0), 'Test Booking zz', 'Philip Troon', 'zzz', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 12, 16), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:59:06,701 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 15, 2, 0), datetime.datetime(2020, 2, 15, 4, 0), "Bob's test booking", 'bob', 'project doing something', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 30, 5), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:59:06,701 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestA', 'philip', 'TestA', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 0, 13, 22), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:59:06,701 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking1', 'philip', 'Booking for testing rules against complex 1', 'Made Up CheckPoint', datetime.datetime(2020, 2, 20, 23, 58, 3), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:59:06,701 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking2', 'philip', 'Booking for testing rules #2 on Fortigate', 'Made Up Fortigate', datetime.datetime(2020, 2, 21, 0, 3, 10), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:59:06,701 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 8, 2, 0), datetime.datetime(2020, 3, 8, 5, 0), 'A better title for this change', 'bob', 'werwer', 'Made Up CheckPoint', datetime.datetime(2020, 2, 21, 1, 50, 30), 'Lightgreen', 'black', 'Booking Event (Approved)')
2020-05-27 19:59:06,706 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:59:06,706 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 12, 31, 0, 0))
2020-05-27 19:59:06,707 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:59:06,707 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 3, 2, 0), datetime.datetime(2020, 3, 3, 4, 0), 'Test Booking', 'Philip Troon', 'testing', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:59:06,707 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 29, 2, 0), datetime.datetime(2020, 2, 29, 4, 0), 'Test Booking 2', 'Philip Troon', 'testing 2', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:59:06,707 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:59:06,707 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 4, 2, 0), datetime.datetime(2020, 3, 4, 4, 0), 'TestB', 'philip', 'test b', 'Made Up CheckPoint', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:59:06,707 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking3', 'philip', 'Testing booking #3', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:59:06,707 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 3, 7, 2, 0), datetime.datetime(2020, 3, 7, 4, 0), 'Booking4', 'philip', 'Booking test #4 on Fortigate', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:59:06,709 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-05-27 19:59:06,781 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-05-27 19:59:06,787 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:59:06,787 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-05-27 19:59:06,788 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:06,788 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:06,813 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-05-27 19:59:12,204 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-05-27 19:59:12,210 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 19:59:12,210 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-05-27 19:59:12,211 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 19:59:12,212 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 19:59:12,212 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 19:59:12,214 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 19:59:12,214 INFO sqlalchemy.engine.base.Engine Thread-4 : (100,)
2020-05-27 19:59:12,215 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 19:59:12,215 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 19:59:12,215 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 19:59:12,215 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 19:59:12,215 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 19:59:12,215 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 19:59:12,217 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:59:12,217 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-05-27 19:59:12,217 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:12,218 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:12,284 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:59:12,284 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-05-27 19:59:12,285 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:12,285 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:12,287 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-05-27 19:59:12,555 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-05-27 19:59:12,556 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:59:12,556 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-05-27 19:59:12,564 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:12,564 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:12,565 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-05-27 19:59:12,566 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-05-27 19:59:12,566 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-05-27 19:59:12,567 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:59:12,569 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-05-27 19:59:12,568 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:59:12,570 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-05-27 19:59:12,567 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-05-27 19:59:12,571 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:59:12,571 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:12,572 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:12,572 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-05-27 19:59:12,572 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:12,573 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:12,574 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-05-27 19:59:12,574 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-05-27 19:59:12,575 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:12,576 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:12,577 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-05-27 19:59:12,586 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-05-27 19:59:12,587 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:59:12,587 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-05-27 19:59:12,588 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:12,588 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:12,589 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-05-27 19:59:12,609 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-05-27 19:59:12,610 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:59:12,610 INFO sqlalchemy.engine.base.Engine Thread-19 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:59:12,611 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-05-27 19:59:12,611 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 19:59:12,612 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:59:12,612 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 19:59:12,615 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:59:12,616 INFO sqlalchemy.engine.base.Engine Thread-19 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:59:12,617 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:59:12,621 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:59:12,621 INFO sqlalchemy.engine.base.Engine Thread-19 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:59:12,622 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:59:12,622 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:59:12,623 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-05-27 19:59:12,649 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-05-27 19:59:12,651 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 19:59:12,651 INFO sqlalchemy.engine.base.Engine Thread-20 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:59:12,654 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-05-27 19:59:12,654 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 19:59:12,654 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 19:59:12,654 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 19:59:12,659 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 19:59:12,659 INFO sqlalchemy.engine.base.Engine Thread-20 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:59:12,661 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:59:12,665 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 19:59:12,665 INFO sqlalchemy.engine.base.Engine Thread-20 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 19:59:12,666 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 19:59:12,668 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 19:59:12,669 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-05-27 19:59:57,254 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-05-27 19:59:57,255 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:59:57,255 INFO sqlalchemy.engine.base.Engine Thread-22 : (1, 1)
2020-05-27 19:59:57,256 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:57,256 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:57,259 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:59:57,259 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', 1, 1)
2020-05-27 19:59:57,259 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:57,260 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:57,269 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 19:59:57,269 INFO sqlalchemy.engine.base.Engine Thread-22 : ()
2020-05-27 19:59:57,270 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 19:59:57,270 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 19:59:57,271 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 19:59:57,271 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 19:59:57,271 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 19:59:57,271 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 19:59:57,271 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 19:59:57,271 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 19:59:57,271 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 19:59:57,271 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 19:59:57,271 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 19:59:57,292 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 19:59:57,293 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', 1, 1)
2020-05-27 19:59:57,293 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:57,294 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:57,296 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-05-27 19:59:57,559 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-05-27 19:59:57,561 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:59:57,561 INFO sqlalchemy.engine.base.Engine Thread-33 : (1, 1)
2020-05-27 19:59:57,564 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-05-27 19:59:57,564 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:57,567 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-05-27 19:59:57,568 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:59:57,571 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-05-27 19:59:57,571 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:57,572 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:59:57,573 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-05-27 19:59:57,574 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:59:57,575 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-05-27 19:59:57,575 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-05-27 19:59:57,574 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-05-27 19:59:57,576 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:57,577 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:57,578 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-05-27 19:59:57,578 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:57,578 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:57,579 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:57,579 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:57,580 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-05-27 19:59:57,581 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-05-27 19:59:57,591 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-05-27 19:59:57,593 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 19:59:57,593 INFO sqlalchemy.engine.base.Engine Thread-36 : (1, 1)
2020-05-27 19:59:57,593 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 19:59:57,594 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 19:59:57,595 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-05-27 20:00:02,374 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-05-27 20:00:02,375 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:00:02,376 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-05-27 20:00:02,377 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:00:02,377 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:00:02,379 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:00:02,380 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-05-27 20:00:02,380 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:00:02,381 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:00:02,383 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 20:00:02,383 INFO sqlalchemy.engine.base.Engine Thread-37 : ('0', 1)
2020-05-27 20:00:02,384 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 20:00:02,386 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:00:02,386 INFO sqlalchemy.engine.base.Engine Thread-37 : (82,)
2020-05-27 20:00:02,387 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:00:02,387 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 20:00:02,388 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 20:00:02,388 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 20:00:02,389 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 20:00:02,389 INFO sqlalchemy.engine.base.Engine Thread-37 : (1,)
2020-05-27 20:00:02,390 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:00:02,390 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 20:00:02,390 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 20:00:02,392 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 20:00:02,393 INFO sqlalchemy.engine.base.Engine Thread-37 : ()
2020-05-27 20:00:02,393 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 20:00:02,393 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 20:00:02,393 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 20:00:02,395 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:00:02,395 INFO sqlalchemy.engine.base.Engine Thread-37 : (127,)
2020-05-27 20:00:02,395 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:00:02,395 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:00:02,396 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:00:02,396 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:00:02,396 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 20:00:02,397 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:00:02,397 INFO sqlalchemy.engine.base.Engine Thread-37 : (105,)
2020-05-27 20:00:02,398 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:00:02,398 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 20:00:02,398 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 20:00:02,432 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:00:02,432 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-05-27 20:00:02,432 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:00:02,433 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:00:02,435 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-05-27 20:00:31,617 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-05-27 20:00:31,618 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:00:31,618 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-05-27 20:00:31,619 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:00:31,619 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:00:31,621 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:00:31,621 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-05-27 20:00:31,622 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:00:31,622 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:00:31,623 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 20:00:31,624 INFO sqlalchemy.engine.base.Engine Thread-47 : ('0', 1)
2020-05-27 20:00:31,624 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 20:00:31,629 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:00:31,629 INFO sqlalchemy.engine.base.Engine Thread-47 : (82,)
2020-05-27 20:00:31,629 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:00:31,630 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 20:00:31,630 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 20:00:31,630 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 20:00:31,631 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 20:00:31,632 INFO sqlalchemy.engine.base.Engine Thread-47 : (1,)
2020-05-27 20:00:31,632 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:00:31,632 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 20:00:31,632 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 20:00:31,634 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 20:00:31,634 INFO sqlalchemy.engine.base.Engine Thread-47 : ()
2020-05-27 20:00:31,634 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 20:00:31,635 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 20:00:31,635 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 20:00:31,636 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:00:31,636 INFO sqlalchemy.engine.base.Engine Thread-47 : (127,)
2020-05-27 20:00:31,637 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:00:31,637 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:00:31,637 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:00:31,637 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:00:31,637 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 20:00:31,638 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:00:31,638 INFO sqlalchemy.engine.base.Engine Thread-47 : (105,)
2020-05-27 20:00:31,639 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:00:31,639 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 20:00:31,639 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 20:00:31,646 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:00:31,646 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-05-27 20:00:31,647 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:00:31,647 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:00:31,651 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-05-27 20:00:45,841 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-05-27 20:00:45,842 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:00:45,842 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-05-27 20:00:45,843 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:00:45,843 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:00:45,845 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:00:45,845 INFO sqlalchemy.engine.base.Engine Thread-57 : ('philip', 1, 1)
2020-05-27 20:00:45,846 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:00:45,846 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:00:45,848 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 20:00:45,848 INFO sqlalchemy.engine.base.Engine Thread-57 : ('0', 1)
2020-05-27 20:00:45,849 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 20:00:45,851 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:00:45,852 INFO sqlalchemy.engine.base.Engine Thread-57 : (82,)
2020-05-27 20:00:45,852 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:00:45,852 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 20:00:45,852 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 20:00:45,852 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 20:00:45,854 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 20:00:45,854 INFO sqlalchemy.engine.base.Engine Thread-57 : (1,)
2020-05-27 20:00:45,855 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:00:45,855 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 20:00:45,855 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 20:00:45,856 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 20:00:45,856 INFO sqlalchemy.engine.base.Engine Thread-57 : ()
2020-05-27 20:00:45,857 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 20:00:45,857 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 20:00:45,857 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 20:00:45,858 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:00:45,858 INFO sqlalchemy.engine.base.Engine Thread-57 : (127,)
2020-05-27 20:00:45,859 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:00:45,859 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:00:45,859 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:00:45,859 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:00:45,859 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 20:00:45,860 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:00:45,860 INFO sqlalchemy.engine.base.Engine Thread-57 : (105,)
2020-05-27 20:00:45,861 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:00:45,861 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 20:00:45,861 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 20:00:45,864 INFO sqlalchemy.engine.base.Engine Thread-57 : INSERT INTO datesofinterest (id, doi_name, doi_priority, doi_comment, doi_start_dt, doi_end_dt, doi_regions, doi_type, doi_filter, doi_hap) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
2020-05-27 20:00:45,864 INFO sqlalchemy.engine.base.Engine Thread-57 : ('0', 'HAP Locked', 83, '', datetime.datetime(2020, 5, 29, 0, 0), datetime.datetime(2020, 5, 29, 23, 45), '', 130, '', 107)
2020-05-27 20:00:45,865 INFO sqlalchemy.engine.base.Engine Thread-57 : COMMIT
2020-05-27 20:00:45,901 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-05-27 20:00:45,902 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:00:45,902 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-05-27 20:00:45,903 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:00:45,903 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:00:45,905 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:00:45,905 INFO sqlalchemy.engine.base.Engine Thread-58 : ('philip', 1, 1)
2020-05-27 20:00:45,906 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:00:45,906 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:00:45,914 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 20:00:45,915 INFO sqlalchemy.engine.base.Engine Thread-58 : ()
2020-05-27 20:00:45,915 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 20:00:45,915 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:00:45,916 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:00:45,916 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 20:00:45,916 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 20:00:45,916 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 20:00:45,916 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 20:00:45,916 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (20, 'HAP Locked', '', datetime.datetime(2020, 5, 29, 0, 0), datetime.datetime(2020, 5, 29, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-05-27 20:00:45,916 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:00:45,916 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:00:45,916 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 20:00:45,916 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 20:00:45,921 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:00:45,921 INFO sqlalchemy.engine.base.Engine Thread-58 : ('philip', 1, 1)
2020-05-27 20:00:45,921 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:00:45,922 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:00:45,925 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-05-27 20:00:49,366 INFO sqlalchemy.engine.base.Engine Thread-68 : BEGIN (implicit)
2020-05-27 20:00:49,368 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 20:00:49,368 INFO sqlalchemy.engine.base.Engine Thread-68 : ()
2020-05-27 20:00:49,369 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 20:00:49,370 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 20:00:49,370 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 20:00:49,372 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:00:49,372 INFO sqlalchemy.engine.base.Engine Thread-68 : (100,)
2020-05-27 20:00:49,373 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:00:49,373 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 20:00:49,373 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 20:00:49,373 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 20:00:49,373 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 20:00:49,373 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 20:00:49,375 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:00:49,376 INFO sqlalchemy.engine.base.Engine Thread-68 : (1, 1)
2020-05-27 20:00:49,376 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:00:49,376 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:00:49,381 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:00:49,381 INFO sqlalchemy.engine.base.Engine Thread-68 : ('philip', 1, 1)
2020-05-27 20:00:49,382 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:00:49,382 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:00:49,384 INFO sqlalchemy.engine.base.Engine Thread-68 : ROLLBACK
2020-05-27 20:00:49,630 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-05-27 20:00:49,632 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 20:00:49,632 INFO sqlalchemy.engine.base.Engine Thread-78 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:00:49,633 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-05-27 20:00:49,633 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 20:00:49,633 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 20:00:49,633 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 20:00:49,633 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (datetime.datetime(2020, 5, 29, 0, 0), datetime.datetime(2020, 5, 29, 23, 45), 'HAP Locked', '', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 20:00:49,639 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 20:00:49,639 INFO sqlalchemy.engine.base.Engine Thread-78 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:00:49,640 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 20:00:49,643 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 20:00:49,644 INFO sqlalchemy.engine.base.Engine Thread-78 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:00:49,644 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 20:00:49,645 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 20:00:49,646 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-05-27 20:00:49,672 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-05-27 20:00:49,674 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 20:00:49,674 INFO sqlalchemy.engine.base.Engine Thread-79 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:00:49,674 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-05-27 20:00:49,675 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 20:00:49,675 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 20:00:49,675 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 20:00:49,675 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (datetime.datetime(2020, 5, 29, 0, 0), datetime.datetime(2020, 5, 29, 23, 45), 'HAP Locked', '', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 20:00:49,679 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 20:00:49,679 INFO sqlalchemy.engine.base.Engine Thread-79 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:00:49,680 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 20:00:49,683 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 20:00:49,684 INFO sqlalchemy.engine.base.Engine Thread-79 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:00:49,684 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 20:00:49,685 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 20:00:49,685 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-05-27 20:14:05,829 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-05-27 20:14:05,831 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:14:05,831 INFO sqlalchemy.engine.base.Engine Thread-80 : (1, 1)
2020-05-27 20:14:05,833 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:14:05,834 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:14:05,836 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:14:05,836 INFO sqlalchemy.engine.base.Engine Thread-80 : ('philip', 1, 1)
2020-05-27 20:14:05,837 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:14:05,837 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:14:05,846 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 20:14:05,846 INFO sqlalchemy.engine.base.Engine Thread-80 : ()
2020-05-27 20:14:05,847 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 20:14:05,847 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:14:05,847 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:14:05,847 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 20:14:05,847 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 20:14:05,847 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 20:14:05,847 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 20:14:05,848 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (20, 'HAP Locked', '', datetime.datetime(2020, 5, 29, 0, 0), datetime.datetime(2020, 5, 29, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-05-27 20:14:05,848 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:14:05,848 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:14:05,848 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 20:14:05,848 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 20:14:05,852 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:14:05,852 INFO sqlalchemy.engine.base.Engine Thread-80 : ('philip', 1, 1)
2020-05-27 20:14:05,853 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:14:05,853 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:14:05,856 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-05-27 20:14:41,259 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-05-27 20:14:41,260 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:14:41,260 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-05-27 20:14:41,261 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:14:41,262 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:14:41,264 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:14:41,264 INFO sqlalchemy.engine.base.Engine Thread-90 : ('philip', 1, 1)
2020-05-27 20:14:41,265 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:14:41,265 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:14:41,267 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 20:14:41,267 INFO sqlalchemy.engine.base.Engine Thread-90 : ('10', 1)
2020-05-27 20:14:41,268 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 20:14:41,269 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 129, None, 106)
2020-05-27 20:14:41,271 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:14:41,272 INFO sqlalchemy.engine.base.Engine Thread-90 : (82,)
2020-05-27 20:14:41,272 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:14:41,272 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 20:14:41,273 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 20:14:41,273 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 20:14:41,274 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 20:14:41,274 INFO sqlalchemy.engine.base.Engine Thread-90 : (1,)
2020-05-27 20:14:41,275 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:14:41,275 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 20:14:41,275 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 20:14:41,277 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 20:14:41,277 INFO sqlalchemy.engine.base.Engine Thread-90 : ()
2020-05-27 20:14:41,277 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 20:14:41,278 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 20:14:41,278 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 20:14:41,279 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:14:41,279 INFO sqlalchemy.engine.base.Engine Thread-90 : (127,)
2020-05-27 20:14:41,280 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:14:41,280 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:14:41,280 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:14:41,280 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:14:41,280 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 20:14:41,282 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:14:41,282 INFO sqlalchemy.engine.base.Engine Thread-90 : (105,)
2020-05-27 20:14:41,282 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:14:41,282 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 20:14:41,283 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 20:14:41,290 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:14:41,290 INFO sqlalchemy.engine.base.Engine Thread-90 : ('philip', 1, 1)
2020-05-27 20:14:41,291 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:14:41,291 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:14:41,294 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-05-27 20:14:52,025 INFO sqlalchemy.engine.base.Engine Thread-100 : BEGIN (implicit)
2020-05-27 20:14:52,026 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:14:52,026 INFO sqlalchemy.engine.base.Engine Thread-100 : (1, 1)
2020-05-27 20:14:52,026 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:14:52,027 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:14:52,029 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:14:52,029 INFO sqlalchemy.engine.base.Engine Thread-100 : ('philip', 1, 1)
2020-05-27 20:14:52,030 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:14:52,030 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:14:52,031 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 20:14:52,031 INFO sqlalchemy.engine.base.Engine Thread-100 : ('10', 1)
2020-05-27 20:14:52,032 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 20:14:52,032 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 129, None, 106)
2020-05-27 20:14:52,035 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:14:52,035 INFO sqlalchemy.engine.base.Engine Thread-100 : (82,)
2020-05-27 20:14:52,036 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:14:52,036 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 20:14:52,036 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 20:14:52,036 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 20:14:52,037 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 20:14:52,038 INFO sqlalchemy.engine.base.Engine Thread-100 : (1,)
2020-05-27 20:14:52,038 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:14:52,038 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 20:14:52,038 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 20:14:52,040 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 20:14:52,040 INFO sqlalchemy.engine.base.Engine Thread-100 : ()
2020-05-27 20:14:52,040 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 20:14:52,040 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 20:14:52,041 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 20:14:52,042 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:14:52,042 INFO sqlalchemy.engine.base.Engine Thread-100 : (127,)
2020-05-27 20:14:52,042 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:14:52,043 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:14:52,043 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:14:52,043 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:14:52,043 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 20:14:52,044 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:14:52,044 INFO sqlalchemy.engine.base.Engine Thread-100 : (105,)
2020-05-27 20:14:52,045 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:14:52,045 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 20:14:52,045 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 20:14:52,047 INFO sqlalchemy.engine.base.Engine Thread-100 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_type=%s, doi_filter=%s WHERE datesofinterest.id = %s
2020-05-27 20:14:52,047 INFO sqlalchemy.engine.base.Engine Thread-100 : ('10', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 131, '', 10)
2020-05-27 20:14:52,048 INFO sqlalchemy.engine.base.Engine Thread-100 : COMMIT
2020-05-27 20:14:52,103 INFO sqlalchemy.engine.base.Engine Thread-101 : BEGIN (implicit)
2020-05-27 20:14:52,104 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:14:52,105 INFO sqlalchemy.engine.base.Engine Thread-101 : (1, 1)
2020-05-27 20:14:52,105 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:14:52,106 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:14:52,108 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:14:52,108 INFO sqlalchemy.engine.base.Engine Thread-101 : ('philip', 1, 1)
2020-05-27 20:14:52,109 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:14:52,109 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:14:52,120 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 20:14:52,120 INFO sqlalchemy.engine.base.Engine Thread-101 : ()
2020-05-27 20:14:52,121 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 20:14:52,121 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:14:52,121 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:14:52,121 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 20:14:52,122 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 20:14:52,122 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'BaU Firewall Change')
2020-05-27 20:14:52,122 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 20:14:52,122 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (20, 'HAP Locked', '', datetime.datetime(2020, 5, 29, 0, 0), datetime.datetime(2020, 5, 29, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-05-27 20:14:52,122 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:14:52,122 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:14:52,122 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 20:14:52,122 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 20:14:52,126 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:14:52,127 INFO sqlalchemy.engine.base.Engine Thread-101 : ('philip', 1, 1)
2020-05-27 20:14:52,127 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:14:52,128 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:14:52,131 INFO sqlalchemy.engine.base.Engine Thread-101 : ROLLBACK
2020-05-27 20:14:54,050 INFO sqlalchemy.engine.base.Engine Thread-111 : BEGIN (implicit)
2020-05-27 20:14:54,053 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 20:14:54,053 INFO sqlalchemy.engine.base.Engine Thread-111 : ()
2020-05-27 20:14:54,054 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 20:14:54,055 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 20:14:54,055 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 20:14:54,056 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:14:54,056 INFO sqlalchemy.engine.base.Engine Thread-111 : (100,)
2020-05-27 20:14:54,057 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:14:54,057 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 20:14:54,057 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 20:14:54,058 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 20:14:54,058 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 20:14:54,058 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 20:14:54,060 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:14:54,060 INFO sqlalchemy.engine.base.Engine Thread-111 : (1, 1)
2020-05-27 20:14:54,061 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:14:54,061 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:14:54,066 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:14:54,066 INFO sqlalchemy.engine.base.Engine Thread-111 : ('philip', 1, 1)
2020-05-27 20:14:54,067 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:14:54,067 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:14:54,069 INFO sqlalchemy.engine.base.Engine Thread-111 : ROLLBACK
2020-05-27 20:14:54,354 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-05-27 20:14:54,356 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 20:14:54,356 INFO sqlalchemy.engine.base.Engine Thread-121 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:14:54,357 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-05-27 20:14:54,358 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 20:14:54,358 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 20:14:54,358 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 20:14:54,358 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (datetime.datetime(2020, 5, 29, 0, 0), datetime.datetime(2020, 5, 29, 23, 45), 'HAP Locked', '', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 20:14:54,363 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 20:14:54,363 INFO sqlalchemy.engine.base.Engine Thread-121 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:14:54,364 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 20:14:54,368 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 20:14:54,368 INFO sqlalchemy.engine.base.Engine Thread-121 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:14:54,369 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 20:14:54,369 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 20:14:54,370 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-05-27 20:14:54,400 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-05-27 20:14:54,402 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 20:14:54,402 INFO sqlalchemy.engine.base.Engine Thread-122 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:14:54,403 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-05-27 20:14:54,403 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 20:14:54,403 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 20:14:54,403 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 20:14:54,403 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (datetime.datetime(2020, 5, 29, 0, 0), datetime.datetime(2020, 5, 29, 23, 45), 'HAP Locked', '', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 20:14:54,408 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 20:14:54,408 INFO sqlalchemy.engine.base.Engine Thread-122 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:14:54,409 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 20:14:54,413 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 20:14:54,413 INFO sqlalchemy.engine.base.Engine Thread-122 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:14:54,414 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 20:14:54,414 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 20:14:54,415 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-05-27 20:46:40,458 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-05-27 20:46:40,460 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:46:40,461 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-05-27 20:46:40,463 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:40,463 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:40,466 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:46:40,466 INFO sqlalchemy.engine.base.Engine Thread-123 : ('philip', 1, 1)
2020-05-27 20:46:40,467 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:40,467 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:40,469 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:46:40,469 INFO sqlalchemy.engine.base.Engine Thread-123 : (0,)
2020-05-27 20:46:40,470 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:46:40,470 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 20:46:40,470 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (109, 'Booking Core Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-05-27 20:46:40,471 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-05-27 20:46:40,471 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (122, 'Communication Email Content', 'Communication Email Content', 0, 0, 0, 0)
2020-05-27 20:46:40,471 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (116, 'Communication Parameters', 'Communication Parameters', 0, 0, 0, 1)
2020-05-27 20:46:40,471 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (100, 'Complex Type', 'Complex Type/Vendor', 0, 0, 0, 1)
2020-05-27 20:46:40,471 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (120, 'Email Groups', 'Email Groups', 0, 0, 0, 0)
2020-05-27 20:46:40,471 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (125, 'Email Suffix Validation', '^[a-zA-Z0-9\\.]+\\@test\\.co[m\\.uk]{,3}$', 0, 0, 0, 1)
2020-05-27 20:46:40,471 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-05-27 20:46:40,471 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (127, 'Event Types', 'Event Types', 0, 0, 0, 1)
2020-05-27 20:46:40,471 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-05-27 20:46:40,471 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-05-27 20:46:40,471 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (113, 'Help Content', 'Covers the usage of the system', 0, 0, 0, 1)
2020-05-27 20:46:40,471 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-05-27 20:46:40,471 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-05-27 20:46:40,472 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-05-27 20:46:40,472 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-05-27 20:46:40,472 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (124, 'Message of the Day', 'This system is in BETA and is subject to frequent change', 0, 0, 0, 1)
2020-05-27 20:46:40,472 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-05-27 20:46:40,472 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-05-27 20:46:40,472 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-05-27 20:46:40,472 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-05-27 20:46:40,472 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-05-27 20:46:40,474 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-05-27 20:46:40,474 INFO sqlalchemy.engine.base.Engine Thread-123 : (0, 1)
2020-05-27 20:46:40,475 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:46:40,475 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-05-27 20:46:40,476 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s
2020-05-27 20:46:40,476 INFO sqlalchemy.engine.base.Engine Thread-123 : (66,)
2020-05-27 20:46:40,477 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:46:40,477 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-05-27 20:46:40,477 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-05-27 20:46:40,499 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:46:40,499 INFO sqlalchemy.engine.base.Engine Thread-123 : ('philip', 1, 1)
2020-05-27 20:46:40,500 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:40,500 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:40,504 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-05-27 20:46:44,174 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-05-27 20:46:44,175 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:46:44,175 INFO sqlalchemy.engine.base.Engine Thread-133 : (1, 1)
2020-05-27 20:46:44,176 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:44,176 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:44,178 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:46:44,178 INFO sqlalchemy.engine.base.Engine Thread-133 : ('philip', 1, 1)
2020-05-27 20:46:44,179 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:44,179 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:44,188 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 20:46:44,188 INFO sqlalchemy.engine.base.Engine Thread-133 : ()
2020-05-27 20:46:44,188 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 20:46:44,189 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:46:44,189 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:46:44,189 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 20:46:44,189 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 20:46:44,189 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'BaU Firewall Change')
2020-05-27 20:46:44,189 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 20:46:44,189 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (20, 'HAP Locked', '', datetime.datetime(2020, 5, 29, 0, 0), datetime.datetime(2020, 5, 29, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-05-27 20:46:44,189 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:46:44,189 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:46:44,189 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 20:46:44,190 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 20:46:44,194 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:46:44,194 INFO sqlalchemy.engine.base.Engine Thread-133 : ('philip', 1, 1)
2020-05-27 20:46:44,194 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:44,195 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:44,197 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-05-27 20:46:45,946 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-05-27 20:46:45,948 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:46:45,948 INFO sqlalchemy.engine.base.Engine Thread-143 : (1, 1)
2020-05-27 20:46:45,948 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:45,949 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:45,952 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:46:45,952 INFO sqlalchemy.engine.base.Engine Thread-143 : ('philip', 1, 1)
2020-05-27 20:46:45,952 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:45,953 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:45,954 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 20:46:45,954 INFO sqlalchemy.engine.base.Engine Thread-143 : ('10', 1)
2020-05-27 20:46:45,955 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 20:46:45,955 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 131, '', 106)
2020-05-27 20:46:45,958 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:46:45,958 INFO sqlalchemy.engine.base.Engine Thread-143 : (82,)
2020-05-27 20:46:45,958 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:46:45,959 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 20:46:45,959 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 20:46:45,959 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 20:46:45,960 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 20:46:45,960 INFO sqlalchemy.engine.base.Engine Thread-143 : (1,)
2020-05-27 20:46:45,961 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:46:45,961 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 20:46:45,961 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 20:46:45,963 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 20:46:45,963 INFO sqlalchemy.engine.base.Engine Thread-143 : ()
2020-05-27 20:46:45,963 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 20:46:45,963 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 20:46:45,964 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 20:46:45,965 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:46:45,965 INFO sqlalchemy.engine.base.Engine Thread-143 : (127,)
2020-05-27 20:46:45,966 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:46:45,966 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:46:45,966 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:46:45,966 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:46:45,966 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 20:46:45,967 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:46:45,968 INFO sqlalchemy.engine.base.Engine Thread-143 : (105,)
2020-05-27 20:46:45,968 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:46:45,968 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 20:46:45,968 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 20:46:45,973 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:46:45,973 INFO sqlalchemy.engine.base.Engine Thread-143 : ('philip', 1, 1)
2020-05-27 20:46:45,974 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:45,974 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:45,977 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-05-27 20:46:51,155 INFO sqlalchemy.engine.base.Engine Thread-153 : BEGIN (implicit)
2020-05-27 20:46:51,156 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:46:51,156 INFO sqlalchemy.engine.base.Engine Thread-153 : (1, 1)
2020-05-27 20:46:51,157 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:51,157 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:51,159 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:46:51,160 INFO sqlalchemy.engine.base.Engine Thread-153 : ('philip', 1, 1)
2020-05-27 20:46:51,160 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:51,160 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:51,162 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_type AS datesofinterest_doi_type, datesofinterest.doi_filter AS datesofinterest_doi_filter, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-05-27 20:46:51,162 INFO sqlalchemy.engine.base.Engine Thread-153 : ('10', 1)
2020-05-27 20:46:51,162 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_type', 'datesofinterest_doi_filter', 'datesofinterest_doi_hap')
2020-05-27 20:46:51,163 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 131, '', 106)
2020-05-27 20:46:51,165 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:46:51,165 INFO sqlalchemy.engine.base.Engine Thread-153 : (82,)
2020-05-27 20:46:51,166 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:46:51,166 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-05-27 20:46:51,166 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-05-27 20:46:51,166 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-05-27 20:46:51,168 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-05-27 20:46:51,168 INFO sqlalchemy.engine.base.Engine Thread-153 : (1,)
2020-05-27 20:46:51,168 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:46:51,168 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-05-27 20:46:51,169 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-05-27 20:46:51,170 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT complexgroups.id AS complexgroups_id, complexgroups.group_name AS complexgroups_group_name, complexgroups.max_slots AS complexgroups_max_slots, complexgroups.group_members AS complexgroups_group_members, complexgroups.group_created AS complexgroups_group_created, complexgroups.bau_only AS complexgroups_bau_only, complexgroups.group_active AS complexgroups_group_active 
FROM complexgroups ORDER BY complexgroups.group_name ASC
2020-05-27 20:46:51,170 INFO sqlalchemy.engine.base.Engine Thread-153 : ()
2020-05-27 20:46:51,170 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('complexgroups_id', 'complexgroups_group_name', 'complexgroups_max_slots', 'complexgroups_group_members', 'complexgroups_group_created', 'complexgroups_bau_only', 'complexgroups_group_active')
2020-05-27 20:46:51,170 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (1, 'Test Group', 8, '1,2', datetime.datetime(2020, 5, 24, 16, 4, 21), 106, 67)
2020-05-27 20:46:51,171 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (2, 'Test Group 2', 5, '1,2', datetime.datetime(2020, 5, 24, 16, 12, 23), 106, 67)
2020-05-27 20:46:51,172 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:46:51,172 INFO sqlalchemy.engine.base.Engine Thread-153 : (127,)
2020-05-27 20:46:51,172 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:46:51,173 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (131, 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:46:51,173 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (129, 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:46:51,173 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (128, 'Informational', 'background-color: #ADD8E6; color: #000000;', 127, 0, 0, 1)
2020-05-27 20:46:51,173 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (130, 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 127, 0, 0, 1)
2020-05-27 20:46:51,174 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:46:51,174 INFO sqlalchemy.engine.base.Engine Thread-153 : (105,)
2020-05-27 20:46:51,175 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:46:51,175 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-05-27 20:46:51,175 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-05-27 20:46:51,177 INFO sqlalchemy.engine.base.Engine Thread-153 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_type=%s WHERE datesofinterest.id = %s
2020-05-27 20:46:51,177 INFO sqlalchemy.engine.base.Engine Thread-153 : ('10', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 129, 10)
2020-05-27 20:46:51,178 INFO sqlalchemy.engine.base.Engine Thread-153 : COMMIT
2020-05-27 20:46:51,220 INFO sqlalchemy.engine.base.Engine Thread-154 : BEGIN (implicit)
2020-05-27 20:46:51,221 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:46:51,221 INFO sqlalchemy.engine.base.Engine Thread-154 : (1, 1)
2020-05-27 20:46:51,222 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:51,222 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:51,224 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:46:51,224 INFO sqlalchemy.engine.base.Engine Thread-154 : ('philip', 1, 1)
2020-05-27 20:46:51,225 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:51,225 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:51,234 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_type = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-05-27 20:46:51,234 INFO sqlalchemy.engine.base.Engine Thread-154 : ()
2020-05-27 20:46:51,234 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-05-27 20:46:51,235 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:46:51,235 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:46:51,235 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (19, 'Change Freeze RED', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 14, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 20:46:51,235 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 20:46:51,235 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 20:46:51,235 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (18, 'Zone 2 BAU', 'GBR,IND', datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'High', 'No', 'BaU Firewall Change')
2020-05-27 20:46:51,235 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (20, 'HAP Locked', '', datetime.datetime(2020, 5, 29, 0, 0), datetime.datetime(2020, 5, 29, 23, 45), 'High', 'No', 'No Changes Allowed')
2020-05-27 20:46:51,235 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:46:51,236 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'Informational')
2020-05-27 20:46:51,236 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No Changes Allowed')
2020-05-27 20:46:51,236 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Heightened Awareness Period (HAP)')
2020-05-27 20:46:51,240 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:46:51,241 INFO sqlalchemy.engine.base.Engine Thread-154 : ('philip', 1, 1)
2020-05-27 20:46:51,241 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:51,241 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:51,245 INFO sqlalchemy.engine.base.Engine Thread-154 : ROLLBACK
2020-05-27 20:46:59,688 INFO sqlalchemy.engine.base.Engine Thread-164 : BEGIN (implicit)
2020-05-27 20:46:59,690 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-05-27 20:46:59,691 INFO sqlalchemy.engine.base.Engine Thread-164 : ()
2020-05-27 20:46:59,692 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-05-27 20:46:59,692 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'YYYYYYY', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, '', '', '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 5, 17, 20, 8, 4), 67)
2020-05-27 20:46:59,692 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'YYYYYYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 101, '', 61, 107, '06/02', '07/02', '0', '04:00', '06:00', 'NNNNNYY', '', 94, datetime.datetime(2020, 5, 17, 20, 9, 21), 67)
2020-05-27 20:46:59,694 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-05-27 20:46:59,694 INFO sqlalchemy.engine.base.Engine Thread-164 : (100,)
2020-05-27 20:46:59,695 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-05-27 20:46:59,695 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-05-27 20:46:59,695 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-05-27 20:46:59,695 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-05-27 20:46:59,696 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-05-27 20:46:59,696 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-05-27 20:46:59,698 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-05-27 20:46:59,698 INFO sqlalchemy.engine.base.Engine Thread-164 : (1, 1)
2020-05-27 20:46:59,699 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:59,699 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:59,703 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-05-27 20:46:59,703 INFO sqlalchemy.engine.base.Engine Thread-164 : ('philip', 1, 1)
2020-05-27 20:46:59,704 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-05-27 20:46:59,704 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@test.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 5, 17, 16, 46, 43), datetime.datetime(2020, 2, 18, 11, 33, 5), 'philip', 0)
2020-05-27 20:46:59,706 INFO sqlalchemy.engine.base.Engine Thread-164 : ROLLBACK
2020-05-27 20:46:59,997 INFO sqlalchemy.engine.base.Engine Thread-174 : BEGIN (implicit)
2020-05-27 20:46:59,999 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 20:46:59,999 INFO sqlalchemy.engine.base.Engine Thread-174 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:47:00,000 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-05-27 20:47:00,000 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 20:47:00,000 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 20:47:00,000 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 20:47:00,000 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (datetime.datetime(2020, 5, 29, 0, 0), datetime.datetime(2020, 5, 29, 23, 45), 'HAP Locked', '', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 20:47:00,004 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 20:47:00,004 INFO sqlalchemy.engine.base.Engine Thread-174 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:47:00,005 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 20:47:00,009 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 20:47:00,009 INFO sqlalchemy.engine.base.Engine Thread-174 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:47:00,010 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 20:47:00,010 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 20:47:00,011 INFO sqlalchemy.engine.base.Engine Thread-174 : ROLLBACK
2020-05-27 20:47:00,039 INFO sqlalchemy.engine.base.Engine Thread-175 : BEGIN (implicit)
2020-05-27 20:47:00,041 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.type AS anon_1_type, anon_1.style AS anon_1_style, anon_1.`eventType` AS `anon_1_eventType` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS type, parameters_1.param_value AS style, %s AS `eventType` 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_type = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1
2020-05-27 20:47:00,041 INFO sqlalchemy.engine.base.Engine Thread-175 : ('Date Event', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:47:00,042 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_type', 'anon_1_style', 'anon_1_eventType')
2020-05-27 20:47:00,042 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 20:47:00,042 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Heightened Awareness Period (HAP)', 'background-color: #48D1CC; color: #000000;', 'Date Event')
2020-05-27 20:47:00,042 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (datetime.datetime(2020, 5, 26, 2, 0), datetime.datetime(2020, 5, 26, 6, 0), 'Zone 2 BAU', 'Zone 2 BAU', 'BaU Firewall Change', 'background-color: #FFDAB9; color: #000000;', 'Date Event')
2020-05-27 20:47:00,042 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (datetime.datetime(2020, 5, 29, 0, 0), datetime.datetime(2020, 5, 29, 23, 45), 'HAP Locked', '', 'No Changes Allowed', 'background-color: #FFE4E1; color: #FF0000;', 'Date Event')
2020-05-27 20:47:00,046 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NOT NULL
2020-05-27 20:47:00,046 INFO sqlalchemy.engine.base.Engine Thread-175 : ('Lightgreen', 'black', 'Booking Event (Approved)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:47:00,047 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 20:47:00,051 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.owner AS anon_1_owner, anon_1.description AS anon_1_description, anon_1.complex AS anon_1_complex, anon_1.approved AS anon_1_approved, %s AS `backgroundColor`, %s AS `textColor`, %s AS `eventType` 
FROM (SELECT bookings_1.start_dt AS start, bookings_1.end_dt AS end, bookings_1.title AS title, bookings_1.owner_id AS owner, bookings_1.description AS description, complexes_1.complex_name AS complex, bookings_1.approved_date AS approved 
FROM bookings AS bookings_1, complexes AS complexes_1 
WHERE bookings_1.complex = complexes_1.id AND (bookings_1.start_dt BETWEEN %s AND %s OR bookings_1.end_dt BETWEEN %s AND %s OR bookings_1.start_dt < %s AND bookings_1.end_dt > %s)) AS anon_1 
WHERE anon_1.approved IS NULL
2020-05-27 20:47:00,051 INFO sqlalchemy.engine.base.Engine Thread-175 : ('Lightgray', 'black', 'Booking Event (Pending)', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-05-27 20:47:00,052 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_owner', 'anon_1_description', 'anon_1_complex', 'anon_1_approved', 'backgroundColor', 'textColor', 'eventType')
2020-05-27 20:47:00,052 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (datetime.datetime(2020, 5, 14, 2, 0), datetime.datetime(2020, 5, 14, 4, 0), 'Test Booking 3', 'Philip Troon', 'testing', 'Made Up Fortigate', None, 'Lightgray', 'black', 'Booking Event (Pending)')
2020-05-27 20:47:00,053 INFO sqlalchemy.engine.base.Engine Thread-175 : ROLLBACK
